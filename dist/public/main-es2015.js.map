{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_modals/add-player/add-player.component.ts","./src/app/_modals/add-player/add-player.component.html","./src/app/_modals/assign-badges/assign-badges.component.ts","./src/app/_modals/assign-badges/assign-badges.component.html","./src/app/_modals/assign-session/assign-session.component.ts","./src/app/_modals/assign-session/assign-session.component.html","./src/app/_modals/create-badge/create-badge.component.ts","./src/app/_modals/create-badge/create-badge.component.html","./src/app/_modals/edit-bracket-match/edit-bracket-match.component.ts","./src/app/_modals/edit-bracket-match/edit-bracket-match.component.html","./src/app/_modals/edit-staff/edit-staff.component.ts","./src/app/_modals/edit-staff/edit-staff.component.html","./src/app/_models/ta/event.ts","./src/app/_models/ta/forwardingPacket.ts","./src/app/_models/ta/gameplayModifiers.ts","./src/app/_models/ta/match.ts","./src/app/_models/ta/playerSpecificSettnigs.ts","./src/app/_models/ta/qualifierEvent.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/archive/archive.component.ts","./src/app/archive/archive.component.html","./src/app/awards2020/awards2020.component.ts","./src/app/awards2020/awards2020.component.html","./src/app/badges/badges.component.ts","./src/app/badges/badges.component.html","./src/app/bracket/bracket.component.ts","./src/app/bracket/bracket.component.html","./src/app/bracket/updateMatchDialog.html","./src/app/bracket/generateBracketDialog.html","./src/app/calendar/calendar.component.ts","./src/app/calendar/calendar.component.html","./src/app/confirm-dialog/confirm-dialog.component.ts","./src/app/confirm-dialog/confirm-dialog.component.html","./src/app/guards/auth-guard.guard.ts","./src/app/logs/logs.component.ts","./src/app/logs/logs.component.html","./src/app/map-pool/map-pool.component.ts","./src/app/map-pool/map-pool.component.html","./src/app/map-pool/addSongDialog.html","./src/app/map-pool/createPoolDialog.html","./src/app/mini-tourneys/mini-tourneys.component.ts","./src/app/mini-tourneys/mini-tourneys.component.html","./src/app/overlay-controller/overlay-controller.component.ts","./src/app/overlay-controller/overlay-controller.component.html","./src/app/overlay/overlay.component.ts","./src/app/overlay/overlay.component.html","./src/app/participants/participants.component.ts","./src/app/participants/participants.component.html","./src/app/participants/editCommentDialog.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/profile/editProfileDialog.html","./src/app/qualifiers/qualifiers.component.ts","./src/app/qualifiers/qualifiers.component.html","./src/app/rankings/rankings.component.ts","./src/app/rankings/rankings.component.html","./src/app/rules/rules.component.ts","./src/app/rules/rules.component.html","./src/app/services/meta-tag.service.ts","./src/app/services/toast.service.ts","./src/app/services/user-auth.service.ts","./src/app/sessions/sessions.component.ts","./src/app/sessions/sessions.component.html","./src/app/sign-up/sign-up.component.ts","./src/app/sign-up/sign-up.component.html","./src/app/ta/ta.component.ts","./src/app/ta/ta.component.html","./src/app/team/team.component.ts","./src/app/team/team.component.html","./src/app/tournament-staff/tournament-staff.component.ts","./src/app/tournament-staff/tournament-staff.component.html","./src/app/tournament/tournament.component.ts","./src/app/tournament/tournament.component.html","./src/app/tournament/editTournament.html","./src/app/tournament/tournamentSettingsDialog.html","./src/app/tournament/signUpDialog.html","./src/app/tournament/addPlayerDialog.html","./src/app/tournaments/tournaments.component.ts","./src/app/tournaments/tournaments.component.html","./src/app/tournaments/newTournamentDialog.html","./src/app/tournaments/archiveTournamentDialog.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/app/users/editUserDialog.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add-player',\n  templateUrl: './add-player.component.html',\n  styleUrls: ['./add-player.component.scss']\n})\nexport class AddPlayerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>add-player works!</p>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { NotificationService } from 'src/app/services/toast.service';\nimport { editUserDialog } from 'src/app/users/users.component';\nimport { badge } from 'src/app/_models/badge.model';\nimport { userAPI } from 'src/app/_models/user.model';\n\n@Component({\n    selector: 'app-assign-badges',\n    templateUrl: './assign-badges.component.html',\n    styleUrls: ['./assign-badges.component.scss']\n})\nexport class AssignBadgesComponent implements OnInit {\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        @Inject(MAT_DIALOG_DATA) public data: {user: userAPI},\n        private dialogRef: MatDialogRef<editUserDialog>,\n        private notif: NotificationService\n    ) { }\n\n    badges: badge[];\n    badgeIds = [];\n\n    btnDisabled = false;\n\n    async ngOnInit() {\n        this.badges = <badge[]>await this.http.get(`/api/badges`).toPromise();\n        this.badgeIds = this.data.user.badges.map(x => x.id);\n    }\n\n    updateBadge(id) {\n        let index = this.badgeIds.indexOf(id);\n        if (index > -1) {\n            this.badgeIds.splice(index, 1)\n        } else {\n            this.badgeIds.push(id);\n        }\n    }\n\n    async onSubmit() {\n        this.btnDisabled = true;\n        try {\n            await this.http.put(`/api/user/${this.data.user.discordId}/badges`, this.badgeIds).toPromise();\n            this.notif.showSuccess('', 'Successfully Updated Badges');\n            this.dialogRef.close(true);\n        } catch (error) {\n            this.notif.showError('', 'Error Updating Badges');\n            this.dialogRef.close(false);\n        }\n    }\n\n}\n","<h1>Edit User Badges</h1>\n<label>Badges:</label>\n<div class=\"badges\">\n    <mat-checkbox *ngFor=\"let badge of badges\" [checked]=\"badgeIds.includes(badge.id)\" (change)=\"updateBadge(badge.id)\">\n        <img src=\"/assets/badges/{{badge.image}}.png\" alt=\"{{badge.description}}\" title=\"{{badge.description}}\">\n    </mat-checkbox>\n</div>\n\n<div mat-dialog-actions>\n    <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n    <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"btnDisabled\" (click)=\"onSubmit()\">Update Badges</button>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { NotificationService } from 'src/app/services/toast.service';\nimport { qualifierSession } from 'src/app/_models/qualifiers';\n\n@Component({\n    selector: 'app-assign-session',\n    templateUrl: './assign-session.component.html',\n    styleUrls: ['./assign-session.component.scss']\n})\nexport class AssignSessionComponent implements OnInit {\n\n    constructor(\n        public http: HttpClient,\n        private dialogRef: MatDialogRef<AssignSessionComponent>,\n        private notif: NotificationService,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n    ) {\n\n    }\n\n    qualSessions: qualifierSession[];\n    selectedSession: qualifierSession;\n\n    loading = false;\n\n    async ngOnInit(): Promise<void> {\n        this.loading = true;\n        this.selectedSession = this.data.session;\n        this.qualSessions = await this.http.get<qualifierSession[]>(`/api/tournament/${this.data.tournament.tournamentId}/qualifiers/sessions`).toPromise();\n        console.log(this.selectedSession);\n        this.loading = false;\n    }\n\n    async update() {\n        this.loading = true;\n        try {\n            await this.http.post(`/api/tournament/${this.data.tournament.tournamentId}/qualifiers/sessions/assign`, { sessionId: this.selectedSession.id }).toPromise();\n            this.notif.showInfo('', 'Successfully Updated Session');\n            this.dialogRef.close(true);\n        } catch (error) {\n            console.error('Error', error)\n            this.notif.showError('', 'Error Updating Session');\n            this.dialogRef.close(false);\n        }\n    }\n\n    selectSession(session: qualifierSession) {\n        this.selectedSession = session;\n    }\n\n    displayTime(dateString: string) {\n        return new Date(dateString).toLocaleString();\n    }\n\n}\n","<h1>Qualifiers Session</h1>\n<div *ngIf=\"loading\">\n  <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n          margin-left: auto;\n          margin-right: auto;\n          width: 100px;\">\n</div>\n<div class=\"sessions\" *ngIf=\"!loading\">\n  <div class=\"session\" *ngFor=\"let session of qualSessions\">\n    <span>\n      {{displayTime(session.time)}}\n    </span>\n    <span>\n      {{session.allocated}}/{{session.limit}}\n    </span>\n    <span>\n      <button mat-button color=\"accent\" type=\"button\" (click)=\"selectSession(session)\"\n        [disabled]=\"selectedSession.id == session.id || session.allocated >= session.limit\">{{selectedSession.id == session.id ? 'Selected' : 'Select'}}</button>\n    </span>\n  </div>\n</div>\n<div mat-dialog-actions>\n  <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n  <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"update()\"\n    [disabled]=\"!selectedSession\">Update</button>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { NotificationService } from 'src/app/services/toast.service';\nimport { editUserDialog } from 'src/app/users/users.component';\n\n@Component({\n    selector: 'app-create-badge',\n    templateUrl: './create-badge.component.html',\n    styleUrls: ['./create-badge.component.scss']\n})\nexport class CreateBadgeComponent implements OnInit {\n\n    badgeForm: FormGroup;\n\n    loading = false;\n\n    badgeId;\n\n    title = 'Create Badge';\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private dialogRef: MatDialogRef<editUserDialog>,\n        private notif: NotificationService\n    ) { }\n\n    ngOnInit(): void {\n        if(this.data) {\n            this.title = 'Update Badge';\n            this.badgeId = this.data.id;\n            this.badgeForm = this.fb.group({\n                image: '',\n                description: [this.data.description, [\n                    Validators.required\n                ]],\n                imgName: [this.data.image, [\n                    Validators.required\n                ]]\n            });\n        } else {\n            this.badgeForm = this.fb.group({\n                image: ['', [\n                    Validators.required\n                ]],\n                description: ['', [\n                    Validators.required\n                ]],\n                imgName: ['', [\n                    Validators.required\n                ]]\n            });\n        }\n    }\n\n    async onSubmit() {\n        this.loading = true;\n        try {\n            if(this.badgeId) {\n                await this.http.put(`/api/badge/${this.badgeId}`, this.badgeForm.value).toPromise();\n                this.notif.showSuccess('', 'Successfully created badge');\n                this.dialogRef.close(false);\n            } else {\n                await this.http.post(`/api/badge`, this.badgeForm.value).toPromise();\n                this.notif.showSuccess('', 'Successfully created badge');\n                this.dialogRef.close(false);\n            }\n        } catch (error) {\n            console.error(\"Error: \", error);\n            this.notif.showError('', 'Error creating badge');\n            this.dialogRef.close(false);\n        }\n    }\n\n    onFileChanged(event) {\n        let selectedFile = event.target.files[0];\n        this.badgeForm.patchValue({ imgName: selectedFile.name });\n\n        let reader = new FileReader();\n        reader.readAsDataURL(selectedFile);\n        reader.onload = () => {\n            this.badgeForm.patchValue({ image: reader.result });\n        };\n    }\n\n}\n","<h3>{{title}}</h3>\n<form [formGroup]=\"badgeForm\" (ngSubmit)=\"onSubmit()\">\n    <!-- Value: {{ userForm.value | json }} -->\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Description\" formControlName=\"description\">\n    </mat-form-field>\n    <br>\n    <input type=\"file\" (change)=\"onFileChanged($event)\" #fileInput accept=\"image/png, image/jpeg, image/gif, image/webp, image/svg+xml, image/tiff\">\n    <br>\n    <p class=\"card-text\" style=\"font-size: small;\">*Will be rescaled to 80px by 30px</p>\n\n    <div mat-dialog-actions>\n        <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"badgeForm.invalid || loading\">{{title}}</button>\n    </div>\n</form>","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { NotificationService } from 'src/app/services/toast.service';\nimport { editUserDialog } from 'src/app/users/users.component';\n\n@Component({\n    selector: 'app-edit-bracket-match',\n    templateUrl: './edit-bracket-match.component.html',\n    styleUrls: ['./edit-bracket-match.component.scss']\n})\nexport class EditBracketMatchComponent implements OnInit {\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private http: HttpClient,\n        private dialogRef: MatDialogRef<editUserDialog>,\n        private notif: NotificationService\n    ) { }\n\n    participants: any[];\n\n    async ngOnInit(): Promise<void> {\n        console.log(this.data);\n        this.participants = await this.http.get<any[]>(`/api/tournament/${this.data.tournamentId}/allParticipants`).toPromise();\n        console.log(this.participants);\n    }\n\n    filteredOptions: any;\n    filteredOptions2: any;\n\n    updatePlayers(event, player: string) {\n        console.log(event.option.value, player);\n        this.data[player].id = event.option.value;\n        // let usrIndex = this.participants.findIndex(x => x.discordId == event.option.value);\n        // if (usrIndex > -1) {\n        //     let tmp = <any>this.participants[usrIndex];\n        //     tmp.roles = [];\n        //     console.log(tmp);\n        //     // this.data[player].id = tmp\n        //     // this.data.staff.push(tmp);\n        //     this.participants.splice(usrIndex, 1);\n        //     this.filteredOptions = this.participants;\n        // }\n    }\n\n    updateFilter($val) {\n        this.filteredOptions = this._filter($val);\n    }\n\n    private _filter(name: string) {\n        const filterValue = name.toLowerCase();\n        return this.participants.filter(option => option.name.toLowerCase().indexOf(filterValue) === 0);\n    }\n\n    displayFn(id): string {\n        let user = this.participants.find(x => x.discordId == id);\n        return user && user.name ? user.name : '';\n    }\n\n    async update() {\n        console.log(this.data);\n        let postData = {\n            matchId: this.data.id,\n            p1: this.data.p1.id,\n            p2: this.data.p2.id\n        }\n        try {\n            await this.http.put(`/api/tournament/${this.data.tournamentId}/bracket/update/${this.data.id}`, postData).toPromise();\n            this.notif.showSuccess(\"\", \"Successfully Updated Staff\");\n            this.dialogRef.close(true);\n        } catch (error) {\n            console.error(error);\n            this.notif.showError(\"\", \"Error Updating Staff\");\n            this.dialogRef.close(false);\n        }\n    }\n\n}\n","<h3>Update Bracket Match Players</h3>\n\n<div class=\"addUser\">\n  <mat-form-field>\n    <mat-label>Player 1</mat-label>\n    <input type=\"text\" (input)=\"updateFilter($event.target.value)\" matInput [matAutocomplete]=\"auto\"\n      [value]=\"data.p1.id\">\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"updatePlayers($event, 'p1')\"\n      [displayWith]=\"displayFn.bind(this)\">\n      <mat-option *ngFor=\"let option of filteredOptions\" [value]=\"option.discordId\">\n        {{option.name}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Player 2</mat-label>\n    <input type=\"text\" (input)=\"updateFilter($event.target.value)\" matInput [matAutocomplete]=\"auto2\"\n      [value]=\"data.p2.id\">\n    <mat-autocomplete #auto2=\"matAutocomplete\" (optionSelected)=\"updatePlayers($event, 'p2')\"\n      [displayWith]=\"displayFn.bind(this)\">\n      <mat-option *ngFor=\"let option of filteredOptions\" [value]=\"option.discordId\">\n        {{option.name}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <!-- <button mat-stroked-button color=\"accent\">Add User</button> &nbsp; -->\n</div>\n<br>\n<hr>\n<br>\n<button mat-raised-button color=\"warn\" mat-dialog-close>Close</button> &nbsp;\n<button mat-raised-button color=\"primary\" (click)=\"update()\">Save Changes</button> &nbsp;\n","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { NotificationService } from 'src/app/services/toast.service';\nimport { editUserDialog } from 'src/app/users/users.component';\nimport { role, staff } from 'src/app/_models/tournamentApi.model';\nimport { userAPI } from 'src/app/_models/user.model';\n\n@Component({\n    selector: 'app-edit-staff',\n    templateUrl: './edit-staff.component.html',\n    styleUrls: ['./edit-staff.component.scss']\n})\nexport class EditStaffComponent implements OnInit {\n\n    roles: role[] = [{\n        id: 1,\n        role: \"Admin\"\n    }, {\n        id: 2,\n        role: \"Map Pool\"\n    }, {\n        id: 3,\n        role: \"Coordinator\"\n    }];\n\n    users: userAPI[];\n\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        @Inject(MAT_DIALOG_DATA) public data: { tournament: any, staff: staff[] },\n        private dialogRef: MatDialogRef<editUserDialog>,\n        private notif: NotificationService\n    ) { }\n\n    async ngOnInit(): Promise<void> {\n        this.users = await this.http.get<userAPI[]>('/api/users').toPromise();\n        for (const staff of this.data.staff) {\n            this.users.splice(this.users.findIndex(x => x.discordId == staff.discordId), 1);\n        }\n    }\n\n    checkRole(roleId: number, roles: role[]) {\n        return roles.map(x => x.id).includes(roleId);\n    }\n\n    updateRoles(user: staff, role: role) {\n        let userIndex = this.data.staff.findIndex(x => x.discordId == user.discordId);\n        let roleIndex = this.data.staff[userIndex].roles.findIndex(x => x.id == role.id);\n        if (roleIndex > -1) {\n            this.data.staff[userIndex].roles.splice(roleIndex, 1);\n        } else {\n            this.data.staff[userIndex].roles.push(role);\n        }\n    }\n\n    async update() {\n        let postData = this.data.staff.map(x => {\n            return {\n                userId: x.discordId,\n                roleIds: x.roles.map(x => x.id)\n            }\n        });\n        try {\n            await this.http.post(`/api/tournament/${this.data.tournament.tournamentId}/staff`, { users: postData}).toPromise();\n            this.notif.showSuccess(\"\", \"Successfully Updated Staff\");\n            this.dialogRef.close(true);\n        } catch (error) {\n            this.notif.showError(\"\", \"Error Updating Staff\");\n            this.dialogRef.close(false);\n        }\n    }\n\n    filteredOptions: any;\n\n    updatePlayers(event) {\n        let usrIndex = this.users.findIndex(x => x.discordId == event.option.value);\n        if (usrIndex > -1) {\n            let tmp = <any>this.users[usrIndex];\n            tmp.roles = [];\n            this.data.staff.push(tmp);\n            this.users.splice(usrIndex, 1);\n            this.filteredOptions = this.users;\n        }\n    }\n\n    lastVal = \"\";\n\n    updateLastEvent(event) {\n        this.lastVal = event;\n    }\n\n    updateFilter($val) {\n        this.filteredOptions = this._filter($val);\n    }\n\n    private _filter(name: string) {\n        const filterValue = name.toLowerCase();\n        return this.users.filter(option => option.name.toLowerCase().indexOf(filterValue) === 0);\n    }\n\n    displayFn(id): string {\n        let user = this.users.find(x => x.discordId == id);\n        return user && user.name ? user.name : '';\n    }\n\n}\n","<h2>Edit Staff</h2>\n<p style=\"font-size: smaller;\">\n    *Note: removing all roles will remove user from staff. <br> *Note 2: Haha jokes on you, roles don't do anything by look pretty for now.\n</p>\n<div class=\"staffGrid\">\n    <div>\n        <span></span>\n        <span *ngFor=\"let role of roles\">\n            {{role.role}}\n        </span>\n    </div>\n    <div *ngFor=\"let user of data.staff\">\n        <span>\n            {{user.name}}\n        </span>\n        <mat-checkbox *ngFor=\"let role of roles\" [checked]=\"checkRole(role.id,user.roles)\" (change)=\"updateRoles(user, role)\">\n        </mat-checkbox>\n    </div>\n</div>\n<div class=\"addUser\">\n    <mat-form-field>\n        <mat-label>Add User</mat-label>\n        <input type=\"text\" (focus)=\"updateLastEvent($event.target.value)\" (input)=\"updateFilter($event.target.value)\" matInput [matAutocomplete]=\"auto\">\n        <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"updatePlayers($event)\" [displayWith]=\"displayFn.bind(this)\">\n            <mat-option *ngFor=\"let option of filteredOptions\" [value]=\"option.discordId\">\n                {{option.name}}\n            </mat-option>\n        </mat-autocomplete>\n    </mat-form-field>\n    <!-- <button mat-stroked-button color=\"accent\">Add User</button> &nbsp; -->\n</div>\n<br>\n<hr>\n<br>\n<button mat-raised-button color=\"warn\" mat-dialog-close>Close</button> &nbsp;\n<button mat-raised-button color=\"primary\" (click)=\"update()\">Save Changes</button> &nbsp;","export class TAEvent {\n    Type: EventType;\n    ChangedObject: any;\n}\n\nexport enum EventType {\n    PlayerAdded,\n    PlayerUpdated,\n    PlayerLeft,\n    CoordinatorAdded,\n    CoordinatorLeft,\n    MatchCreated,\n    MatchUpdated,\n    MatchDeleted,\n    QualifierEventCreated,\n    QualifierEventUpdated,\n    QualifierEventDeleted,\n    HostAdded,\n    HostRemoved\n}","\nexport interface ForwardingPacket {\n    ForwardTo: string[];\n    Type: PacketType;\n    SpecificPacket: any;\n}\n\nexport enum PacketType {\n    Acknowledgement,\n    Command,\n    Connect,\n    ConnectResponse,\n    Event,\n    File,\n    ForwardingPacket,\n    LoadedSong,\n    LoadSong,\n    PlaySong,\n    Response,\n    ScoreRequest,\n    ScoreRequestResponse,\n    SongFinished,\n    SongList,\n    SubmitScore\n}","export class GameplayModifiers {\n    Options: GameOptions;\n}\n\nexport enum GameOptions {\n    None = 0,\n\n    //Negative modifiers\n    NoFail = 1,\n    NoBombs = 2,\n    NoArrows = 4,\n    NoObstacles = 8,\n    SlowSong = 16,\n\n    //Positive Modifiers\n    InstaFail = 32,\n    FailOnClash = 64,\n    BatteryEnergy = 128,\n    FastNotes = 256,\n    FastSong = 512,\n    DisappearingArrows = 1024,\n    GhostNotes = 2048,\n\n    //1.12.2 Additions\n    DemoNoFail = 4096,\n    DemoNoObstacles = 8192,\n    StrictAngles = 16384\n}","import type { Characteristic } from \"./characteristic\";\nimport type { Player } from \"./player\";\nimport type { PreviewBeatmapLevel } from \"./previewBeatmapLevel\";\nimport type { User } from \"./User\";\n\nexport interface Match {\n    Guid: string;\n    Players: Player[];\n    Leader: User;\n    SelectedLevel?: PreviewBeatmapLevel;\n    SelectedCharacteristic?: Characteristic;\n    SelectedDifficulty: BeatmapDifficulty;\n}\n\nexport enum BeatmapDifficulty {\n    Easy,\n    Normal,\n    Hard,\n    Expert,\n    ExpertPlus\n}","export interface PlayerSpecificSettings {\n    Options?: PlayerOptions;\n}\n\nexport enum PlayerOptions {\n    None = 0,\n    LeftHanded = 1,\n    StaticLights = 2,\n    NoHud = 4,\n    AdvancedHud = 8,\n    ReduceDebris = 16\n}","import type { GameplayParameters } from \"./gameplayParameters\";\n\nexport interface QualifierEvent {\n    eventId: string;\n    name: string;\n    // guild: Guild;\n    // infoChannel: Channel;\n    qualifierMaps: GameplayParameters[];\n    sendScoresToInfoChannel: boolean;\n    flags: number;\n}\n\nexport enum EventSettings {\n    None = 0,\n    HideScoreFromPlayers = 1,\n    DisableScoresaberSubmission = 2\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TournamentsComponent } from './tournaments/tournaments.component';\nimport { TournamentComponent } from './tournament/tournament.component';\nimport { ArchiveComponent } from './archive/archive.component';\nimport { RankingsComponent } from './rankings/rankings.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { UserComponent } from './user/user.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { MapPoolComponent } from './map-pool/map-pool.component';\nimport { BracketComponent } from './bracket/bracket.component';\nimport { TeamComponent } from './team/team.component';\nimport { UsersComponent } from './users/users.component';\nimport { AuthGuardGuard } from './guards/auth-guard.guard';\nimport { ParticipantsComponent } from './participants/participants.component';\nimport { LogsComponent } from './logs/logs.component';\nimport { QualifiersComponent } from './qualifiers/qualifiers.component';\nimport { MiniTourneysComponent } from './mini-tourneys/mini-tourneys.component';\nimport { RulesComponent } from './rules/rules.component';\nimport { OverlayComponent } from './overlay/overlay.component';\nimport { TaComponent } from './ta/ta.component';\nimport { BadgesComponent } from './badges/badges.component';\nimport { Awards2020Component } from './awards2020/awards2020.component';\nimport { TournamentStaffComponent } from './tournament-staff/tournament-staff.component';\nimport { OverlayControllerComponent } from './overlay-controller/overlay-controller.component';\nimport { SessionsComponent } from './sessions/sessions.component';\n\n\nconst routes: Routes = [\n    { path: '', component: TournamentsComponent },\n    { path: 'mini-tournaments', component: MiniTourneysComponent },\n    { path: 'archive', component: ArchiveComponent },\n    { path: 'rules', component: RulesComponent },\n    // {path: 'ranking', component: RankingsComponent },\n    {\n        path: 'tournament/:id', component: TournamentComponent, children: [\n            { path: 'map-pool', component: MapPoolComponent },\n            { path: 'bracket', component: BracketComponent },\n            { path: 'participants', component: ParticipantsComponent },\n            { path: 'allParticipants', component: ParticipantsComponent },\n            { path: 'qualifiers', component: QualifiersComponent },\n            { path: 'sessions', component: SessionsComponent },\n            { path: 'staff', component: TournamentStaffComponent },\n        ]\n    },\n    { path: 'profile', component: ProfileComponent },\n    { path: 'user/:id', component: UserComponent },\n    { path: 'sign-up', component: SignUpComponent },\n    { path: 'calendar', component: CalendarComponent },\n    { path: 'team', component: TeamComponent },\n    { path: 'users', component: UsersComponent, canActivate: [AuthGuardGuard] },\n    { path: 'logs', component: LogsComponent, canActivate: [AuthGuardGuard] },\n    { path: 'overlay/:tourneyId/:stage/:matchId', component: OverlayComponent },\n    { path: 'overlay/:tourneyId', component: OverlayControllerComponent },\n    { path: 'ta', component: TaComponent },\n    { path: 'badges', component: BadgesComponent },\n    { path: 'awards/2020', component: Awards2020Component },\n    // { path: 'badges', component: BadgesComponent, canActivate: [AuthGuardGuard] },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, HostListener, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Title, DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { ActivatedRoute, NavigationStart, Router } from '@angular/router';\n\nimport { User } from './models/user.model'\nimport { Observable } from 'rxjs';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { NotificationService } from './services/toast.service';\nimport { MetaTagService } from './services/meta-tag.service';\nimport { UserAuthService } from './services/user-auth.service';\nimport { TournamentsComponent } from './tournaments/tournaments.component';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n    title = 'BeatKhana!';\n\n    user: User = null;\n    updatedUser = false;\n\n    discordSvg: SafeHtml;\n\n    showDefault = true;\n\n    public constructor(\n        public titleService: Title,\n        public http: HttpClient,\n        public route: ActivatedRoute,\n        public router: Router,\n        public dialog: MatDialog,\n        public sanitizer: DomSanitizer,\n        public notif: NotificationService,\n        public metaTags: MetaTagService,\n        public cd: ChangeDetectorRef,\n        public userS: UserAuthService\n    ) {\n        router.events.subscribe(() => {\n            this.burgerActive = false;\n        });\n\n        // if (this.constructor == AppComponent) {\n        //     this.updateUser(); \n        // }\n        if (!this.user) this.updateUser();\n\n        router.events.forEach((event) => {\n            if (event instanceof NavigationStart) {\n                this.showDefault = !(event.url.includes('overlay') || event.url.includes('coordinator') || event.url.includes('/ta'));\n            }\n        });\n    }\n\n    ngOnInit(): void {\n        this.metaTags.defineTags('/', 'BeatKhana!', 'The one stop spot for all Beat Saber tournament information', 'assets/images/icon/BeatKhana Logo RGB.png');\n    }\n\n    public async updateUser() {\n        this.user = await this.userS.curUser();\n    }\n\n    public setTitle(newTitle: string) {\n        this.titleService.setTitle(newTitle);\n    }\n\n    burgerActive = false;\n\n    burgerClick() {\n        this.burgerActive = !this.burgerActive;\n    }\n}\n","<header *ngIf=\"showDefault\">\n    <nav>\n        <div class=\"container\">\n            <div>\n                <a routerLink=\"/\">\n                    <img src=\"/assets\\svg\\BeatKhana Logo Text RGB2.svg\" alt=\"BeatKhana! Logo\" height=\"50\">\n                </a>\n            </div>\n            <div class=\"nav-main\">\n                <ul class=\"navbar-nav\">\n                    <li><a routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact:true}\" class=\"nav-item\">Home</a></li>\n                    <li><a routerLink=\"/mini-tournaments\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact:true}\" class=\"nav-item\">Mini Tournaments</a></li>\n                    <li><a routerLink=\"/archive\" routerLinkActive=\"active\" class=\"nav-item\">Archive</a></li>\n                    <li class=\"nav-item hover-dropdown\">\n                        More\n                        <i></i>\n                        <!-- <button class=\"nav-item dropdown-toggle\">\n                        </button> -->\n                        <!-- More -->\n                        <ul class=\"dropdown\">\n                            <li class=\"dropdown-item\">\n                                <a routerLink=\"/awards/2020\" routerLinkActive=\"active\">2020 Awards</a>\n                            </li>\n                            <li class=\"dropdown-item\">\n                                <a routerLink=\"/rules\" routerLinkActive=\"active\">Rules</a>\n                            </li>\n                            <li class=\"dropdown-item\">\n                                <a routerLink=\"/calendar\" routerLinkActive=\"active\">Calendar</a>\n                            </li>\n                            <li class=\"dropdown-item\">\n                                <a routerLink=\"/ta\" routerLinkActive=\"active\">TA Client</a>\n                            </li>\n                        </ul>\n                    </li>\n                    <!-- <li><a routerLink=\"/ranking\" routerLinkActive=\"active\" class=\"nav-item\">Rankings</a></li> -->\n                    <li><a routerLink=\"/team\" routerLinkActive=\"active\" class=\"nav-item\">Team</a></li>\n                </ul>\n            </div>\n            <div style=\"float: right;\" class=\"nav-main\">\n                <ul class=\"navbar-nav\">\n                    <li>\n                        <a href=\"https://discord.gg/5NjfSAC\" target=\"_blank\" class=\"nav-item noHover icon\">\n                            <i class=\"fab fa-discord\"></i>\n                        </a>\n                    </li>\n                    <li>\n                        <a href=\"https://www.twitch.tv/beatkhana\" target=\"_blank\" class=\"nav-item noHover icon\">\n                            <i class=\"fab fa-twitch\"></i>\n                        </a>\n                    </li>\n                    <li *ngIf=\"user\" class=\"nav-item has-dropdown noHover\">\n                        <button class=\"nav-link dropdown-toggle\">\n                            <img class=\"userImg\" src=\"{{ user.avatar }}\"\n                                style=\"display: inline;\" height=\"64\" width=\"64\">\n\n                        </button>\n                        <ul class=\"dropdown\">\n                            <li class=\"dropdown-item\">\n                                <a routerLink=\"/profile\">View Profile</a>\n                            </li>\n                            <li class=\"dropdown-item\">\n                                <a href=\"/api/logout\">Logout</a>\n                            </li>\n                        </ul>\n                    </li>\n                    <li *ngIf=\"!user\" style=\"margin-left: 5px;\">\n                        <a href=\"/api/login?url={{this.router.url}}\" class=\"nav-item\">Login/Register</a>\n                    </li>\n                </ul>\n            </div>\n\n\n            <!-- Mobile nav-->\n            <div class=\"nav-mobile\">\n\n            </div>\n            <div class=\"nav-mobile\">\n                <div class=\"hamburger hamburger--spin js-hamburger\" (click)=\"burgerClick()\" [ngClass]=\"burgerActive ? 'is-active' : ''\">\n                    <div class=\" hamburger-box \">\n                        <div class=\"hamburger-inner \"></div>\n                    </div>\n                </div>\n            </div>\n\n            <div [ngClass]=\"burgerActive ? 'mobile-show' : ''\" class=\"mobile-nav-content\" style=\"grid-column: span 3;\">\n                <div>\n                    <ul class=\"navbar-nav mobile\">\n                        <li><a routerLink=\"/\" routerLinkActive=\"active \" [routerLinkActiveOptions]=\"{exact:true} \" class=\"nav-item \">Home</a></li>\n                        <li><a routerLink=\"/mini-tournaments\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact:true}\" class=\"nav-item\">Mini Tournaments</a></li>\n                        <li><a routerLink=\"/archive\" routerLinkActive=\"active \" class=\"nav-item \">Archive</a></li>\n                        <li><a routerLink=\"/awards/2020\" routerLinkActive=\"active\" class=\"nav-item \">2020 Awards</a></li>\n                        <li><a routerLink=\"/rules\" routerLinkActive=\"active\" class=\"nav-item\">Rules</a></li>\n                        <!-- <li><a routerLink=\"/ranking\" routerLinkActive=\"active \" class=\"nav-item \">Rankings</a></li> -->\n                        <li><a routerLink=\"/calendar\" routerLinkActive=\"active\" class=\"nav-item\">Calendar</a></li>\n                        <li><a routerLink=\"/team\" routerLinkActive=\"active \" class=\"nav-item \">Team</a></li>\n                    </ul>\n                </div>\n                <div>\n                    <hr>\n                    <ul class=\"navbar-nav mobile\">\n                        <li *ngIf=\"user\">\n                            <img class=\"userImg\" src=\"{{ user.avatar }} \" style=\"display: inline-box;\" height=\"64\" width=\"64\">\n                        </li>\n                        <li *ngIf=\"user\">\n                            <a routerLink=\"/profile\" class=\"nav-item \">View Profile</a>\n                        </li>\n                        <li *ngIf=\"user\">\n                            <a href=\"/api/logout\" class=\"nav-item \">Logout</a>\n                        </li>\n                        <li *ngIf=\"!user \">\n                            <a href=\"/api/login?url={{this.router.url}}\" class=\"nav-item \">Login/Register</a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </nav>\n</header>\n<router-outlet></router-outlet>\n<footer *ngIf=\"showDefault\">\n    <p>\n        <strong>BeatKhana!</strong>\n        <br><br>\n        <a title=\"Join the Discord!\" href=\"https://discord.gg/5NjfSAC\" target=\"_blank\"><i class=\"fab fa-discord\"></i></a>\n        <a title=\"Join the Discord!\" href=\"https://discord.gg/5NjfSAC\" target=\"_blank\" [innerHTML]=\"discordSvg\" class=\"icon2\"><i class=\"icon2 discord\"></i></a>\n        <a title=\"Follow us on twitch!\" href=\"https://www.twitch.tv/beatkhana\" target=\"_blank\"><i class=\"fab fa-twitch\"></i></a>\n        <a title=\"Get Saber-O's Merch\" href=\"http://teespring.com/en/stores/saber-os\" target=\"_blank\"><i class=\"fas fa-tshirt\"></i></a>\n    </p>\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TournamentsComponent, newTournamentDialog, archiveTournamentDialog } from './tournaments/tournaments.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { TournamentComponent, editTournament, tournamentSettingsDialog, signUpDialog, addPlayerDialog } from './tournament/tournament.component';\nimport { ArchiveComponent } from './archive/archive.component';\nimport { RankingsComponent } from './rankings/rankings.component';\nimport { editProfileDialog, ProfileComponent } from './profile/profile.component';\nimport { UserComponent } from './user/user.component';\n\n\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\nimport { CKEditorModule } from 'ckeditor4-angular';\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { CalendarComponent } from './calendar/calendar.component';\n\nimport { ToastrModule } from 'ngx-toastr';\nimport { BracketComponent, generateBracketDialog, updateMatchDialog } from './bracket/bracket.component';\nimport { addSongDialog, createPoolDialog, MapPoolComponent } from './map-pool/map-pool.component';\nimport { TeamComponent } from './team/team.component';\nimport { editUserDialog, UsersComponent } from './users/users.component';\nimport { editCommentDialog, ParticipantsComponent } from './participants/participants.component';\n\nimport { NgxLinkifyjsModule } from 'ngx-linkifyjs';\nimport { LogsComponent } from './logs/logs.component';\nimport { QualifiersComponent } from './qualifiers/qualifiers.component';\nimport { MiniTourneysComponent } from './mini-tourneys/mini-tourneys.component';\nimport { RulesComponent } from './rules/rules.component';\n\nimport {\n    NgxMatDatetimePickerModule,\n    NgxMatNativeDateModule,\n    NgxMatTimepickerModule\n} from '@angular-material-components/datetime-picker';\nimport { OverlayComponent } from './overlay/overlay.component';\nimport { TaComponent } from './ta/ta.component';\nimport { BadgesComponent } from './badges/badges.component';\nimport { CreateBadgeComponent } from './_modals/create-badge/create-badge.component';\nimport { Awards2020Component } from './awards2020/awards2020.component';\nimport { AssignBadgesComponent } from './_modals/assign-badges/assign-badges.component';\nimport { TournamentStaffComponent } from './tournament-staff/tournament-staff.component';\nimport { EditStaffComponent } from './_modals/edit-staff/edit-staff.component';\nimport { OverlayControllerComponent } from './overlay-controller/overlay-controller.component';\nimport { AddPlayerComponent } from './_modals/add-player/add-player.component';\nimport { AssignSessionComponent } from './_modals/assign-session/assign-session.component';\nimport { SessionsComponent } from './sessions/sessions.component';\nimport { EditBracketMatchComponent } from './_modals/edit-bracket-match/edit-bracket-match.component';\n\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        TournamentsComponent,\n        TournamentComponent,\n        ArchiveComponent,\n        newTournamentDialog,\n        archiveTournamentDialog,\n        editTournament,\n        RankingsComponent,\n        ProfileComponent,\n        editProfileDialog,\n        UserComponent,\n        ConfirmDialogComponent,\n        SignUpComponent,\n        addPlayerDialog,\n        editCommentDialog,\n        CalendarComponent,\n        BracketComponent,\n        updateMatchDialog,\n        generateBracketDialog,\n        MapPoolComponent,\n        createPoolDialog,\n        addSongDialog,\n        TeamComponent,\n        UsersComponent,\n        editUserDialog,\n        tournamentSettingsDialog,\n        signUpDialog,\n        ParticipantsComponent,\n        LogsComponent,\n        QualifiersComponent,\n        MiniTourneysComponent,\n        RulesComponent,\n        OverlayComponent,\n        TaComponent,\n        BadgesComponent,\n        CreateBadgeComponent,\n        Awards2020Component,\n        AssignBadgesComponent,\n        TournamentStaffComponent,\n        EditStaffComponent,\n        OverlayControllerComponent,\n        AddPlayerComponent,\n        AssignSessionComponent,\n        SessionsComponent,\n        EditBracketMatchComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        HttpClientModule,\n        BrowserAnimationsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatButtonModule,\n        MatCheckboxModule,\n        MatDialogModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatAutocompleteModule,\n        MatTabsModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatRadioModule,\n        MatExpansionModule,\n        MatSliderModule,\n        DragDropModule,\n        CKEditorModule,\n        ToastrModule.forRoot({\n            maxOpened: 3,\n            autoDismiss: true,\n            newestOnTop: false,\n            preventDuplicates: true,\n            countDuplicates: true,\n            resetTimeoutOnDuplicate: true\n        }),\n        NgxLinkifyjsModule.forRoot(),\n        NgxMatDatetimePickerModule,\n        NgxMatTimepickerModule,\n        NgxMatNativeDateModule,\n        FormsModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { ITournament } from '../interfaces/tournament';\nimport { Observable } from 'rxjs';\nimport { AppComponent } from '../app.component';\n\n@Component({\n    selector: 'app-archive',\n    templateUrl: './archive.component.html',\n    styleUrls: ['./archive.component.scss']\n})\nexport class ArchiveComponent extends AppComponent implements OnInit {\n\n    title = \"Archive | BeatKhana!\";\n    private url = '/api/tournament/archived';\n    public tournaments = [];\n    public loading = true;\n    private tourneyId: string;\n\n    page = 0;\n    limit = 25;\n\n    secondLoading = false;\n    allRecords = false;\n\n    async ngOnInit(): Promise<void> {\n        this.getTournaments()\n            .subscribe(data => {\n                this.page++;\n                data.sort(function (a, b) {\n                    return <any>new Date(b.startDate) - <any>new Date(a.startDate);\n                });\n                this.tournaments = data;\n                this.loading = false;\n            });\n        this.setTitle(this.title);\n    }\n\n    public getTournaments(): Observable<ITournament[]> {\n        return this.http.get<ITournament[]>(this.url + `?page=${this.page}&limit=${this.limit}`);\n    }\n\n    @HostListener('window:scroll', ['$event'])\n    doSomething(event) {\n        if (window.pageYOffset - document.getElementsByClassName(\"gridArchive\")[0].scrollHeight > -1000 && !this.secondLoading && !this.allRecords) {\n            this.secondLoading = true\n            this.getTournaments()\n                .subscribe(data => {\n                    if (data.length > 0) {\n                        this.page += 1;\n                        this.tournaments = this.tournaments.concat(data);\n                        this.secondLoading = false;\n                    }\n                    //     this.secondLoading = false;\n                    //     this.allRecords = true;\n                    // }\n                });\n        }\n    }\n\n}\n","<div class=\"container gridArchive\">\n    <div *ngIf=\"loading else loaded\">\n        <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 100px;\">\n    </div>\n    <ng-template #loaded>\n        <div class=\"card archiveCard\" *ngFor=\"let tournament of tournaments\">\n            <a [title]=\"tournament.name\" [routerLink]=\"['/tournament',tournament.tournamentId]\">\n                <div>\n                    <!-- <img src=\"https://beatkhanas3.s3.us-east-1.amazonaws.com/{{tournament.image}}\" class=\"card-img\"> -->\n                    <img src=\"/assets/images/{{tournament.image}}\" class=\"card-img\">\n                </div>\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\">\n                        {{tournament.name}}\n                    </h5>\n                    <p class=\"card-text\">\n                        1# {{tournament.first}} | #2 {{tournament.second}} | #3 {{tournament.third}}\n                    </p>\n                </div>\n                <div class=\"card-body cardLeft\">\n                    <p class=\"card-text\">{{tournament.startDate | date: 'dd/MM/yyyy'}}</p>\n                </div>\n            </a>\n        </div>\n    </ng-template>\n\n\n    <ng-template #noArchive>\n        <a>\n            <div>\n            </div>\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">\n                    No Archived Tournaments\n                </h5>\n            </div>\n            <div class=\"card-body cardLeft\">\n            </div>\n        </a>\n    </ng-template>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-awards2020',\n    templateUrl: './awards2020.component.html',\n    styleUrls: ['./awards2020.component.scss']\n})\nexport class Awards2020Component implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    scroll(el: HTMLElement) {\n        el.scrollIntoView({\n            behavior: 'smooth'\n        });\n    }\n\n}\n","<section class=\"awards-title\">\n    <h1>Beat Saber Awards 2020</h1>\n    <h4>Hosted by BeatKhana</h4>\n</section>\n<section class=\"awards-container\">\n    <div class=\"awards-nav\">\n        <ul>\n            <li (click)=\"scroll(bestCoord)\">Best Coordinator</li>\n            <li (click)=\"scroll(bestStream)\">Best Stream Host</li>\n            <li (click)=\"scroll(bestEmote)\">Best Emote</li>\n            <li (click)=\"scroll(mapImpact)\">Most Impactfull Map</li>\n            <li (click)=\"scroll(mapKill)\">Map That Could Kill</li>\n            <li (click)=\"scroll(shitpostMap)\">Best Shitpost Map</li>\n            <li (click)=\"scroll(boomerMap)\">Best Boomer Map</li>\n            <li (click)=\"scroll(boomerMapper)\">Best Boomer Mapper</li>\n            <li (click)=\"scroll(mapper2019)\">Best 2019 Mapper</li>\n            <li (click)=\"scroll(mapper2020)\">Best Zoomer Mapper</li>\n            <li (click)=\"scroll(techMapper)\">Best Tech Mapper</li>\n            <li (click)=\"scroll(shitpostMapper)\">Best Shitpost Mapper</li>\n            <li (click)=\"scroll(streamer)\">Best Streamer</li>\n            <li (click)=\"scroll(mixedRealityStreamer)\">Best Mixed Reality Streamer</li>\n            <li (click)=\"scroll(bestYoutuber)\">Best Youtuber</li>\n            <li (click)=\"scroll(accAndy)\">Best Acc Andy</li>\n            <li (click)=\"scroll(bestBoomer)\">Best Boomer</li>\n            <li (click)=\"scroll(bsMeme)\">Best Meme</li>\n            <li (click)=\"scroll(leaderboardGod)\">Leaderboard God</li>\n            <li (click)=\"scroll(bestCaster)\">Best Caster</li>\n            <li (click)=\"scroll(bestLighter)\">Best Lighter</li>\n            <li (click)=\"scroll(bestTournament)\">Best Tournament</li>\n            <li (click)=\"scroll(bestMascot)\">Best Mascot</li>\n            <li (click)=\"scroll(bestSaberMaker)\">Best Saber Maker</li>\n            <li (click)=\"scroll(bestBlockMaker)\">Best Block Maker</li>\n            <li (click)=\"scroll(bestMod)\">Best Mod</li>\n            <li (click)=\"scroll(worstMenu)\">Worst Menu</li>\n            <li (click)=\"scroll(bestFurry)\">Best Furry</li>\n            <li (click)=\"scroll(bestVoice)\">Best Voice</li>\n            <li (click)=\"scroll(bestClan)\">Best Clan</li>\n            <li (click)=\"scroll(bestModder)\">Best Modder</li>\n        </ul>\n    </div>\n    <div class=\"awards-section\">\n        <div #bestCoord>\n            <h2>Best Coordiantor for Tournaments</h2>\n            <div class=\"nominees\">\n                <div class=\"nominee\" routerLink='/user/464070190498447361'>\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://new.scoresaber.com/api/static/avatars/76561198130607154.jpg);\"></div>\n                    <p>\n                        Samiixd\n                    </p>\n                </div>\n                <div class=\"nominee winner\" routerLink='/user/158560971101569024'>\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://new.scoresaber.com/api/static/avatars/76561198046397592.jpg);\"></div>\n                    <p>\n                        Incanium\n                    </p>\n                </div>\n                <div class=\"nominee\" routerLink='/user/226507204495278080'>\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://cdn.discordapp.com/avatars/226507204495278080/a_32da3c59988a15988b5880c63ba97c4b.webp?size=256);\"></div>\n                    <p>\n                        Gregi\n                    </p>\n                </div>\n                <div class=\"nominee\" routerLink='/user/102133026196029440'>\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://new.scoresaber.com/api/static/avatars/76561198271377161.jpg);\"></div>\n                    <p>\n                        Beno (nee)\n                    </p>\n                </div>\n                <div class=\"nominee\" routerLink='/user/108207141315170304'>\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://new.scoresaber.com/api/static/avatars/76561198039493984.jpg);\"></div>\n                    <p>\n                        IcyNoobsGamer\n                    </p>\n                </div>\n                <div class=\"nominee\" routerLink='/user/450365431707074591'>\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://new.scoresaber.com/api/static/avatars/76561198970517156.jpg);\"></div>\n                    <p>\n                        Eradawn\n                    </p>\n                </div>\n                <div class=\"nominee\" routerLink='/user/277542487596466176'>\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://new.scoresaber.com/api/static/avatars/76561198245321138.jpg);\"></div>\n                    <p>\n                        ShadowPixel\n                    </p>\n                </div>\n                <div class=\"nominee\" routerLink='/user/580425653325791272'>\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://new.scoresaber.com/api/static/avatars/76561198272266872.jpg);\"></div>\n                    <p>\n                        Aso\n                    </p>\n                </div>\n            </div>\n        </div>\n        <div #bestStream>\n            <h2>Best Stream Host for Tournaments</h2>\n            <div class=\"nominees\">\n                <div class=\"nominee\" routerLink='/user/553576678186680340'>\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://new.scoresaber.com/api/static/avatars/76561198040830896.jpg);\"></div>\n                    <p>\n                        Ryeera\n                    </p>\n                </div>\n                <div class=\"nominee\" routerLink='/user/311273905094656001'>\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://new.scoresaber.com/api/static/avatars/76561198056313463.jpg);\"></div>\n                    <p>\n                        BakedaDough\n                    </p>\n                </div>\n                <div class=\"nominee\" routerLink='/user/226507204495278080'>\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://cdn.discordapp.com/avatars/226507204495278080/a_32da3c59988a15988b5880c63ba97c4b.webp?size=256);\"></div>\n                    <p>\n                        Gregi\n                    </p>\n                </div>\n                <div class=\"nominee winner\" routerLink='/user/145838716877930496'>\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://new.scoresaber.com/api/static/avatars/76561197978021272.jpg);\"></div>\n                    <p>\n                        Amanatsu\n                    </p>\n                </div>\n            </div>\n        </div>\n        <div #bestEmote>\n            <h2>Best Beat Saber Related Emote</h2>\n            <div class=\"nominees\">\n                <div class=\"nominee emote\">\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://lh5.googleusercontent.com/A4VO4QDjXvFam7aQS3Wh7Kh0JGeR1-T1yX-_T4aTChP_jE42Tl3uuVr1j41oeTyYjkCeTOpocmaRdklZ-a9swLhHctEK9DtYE6q6ae1SylShMQsTfHzOVTj3smv0qQ=w260);\"></div>\n                    <p>\n                        Wide Golfuh\n                    </p>\n                </div>\n                <div class=\"nominee emote\">\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://lh6.googleusercontent.com/S1v4lSw9Vi-4ZY4mOrerleCtAKOhBufXeLcdB3ysfKVG5U0_yembxZp_YUy1Zsr46yxMfDl2r6rIPUvdOPWbhNxJ8FoXRgm3uvVe4IH_e-dScXS0oMY7Y4JIL8BUxQ=w128);\"></div>\n                    <p>\n                        PepoSabers\n                    </p>\n                </div>\n                <div class=\"nominee emote\">\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://lh4.googleusercontent.com/ugnuXWF7DeLsBSsM0WvIySL_D3bvSzS7R0M1VJtwIoZE355Vn-ljKBT0NI6CjbhyUwNHi03droL3qsd4hRozKD4Nuc63_MGy6VKWfbRs-ggtfdPy8sUoXbBKiA6wkQ=w80);\"></div>\n                    <p>\n                        MonolithJaack\n                    </p>\n                </div>\n                <div class=\"nominee emote winner\">\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://lh3.googleusercontent.com/Yj_49k3R3L4q-RwDZzU71YyEbmb8ZfvW6XyCDcgI3zN8dQSJOt9Oo8FCesxmO9kzMTWr1U3ky08654Rd6pu-Vf1jmZ_UBLqjt5tlW7pVaSysPTmWavofxElVMTrr7Q=w260);\"></div>\n                    <p>\n                        SadTracking\n                    </p>\n                </div>\n                <div class=\"nominee emote\">\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://lh5.googleusercontent.com/K1t4qs9w-F4nHFn_hd_cpno_BTiOSx9hrWzUOk_-eUeACDYKCgJdMnYQ6rgNvv8hEKisAtYL9aZazIVq-6z0g3DpZ2w_C5BGxWCfm2isRSS5DLdcgmW3nkRULhSkfQ=w45);\"></div>\n                    <p>\n                        Ninja\n                    </p>\n                </div>\n                <div class=\"nominee emote\">\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://lh5.googleusercontent.com/asY7o_WuhqumW_rbSFiiHlfRMDQonL7isVWtiL-5iqhhOFGHvMNbIYYJqPD8P67VbeixZOYlCd-Ydy_ziMEFJKWYrrwY5xPtkOfZTlIIsDD9HL9puhhYcyPIcVKl3A=w128);\"></div>\n                    <p>\n                        Peepoacc\n                    </p>\n                </div>\n                <div class=\"nominee emote\">\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://lh4.googleusercontent.com/sHLJtHETjtQBWE9oFsdTcY5HuuCEmE83jQ06A5DI8EOt09QDpdBLkZm12oI4XwRE7TueYyHM5j8uqF_o90YK4XqPWqR2_ASvcmWkxkDT2IcNXXgVlx3GRHMEmh9fZg=w56);\"></div>\n                    <p>\n                        HahaBall\n                    </p>\n                </div>\n                <div class=\"nominee emote\">\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://lh5.googleusercontent.com/KoK1zOBi4jiaxxqBpd37jhux8RiA1XL4NiKOB8TO09vnpu8lzZQm5f5ZRzpYcW6UjebipVy0HUSVFIht4haxNXAiv2hf9eHPKgjknHcKOL-eP9ZWweca-eH_4viXEg=w128);\"></div>\n                    <p>\n                        WHAT HOW\n                    </p>\n                </div>\n                <div class=\"nominee emote\">\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://lh5.googleusercontent.com/QMrCV-kEOz090BzF2lf_Z5FatCn6uPcpZquIhRo_FNz6wO2aiyW0msgT7ZXtqHdcmf0ejDTQCwYAa4nPc3Jc0vnhkjTrOEbr8Zamd_iiwfFpzcVkY_8K_zn7_kv8pQ=w96);\"></div>\n                    <p>\n                        First Dreams\n                    </p>\n                </div>\n                <div class=\"nominee emote\">\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://lh5.googleusercontent.com/nJ0mBuV9jSGFdMHlDmQEY67h0N6flTl_W3_oM-VrMDvYrHENV71knM1Vyydk-WVy14dhiri-fGu_PNrCClOAjmQQuQEyhqE7Ui58TlVGTMoNFgUAvDexov5p4i8Q_A=w112);\"></div>\n                    <p>\n                        InterzW\n                    </p>\n                </div>\n            </div>\n        </div>\n        <div #mapImpact>\n            <h2>Map that has made the MOST impact on the game</h2>\n            <div class=\"mapNominees\">\n                <a href=\"https://beatsaver.com/beatmap/1f90\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/1f90/2fddb136bda7f9e29b4cb6621d6d8e0f8a43b126.jpg);\"></div>\n                        <p>\n                            Overkill - Nuketime\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/d0f6\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/d0f6/75ccd1def27021c38b58246f650802d9702bc70e.jpg);\"></div>\n                        <p>\n                            Bassline Yatteru? - Uninstaller\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/76cb\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/76cb/898504255edd45a740490d831545e6d1330c1d72.jpg);\"></div>\n                        <p>\n                            Goodbye - Puds\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/3036\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/songs/6C5B1FC2C75AA2ED3EBD69810A6456171D97703E.png);\"></div>\n                        <p>\n                            Milk Crown - Hexagonial\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/25f\" target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/25f/ad6c9f88d63259a95e39397c31be2981c4beb744.jpg);\"></div>\n                        <p>\n                            Reality Check Through TYhe Skull - Rickput\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/3a\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/3a/9b0881baab8b72f33424ecf0d9ad247ea10afbb2.jpg);\"></div>\n                        <p>\n                            TTFAF - Freek\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/e55\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/e55/8c51d94e3e247df86a4c7113e9fdbcc434a56f4b.jpg);\"></div>\n                        <p>\n                            Cycle Hit - Various Mappers\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/b\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/b/19f2879d11a91b51a5c090d63471c3e8d9b7aee3.jpg);\"></div>\n                        <p>\n                            Believer - Rustic\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/86a\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/86a/4692c6c200bc92364c268a518e9dee89146e4391.jpg);\"></div>\n                        <p>\n                            Freedom Dive - Roffle\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/6136\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/songs/55F500A96EEFB234864A441DEB6754065E8ACA9F.png);\"></div>\n                        <p>\n                            Ghos7 - DankruptMemer x Moriik\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/1a15\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/1a15/c1489448cce99d8dcf5b18c70223618284193408.jpg);\"></div>\n                        <p>\n                            Nisemono - Hexagonial\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #mapKill>\n            <h2>Ranked Map That Could Kill Someone</h2>\n            <div class=\"mapNominees\">\n                <a href=\"https://beatsaver.com/beatmap/2200\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/2200/4867e299296a5b965edc4dcd930c07703b06b96e.jpg);\"></div>\n                        <p>\n                            Daisuki - Hexagonial\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/78ca\" target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/78ca/9f783ce7f810062852795f4cbdf8335245fd044a.jpg);\"></div>\n                        <p>\n                            Tinnitus - Souk & Oddloop\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/76cb\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/songs/B506526ABA9AE3BC8C6DE045326D4F083607776B.png);\"></div>\n                        <p>\n                            Psychology - Scrappy\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/4479\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/4479/e80adf683aed066f94bbba3e49162d7d0d7247b4.jpg);\"></div>\n                        <p>\n                            Louder Than Steel - Electrostats\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/6b5f\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/6b5f/6a5aea3ce9a7a9f120ebd4deea377b4a54640bfb.jpg);\"></div>\n                        <p>\n                            Break Expert Diff - Souk & Oddloop\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/2eea\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/2eea/9dc600ee749197f16ec4f75f5d5bf2ab38f8e4f8.jpg);\"></div>\n                        <p>\n                            Labyrinth - Splake & Moriik\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/17b1\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/17b1/65f78118110793e75b81422d01e67b0c7623cff1.jpg);\"></div>\n                        <p>\n                            sleepparalysis//////////////\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #shitpostMap>\n            <h2>Best Shitpost Map</h2>\n            <div class=\"mapNominees\">\n                <a href=\"https://beatsaver.com/beatmap/ff9\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/ff9/cb9f1581ff6c09130c991db8823c5953c660688f.jpg);\"></div>\n                        <p>\n                            Smooth Criminal - Atlasik\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/6bf9\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/6bf9/77792ce1f1d03d9089a81c09f3affab6d488229f.jpg);\"></div>\n                        <p>\n                            Armed and Ready - Jonothan Mullins\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/5851\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/5851/31138c054d7ca6b318c8d628015a5ccb996416e0.jpg);\"></div>\n                        <p>\n                            Till I Collapse - Loloppe\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/86e\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/86e/280be3d96970f0222c75e9ddcffa8880418c8796.jpg);\"></div>\n                        <p>\n                            Delfino Plaza - speederman5553\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/53d9\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/53d9/d8cd049712c82d272a2a6643e44cdcfdae040ce0.jpg);\"></div>\n                        <p>\n                            The Office Main Theme - Anotymous\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/2c2\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/2c2/ddb478a5ea54861c7059c6dbf8c073ee37b31d65.jpg);\"></div>\n                        <p>\n                            My Name is Jonas - diink\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://gonewiththetwins.com/new/wp-content/uploads/2015/08/shrek.jpg);\"></div>\n                        <p>\n                            The Shrek Movie - KingPeucheYT\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/7580\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/7580/627ae49b391a5a935eb29c4b9e321effc3900d9e.jpg);\"></div>\n                        <p>\n                            Lolmao plays Louder Than Steel - FatBeanzoop\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/946c\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/songs/DC13CAE8586AA80AD4241BECDA91C24C842340CE.png);\"></div>\n                        <p>\n                            Minecraft in Beat Saber - sboys3.com\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #boomerMap>\n            <h2>Best Boomer Map</h2>\n            <div class=\"mapNominees\">\n                <a href=\"https://beatsaver.com/beatmap/1db6\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/1db6/196d1061eac3cd4bc586e5afcaea07c35f1d69d0.jpg);\"></div>\n                        <p>\n                            Setsuna Imitation - saut\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/250\" target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/250/ad64505817b3e2ab6cc5c7007fcfa07f2c34d1f4.jpg);\"></div>\n                        <p>\n                            Freedom Dive - Roffle\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/e27\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/e27/d3a0de31ebe3b61d3328d03a0e82c4152a9be5a8.jpg);\"></div>\n                        <p>\n                            Blue Zenith - bananentropfen\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/2f94\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/2f94/200549108bb22752112c62d102bf69ee0c47fd7a.png);\"></div>\n                        <p>\n                            DeltaMax - Yun0\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/27d8\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/27d8/d60ca1e3b6175d57dac7463d532989f83c257efb.jpg);\"></div>\n                        <p>\n                            Monochrome Butterfly - fraies\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/17f9\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/17f9/108c239db3c0596f1ba7426353af1b4cc4fd8b08.jpg);\"></div>\n                        <p>\n                            Tower of Heaven V2 - Zorowo\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/1a15/c1489448cce99d8dcf5b18c70223618284193408.jpg);\"></div>\n                        <p>\n                            Nisemono - Hexagonial\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/7580\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/145c/87ecc58926a76c51a0719806e24f69e4c56c1d09.jpg);\"></div>\n                        <p>\n                            Speed of Link (Hexagonial Diff)\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/songs/FF8C748A683122BAE2D2796B7290EC47EADC45CE.png);\"></div>\n                        <p>\n                            Burnt Rice - Hexagonial\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/14f8\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/14f8/37650cf3a4da781b16fe47cff63df0df2e3e8a43.jpg);\"></div>\n                        <p>\n                            Your Voice So - roeek\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #boomerMapper>\n            <h2>Best Boomer Mapper (Best 2018 Mapper)</h2>\n            <div class=\"mapNominees\">\n                <a arget=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Saut\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198220149073.jpg);\"></div>\n                        <p>\n                            Hexagonial\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/d4/d41f15a0beaee5e70131d68b92522b59c2e40964_full.jpg);\"></div>\n                        <p>\n                            Freeek\n                        </p>\n                    </div>\n                </a>\n                <a arget=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Rustic\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198041191427.jpg);\"></div>\n                        <p>\n                            Mystikmol\n                        </p>\n                    </div>\n                </a>\n                <a arget=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Krydar\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            GreatYazer\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Squeaksies\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            BlackBlazon\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198057326967.jpg);\"></div>\n                        <p>\n                            Pug\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198056413446.jpg);\"></div>\n                        <p>\n                            Iraky\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198011570317.jpg);\"></div>\n                        <p>\n                            OrangeW\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Yun0\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561197965444209.jpg);\"></div>\n                        <p>\n                            RedMagi\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #mapper2019>\n            <h2>Best 2019 Mapper</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198051924392.jpg);\"></div>\n                        <p>\n                            Light Ai\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198126979074.jpg);\"></div>\n                        <p>\n                            puds\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            DE125\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198063141432.jpg);\"></div>\n                        <p>\n                            Hoppaw\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198163862964.jpg);\"></div>\n                        <p>\n                            Fern\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198061865957.jpg);\"></div>\n                        <p>\n                            Fraies\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198165926393.jpg);\"></div>\n                        <p>\n                            Jez\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198082354639.jpg);\"></div>\n                        <p>\n                            Nuketime\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198114011987.jpg);\"></div>\n                        <p>\n                            Oddloop\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198043801246.jpg);\"></div>\n                        <p>\n                            Joetastic\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198079502428.jpg);\"></div>\n                        <p>\n                            Scrappy\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #mapper2020>\n            <h2>Best Zoomer Mapper (Best 2020 Mapper)</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198150732193.jpg);\"></div>\n                        <p>\n                            Rogdude\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198045559635.jpg);\"></div>\n                        <p>\n                            FatBeanzoop\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198333869741.jpg);\"></div>\n                        <p>\n                            Cerret\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198082797048.jpg);\"></div>\n                        <p>\n                            Nolanimations\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198032879786.jpg);\"></div>\n                        <p>\n                            Teuflum\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198154857191.jpg);\"></div>\n                        <p>\n                            Vilawes\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561197987180921.jpg);\"></div>\n                        <p>\n                            CheckthePan\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198095106486.jpg);\"></div>\n                        <p>\n                            muffin\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198281878350.jpg);\"></div>\n                        <p>\n                            That_Narwhal\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198285246326.jpg);\"></div>\n                        <p>\n                            ComplexFrequency\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #techMapper>\n            <h2>Best Tech Mapper</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198180044686.jpg);\"></div>\n                        <p>\n                            Cooling Closet\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198042919271.jpg);\"></div>\n                        <p>\n                            Cheesydream\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Saut\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198065813548.jpg);\"></div>\n                        <p>\n                            Uninstaller\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/af/afa2ff0e6e96e3603dfa715be825962225a39f15_full.jpg);\"></div>\n                        <p>\n                            MaNaB\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            kizuflux\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198151324194.jpg);\"></div>\n                        <p>\n                            Halcyon\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198362923485.jpg);\"></div>\n                        <p>\n                            Tseska\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198122376182.jpg);\"></div>\n                        <p>\n                            Schwank\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #shitpostMapper>\n            <h2>Best Shitpost/Insane/Crack-Cocaine Mapper</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Sniffyz\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            BBBear\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198165735792.jpg);\"></div>\n                        <p>\n                            bannanentropfen\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198073989976.jpg);\"></div>\n                        <p>\n                            Loloppe\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198082394568.jpg);\"></div>\n                        <p>\n                            CriminalCannoli\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198301082541.jpg);\"></div>\n                        <p>\n                            miitchel\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/oculus.png);\"></div>\n                        <p>\n                            WDG_Mid\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #streamer>\n            <h2>Best Streamer on Twitch</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198005985428.jpg);\"></div>\n                        <p>\n                            Ejiejidayo\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198009689541.jpg);\"></div>\n                        <p>\n                            Bandoot\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198075009026.jpg);\"></div>\n                        <p>\n                            Tempex\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198064659288.jpg);\"></div>\n                        <p>\n                            Denyah\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198187936410.jpg);\"></div>\n                        <p>\n                            Garsh\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/oculus.png);\"></div>\n                        <p>\n                            TheJumpingSheep\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198045386379.jpg);\"></div>\n                        <p>\n                            Duh Hello\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198362923485.jpg);\"></div>\n                        <p>\n                            Tseska\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198089492236.jpg);\"></div>\n                        <p>\n                            ezkills_\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #mixedRealityStreamer>\n            <h2>Best Mixed Reality Streamer on Twitch</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198035698451.jpg);\"></div>\n                        <p>\n                            Mawntee\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198167393974.jpg);\"></div>\n                        <p>\n                            LSToast\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198005025810.jpg);\"></div>\n                        <p>\n                            Krayn\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198178407566.jpg);\"></div>\n                        <p>\n                            Acetari\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198076378031.jpg);\"></div>\n                        <p>\n                            ForeheadFox\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198033166451.jpg);\"></div>\n                        <p>\n                            Silverhaze\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Lyfesaver74\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198101888037.jpg);\"></div>\n                        <p>\n                            WulfgarinDnD\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198031152210.jpg);\"></div>\n                        <p>\n                            Sehria_K\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bestYoutuber>\n            <h2>Best Beat Saber Youtuber</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198009689541.jpg);\"></div>\n                        <p>\n                            Bandoot\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198075009026.jpg);\"></div>\n                        <p>\n                            Tempex\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198005985428.jpg);\"></div>\n                        <p>\n                            Ejejidayo\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198082797048.jpg);\"></div>\n                        <p>\n                            Nolanimations\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Naluluna\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198153055189.jpg);\"></div>\n                        <p>\n                            makeUmove\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://yt3.ggpht.com/ytc/AAUvwngv2ljR_MGhvaMM1nZaXbdz88IQFc9N4D170wcQpw=s88-c-k-c0x00ffffff-no-rj);\"></div>\n                        <p>\n                            omotea\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://www.pcgamesn.com/wp-content/uploads/2019/04/beat-saber-jimmy-fallon.jpg);\"></div>\n                        <p>\n                            Jimmy Fallon from the Tonight Show\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #accAndy>\n            <h2>Best Acc Andy</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198166289091.jpg);\"></div>\n                        <p>\n                            Rocker\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198186151129.jpg);\"></div>\n                        <p>\n                            Pandita\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/oculus.png);\"></div>\n                        <p>\n                            SFK\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198167588802.jpg);\"></div>\n                        <p>\n                            Brylanbbab\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198844720141.jpg);\"></div>\n                        <p>\n                            Vinabby\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198999385463.jpg);\"></div>\n                        <p>\n                            WoltixO\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198138161802.jpg);\"></div>\n                        <p>\n                            Joshabi\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198110018904.jpg);\"></div>\n                        <p>\n                            Whiisper\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bestBoomer>\n            <h2>Best Boomer</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561197978021272.jpg);\"></div>\n                        <p>\n                            Amanatsu\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198077062414.jpg);\"></div>\n                        <p>\n                            Woops\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198011570317.jpg);\"></div>\n                        <p>\n                            OrangeW\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198217008717.jpg);\"></div>\n                        <p>\n                            Magician\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198150732193.jpg);\"></div>\n                        <p>\n                            Rogdude\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198070511128.jpg);\"></div>\n                        <p>\n                            AtomicX\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198156937943.jpg);\"></div>\n                        <p>\n                            Yoshi\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198180044686.jpg);\"></div>\n                        <p>\n                            CoolingCloset\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198040649885.jpg);\"></div>\n                        <p>\n                            RandomKenny\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bsMeme>\n            <h2>Best Beat Saber Related Meme</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg winner\">\n                        <!-- <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/ff9/cb9f1581ff6c09130c991db8823c5953c660688f.jpg);\"></div> -->\n                        <p>\n                            Beat Saber Songs taken literally\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <!-- <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/6bf9/77792ce1f1d03d9089a81c09f3affab6d488229f.jpg);\"></div> -->\n                        <p>\n                            Tom Scott tracking loss\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <!-- <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/5851/31138c054d7ca6b318c8d628015a5ccb996416e0.jpg);\"></div> -->\n                        <p>\n                            Multiplayer (85% done)\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <!-- <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/86e/280be3d96970f0222c75e9ddcffa8880418c8796.jpg);\"></div> -->\n                        <p>\n                            Logan Rank 5\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <!-- <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/53d9/d8cd049712c82d272a2a6643e44cdcfdae040ce0.jpg);\"></div> -->\n                        <p>\n                            BTS release video\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <!-- <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/2c2/ddb478a5ea54861c7059c6dbf8c073ee37b31d65.jpg);\"></div> -->\n                        <p>\n                            World Cup Memes\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <!-- <div class=\"imgWrapper\" style=\"background-image: url(https://gonewiththetwins.com/new/wp-content/uploads/2015/08/shrek.jpg);\"></div> -->\n                        <p>\n                            ppV3 coming out anytime soon\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <!-- <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/7580/627ae49b391a5a935eb29c4b9e321effc3900d9e.jpg);\"></div> -->\n                        <p>\n                            LinusTechTips\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <!-- <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/songs/DC13CAE8586AA80AD4241BECDA91C24C842340CE.png);\"></div> -->\n                        <p>\n                            RCTTS, TTFAF, RAP GOD\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #leaderboardGod>\n            <h2>Best LeaderBoard God</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/oculus.png);\"></div>\n                        <p>\n                            Taichi\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198180044686.jpg);\"></div>\n                        <p>\n                            CoolingCloset\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/oculus.png);\"></div>\n                        <p>\n                            Astrella\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198333869741.jpg);\"></div>\n                        <p>\n                            Cerret\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198011570317.jpg);\"></div>\n                        <p>\n                            OrangeW\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198070511128.jpg);\"></div>\n                        <p>\n                            AtomicX\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198154714707.jpg);\"></div>\n                        <p>\n                            bckill\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bestCaster>\n            <h2>Best Caster for Tournaments</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198179181242.jpg);\"></div>\n                        <p>\n                            Bantalope\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198175606462.jpg);\"></div>\n                        <p>\n                            Wolven\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198217008717.jpg);\"></div>\n                        <p>\n                            Magician\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198041191427.jpg);\"></div>\n                        <p>\n                            Mystikmol\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198168188490.jpg);\"></div>\n                        <p>\n                            Kosmos\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198043520886.jpg);\"></div>\n                        <p>\n                            Zander\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198049906407.jpg);\"></div>\n                        <p>\n                            Teapot\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561197992904475.jpg);\"></div>\n                        <p>\n                            Ingorum\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bestLighter>\n            <h2>Best Lighter</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198036226075.jpg);\"></div>\n                        <p>\n                            Aaltopah\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561197999988423.jpg);\"></div>\n                        <p>\n                            ExUnreal\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198094952732.jpg);\"></div>\n                        <p>\n                            TheRealZeroz\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198067735340.jpg);\"></div>\n                        <p>\n                            Skeelie\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Aeroluna\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198114011987.jpg);\"></div>\n                        <p>\n                            Oddloop\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198976682243.jpg);\"></div>\n                        <p>\n                            Pixelguy\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Loloppe (Lolighter)\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bestTournament>\n            <h2>Best Tournament</h2>\n            <div class=\"tourneyNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://cdn.discordapp.com/icons/634814324405305392/7dfeb4a698ba86d708d38c67743c99d5.webp?size=128);\"></div>\n                        <p>\n                            Beat Saber World Cup\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(/assets/images/2147484041.webp);\"></div>\n                        <p>\n                            BeatKhana!'s Rumble Royale\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(/assets/images/2147484171.webp);\"></div>\n                        <p>\n                            BeatKhana!'s Random Song Tournament\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(/assets/images/2147484184.webp);\"></div>\n                        <p>\n                            The Beat Saber League\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(/assets/images/2147484071.webp);\"></div>\n                        <p>\n                            Shitmiss City\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(/assets/images/2147484131.webp);\"></div>\n                        <p>\n                            The Accuracy League\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(/assets/images/2147484182.webp);\"></div>\n                        <p>\n                            Vision Block\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(/assets/images/2147484187.webp);\"></div>\n                        <p>\n                            Hidden Sabers\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://media.discordapp.net/attachments/441807344591044619/582061239061184522/SSS_Orange_Wide.png?width=641&height=198);\"></div>\n                        <p>\n                            Summer Saber Stars\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bestMascot>\n            <h2>Best Mascot</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://cdn.discordapp.com/emojis/606610063641280522.png?v=1);\"></div>\n                        <p>\n                            Akane\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://cdn.discordapp.com/emojis/606610948580573186.png?v=1);\"></div>\n                        <p>\n                            Kanade\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://cdn.discordapp.com/emojis/627577894125699082.png?v=1);\"></div>\n                        <p>\n                            Bill\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://cdn.discordapp.com/emojis/627577877982085120.png?v=1);\"></div>\n                        <p>\n                            Paul\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://cdn.discordapp.com/emojis/638440635103182869.png?v=1);\"></div>\n                        <p>\n                            CMB\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bestSaberMaker>\n            <h2>Best Saber Maker</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198257978632.jpg);\"></div>\n                        <p>\n                            Mdot\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198084359108.jpg);\"></div>\n                        <p>\n                            Altair\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198146373924.jpg);\"></div>\n                        <p>\n                            Okachamie\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198335894744.jpg);\"></div>\n                        <p>\n                            Parapass\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/oculus.png);\"></div>\n                        <p>\n                            Raphpower\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198006074656.jpg);\"></div>\n                        <p>\n                            Hooi\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Thot Dog\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bestBlockMaker>\n            <h2>Best Block Maker</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198076664624.jpg);\"></div>\n                        <p>\n                            Bobbie\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/404.jpg);\"></div>\n                        <p>\n                            Headassbtw\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/oculus.png);\"></div>\n                        <p>\n                            Raphpower\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198335894744.jpg);\"></div>\n                        <p>\n                            Parapass\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bestMod>\n            <h2>Best Mod</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Camera+\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            SaberTailor\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            ScoreSaber\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            HitScoreVisualizer\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            SongBrowser\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Intro Skip\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Noodle Extensions\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Mapping Extensions\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Custom Avatars\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Particle Overdrive\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #worstMenu>\n            <h2>Worst Beat Saber Menu</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Beta Menu (Pre 0.13.0)\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Full Release Menu (Post 0.13.0)\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Post Multiplayer Menu (1.12.1)\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bestFurry>\n            <h2>Best Furry</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198019856958.jpg);\"></div>\n                        <p>\n                            Cyansnow\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198063268251.jpg);\"></div>\n                        <p>\n                            Moon\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198041649354.jpg);\"></div>\n                        <p>\n                            Interz\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198070511128.jpg);\"></div>\n                        <p>\n                            AtomicX\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bestVoice>\n            <h2>Best Voice</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/oculus.png);\"></div>\n                        <p>\n                            Astrella\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198374798540.jpg);\"></div>\n                        <p>\n                            Ptopa\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198045386379.jpg);\"></div>\n                        <p>\n                            Duh Hello (dikke bmw)\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198044562405.jpg);\"></div>\n                        <p>\n                            Flee\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198175606462.jpg);\"></div>\n                        <p>\n                            Wolven\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bestClan>\n            <h2>Best Clan</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            FOAA\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            WDG\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            ACC\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Ball Sack Gaming\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            YEP\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            PWTFAATC Clan\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            FNAF Gaming\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            -VGN-\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            TN\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bestModder>\n            <h2>Best Modder</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Kyle1413\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198076664624.jpg);\"></div>\n                        <p>\n                            Bobbie\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198088728803.jpg);\"></div>\n                        <p>\n                            AurosVR\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198183820433.jpg);\"></div>\n                        <p>\n                            Pink\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198036338094.jpg);\"></div>\n                        <p>\n                            Shadnix\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Toni Macaroni\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Caeden117\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Megalon\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198063268251.jpg);\"></div>\n                        <p>\n                            Moon\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198337126899.jpg);\"></div>\n                        <p>\n                            Lillie\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n    </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { AppComponent } from '../app.component';\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport { CreateBadgeComponent } from '../_modals/create-badge/create-badge.component';\n\n@Component({\n    selector: 'app-badges',\n    templateUrl: './badges.component.html',\n    styleUrls: ['./badges.component.scss']\n})\nexport class BadgesComponent extends AppComponent implements OnInit {\n\n    loading = true;\n\n    badges: any = [];\n\n    displayedColumns: string[] = ['image', 'description', 'edit', 'delete'];\n\n    async ngOnInit(): Promise<void> {\n        this.badges = await this.http.get(`/api/badges`).toPromise();\n        this.loading = false;\n    }\n\n    createBadge() {\n        const dialog = this.dialog.open(CreateBadgeComponent, {\n            minWidth: '50vw',\n            // width: '50vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw'\n        });\n\n        dialog.afterClosed()\n            .subscribe(async data => {\n                this.badges = await this.http.get(`/api/badges`).toPromise();\n            });\n    }\n\n    editBadge(badge) {\n        const dialog = this.dialog.open(CreateBadgeComponent, {\n            minWidth: '50vw',\n            // width: '50vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: badge\n        });\n\n        dialog.afterClosed()\n            .subscribe(async data => {\n                this.badges = await this.http.get(`/api/badges`).toPromise();\n            });\n    }\n\n    delteBadge(badge) {\n        const dialog = this.dialog.open(ConfirmDialogComponent, {\n            // height: '400px',\n            width: '400px',\n            data: {\n                cancelText: 'Cancel',\n                confirmText: 'Delete',\n                message: 'Are you sure you want to delete, this cannot be undone',\n                title: 'Delete Badge?'\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(async data => {\n                if (data) {\n                    try {\n                        await this.http.delete(`/api/badge/${badge.id}`).toPromise();\n                        this.notif.showSuccess('', 'Successfully deleted badge');\n                        this.badges = await this.http.get(`/api/badges`).toPromise();\n                    } catch (error) {\n                        console.error(\"Error: \", error);\n                        this.notif.showError('', 'Error deleting badge');\n                    }\n                }\n            });\n    }\n\n}\n","<div *ngIf=\"loading else loaded\">\n    <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 100px;\">\n</div>\n\n<ng-template #loaded>\n    <div class=\"container\">\n        <div class=\"card noHover\">\n            <div class=\"card-body\">\n                <h1>Badges</h1>\n                <table mat-table [dataSource]=\"badges\" class=\"card-text\">\n                    <ng-container matColumnDef=\"image\">\n                        <th mat-header-cell *matHeaderCellDef> </th>\n                        <td mat-cell *matCellDef=\"let badge\">\n                            <img src=\"/assets/badges/{{badge.image}}.png\" alt=\"\" srcset=\"\">\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"description\">\n                        <th mat-header-cell *matHeaderCellDef> Description </th>\n                        <td mat-cell *matCellDef=\"let badge\"> {{badge.description}} </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"edit\">\n                        <th mat-header-cell *matHeaderCellDef> </th>\n                        <td mat-cell *matCellDef=\"let badge\">\n                            <button mat-button color=\"primary\" (click)=\"editBadge(badge)\">Edit</button>\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"delete\">\n                        <th mat-header-cell *matHeaderCellDef> </th>\n                        <td mat-cell *matCellDef=\"let badge\">\n                            <button mat-button color=\"warn\" (click)=\"delteBadge(badge)\">Delete</button>\n                        </td>\n                    </ng-container>\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                </table>\n\n                <button mat-stroked-button color=\"primary\" (click)=\"createBadge()\">Create Badge</button>\n            </div>\n        </div>\n    </div>\n</ng-template>","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Observable } from 'rxjs';\nimport { AppComponent } from '../app.component';\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport { NotificationService } from '../services/toast.service';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\nimport { bracketMatch } from '../_models/bracket.model';\nimport { map, startWith } from 'rxjs/operators';\nimport { EditBracketMatchComponent } from '../_modals/edit-bracket-match/edit-bracket-match.component';\n\n@Component({\n    selector: 'app-bracket',\n    templateUrl: './bracket.component.html',\n    styleUrls: ['./bracket.component.scss']\n})\nexport class BracketComponent extends AppComponent implements OnInit {\n\n    private url = '/api/tournament';\n    @Input() tournament;\n    public tourneyId: string;\n\n    ws: WebSocketSubject<any> = webSocket(`${location.protocol == 'http:' ? 'ws' : 'wss'}://` + location.host + '/api/ws');\n\n    bracketData = [];\n    loading = true;\n\n    isAuth = false;\n    btnText = 'Generate Bracket';\n\n    interval;\n\n    ngOnInit(): void {\n        this.initSettings();\n        let node = document.createElement('script');\n        node.src = 'https://embed.twitch.tv/embed/v1.js';\n        node.type = 'text/javascript';\n        document.getElementsByTagName('head')[0].appendChild(node);\n        this.ws.subscribe(\n            msg => {\n                if (msg.bracketMatch) this.updateDrawnMatch(msg.bracketMatch);\n            },\n            err => console.log(err)\n        );\n        this.ws.next({ setTournament: this.tournament.tournamentId });\n    }\n\n    ngOnDestroy() {\n        clearInterval(this.interval);\n        this.ws.complete();\n    }\n\n    async initSettings() {\n        // const matchesData: any = await this.http.get(`/api/tournament/${this.tournament.tournamentId}/bracketTest`).toPromise();\n        const matchesData: any = await this.http.get(`/api/tournament/${this.tournament.tournamentId}/bracket`).toPromise();\n        this.bracketData = matchesData;\n        if (matchesData.length > 0) {\n            this.btnText = 'Regenerate Bracket';\n        }\n        // const usr: any = await this.http.get(`/api/user`).toPromise();\n        const usr: any = await this.userS.curUser();\n        this.user = usr != null ? usr : null;\n        // console.log(this.user);\n        if (this.user != null && (this.user.roleIds.includes(\"1\") || this.tournament.owner == this.user.discordId)) {\n            this.isAuth = true;\n        }\n\n        if (matchesData.length > 0) BracketComponent.generateMatches(this.bracketData, this.intervalIteration);\n        BracketComponent.generateLabels(this.bracketData);\n        this.intervalIteration = 1;\n        // console.log(matchesData.filter(x => x.round == 0).length);\n        // console.log(matchesData)\n        let matchElements = document.getElementsByClassName('match');\n        for (let i = 0; i < matchElements.length; i++) {\n            const element = matchElements[i];\n            element.addEventListener(\"click\", () => this.updateMatch(element.getAttribute('data-matchid')))\n        }\n        this.loading = false;\n    }\n\n    async updateBracket() {\n        // const matchesData: any = await this.http.get(`/api/tournament/${this.tournament.tournamentId}/bracketTest`).toPromise();\n        const matchesData: any = await this.http.get(`/api/tournament/${this.tournament.tournamentId}/bracket`).toPromise();\n        this.bracketData = matchesData;\n\n        if (matchesData.length > 0) BracketComponent.generateMatches(this.bracketData, this.intervalIteration);\n        BracketComponent.generateLabels(this.bracketData);\n\n        let matchElements = document.getElementsByClassName('match');\n        for (let i = 0; i < matchElements.length; i++) {\n            const element = matchElements[i];\n            element.addEventListener(\"click\", () => this.updateMatch(element.getAttribute('data-matchid')))\n        }\n\n        this.loading = false;\n    }\n\n    async genBracket() {\n        const dialog = this.dialog.open(generateBracketDialog, {\n            minWidth: '50vw',\n            // width: '50vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: this.tournament\n        });\n\n        dialog.afterClosed()\n            .subscribe(async data => {\n                this.updateBracket();\n            });\n    }\n\n    updateMatch(id) {\n        const dialog = this.dialog.open(updateMatchDialog, {\n            minWidth: '60vw',\n            width: '60vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            panelClass: 'matchPanel',\n            data: { ...this.bracketData.find(x => x.id == id), isAuth: this.isAuth }\n        });\n\n        dialog.afterClosed()\n            .subscribe(data => {\n                if (data) {\n                    this.initSettings();\n                }\n            })\n    }\n\n    updateDrawnMatch(data: bracketMatch) {\n        let matchElem = document.getElementById(data.id);\n        let index = this.bracketData.findIndex(x => x.id == data.id);\n        this.bracketData[index] = { ...this.bracketData[index], ...data };\n        matchElem.querySelector('.pName.p1').innerHTML = data.p1.name || data.p1.id;\n        matchElem.querySelector('.pName.p2').innerHTML = data.p2.name || data.p2.id;\n        BracketComponent.generateLabels(this.bracketData);\n        if (data.status == 'in_progress') {\n            (<SVGPathElement>matchElem.querySelector('.in_progress')).style.display = 'inline';\n        } else {\n            (<SVGPathElement>matchElem.querySelector('.in_progress')).style.display = 'none';\n        }\n        if (data.p1.score != data.p2.score && data.status == 'complete') {\n            matchElem.querySelector('.pScore.p1')?.classList.remove('winner');\n            matchElem.querySelector('.pScore.p1')?.classList.remove('loser');\n            matchElem.querySelector('.pScore.p2')?.classList.remove('winner');\n            matchElem.querySelector('.pScore.p2')?.classList.remove('loser');\n            if (data.p1.score > data.p2.score) {\n                matchElem.querySelector('.pScore.p1')?.classList.add('winner');\n                matchElem.querySelector('.pScore.p2')?.classList.add('loser');\n            } else {\n                matchElem.querySelector('.pScore.p1')?.classList.add('loser');\n                matchElem.querySelector('.pScore.p2')?.classList.add('winner');\n            }\n        }\n\n        if (data.p1.score != 0 || (data.status == 'in_progress' || data.status == 'complete')) matchElem.querySelector('.pScore.p1').innerHTML = data.p1.score.toString();\n        if (data.p2.score != 0 || (data.status == 'in_progress' || data.status == 'complete')) matchElem.querySelector('.pScore.p2').innerHTML = data.p2.score.toString();\n\n        matchElem.querySelector('.img.p1')?.setAttribute('href', data.p1.avatar ? `href=\"https://cdn.discordapp.com/avatars/${data.p1.id}${data.p1.avatar}\"` : '');\n        matchElem.querySelector('.img.p2')?.setAttribute('href', data.p2.avatar ? `href=\"https://cdn.discordapp.com/avatars/${data.p2.id}${data.p2.avatar}\"` : '');\n        matchElem.classList.remove('hidden');\n        let lineElem = document.querySelectorAll(`[data-round=\"${data.round}\"][data-match=\"${data.matchNum}\"]`);\n        for (const line of lineElem) line.classList.remove('hidden');\n        if (data.bye) {\n            matchElem.classList.add('hidden');\n            for (const line of lineElem) line.classList.add('hidden');\n        }\n    }\n\n    matches = [];\n    winnersMatches = [];\n    losersMatches = [];\n\n    intervalIteration = 0;\n\n    static generateMatches(bracketMatches, intervalIteration) {\n        const slider: any = document.querySelector('#svgContainer');\n        let isDown = false;\n        let startX;\n        let scrollLeft;\n        let startY;\n        let scrollDown;\n\n        slider.addEventListener('mousedown', (e: any) => {\n            isDown = true;\n            document.getElementById(\"bracket-svg\").style.cursor = \"grabbing\";\n            slider.classList.add('active');\n            startX = e.pageX - slider.offsetLeft;\n            startY = e.pageY - slider.offsetTop;\n            scrollLeft = slider.scrollLeft;\n            scrollDown = slider.scrollTop;\n        });\n        slider.addEventListener('mouseleave', () => {\n            isDown = false;\n            slider.classList.remove('active');\n        });\n        slider.addEventListener('mouseup', () => {\n            isDown = false;\n            document.getElementById(\"bracket-svg\").style.cursor = \"grab\";\n            slider.classList.remove('active');\n        });\n        slider.addEventListener('mousemove', (e) => {\n            if (!isDown) return;\n            e.preventDefault();\n            const x = e.pageX - slider.offsetLeft;\n            const walk = (x - startX); //scroll-fast\n            const y = e.pageY - slider.offsetTop;\n            const walk2 = (y - startY);\n            slider.scrollLeft = scrollLeft - walk;\n            slider.scrollTop = scrollDown - walk2;\n            // console.log(walk);\n        });\n\n        // this.firstId = data[0].id;\n\n        const svgMain = document.createElement('svg');\n        svgMain.setAttribute('id', \"bracket-svg\");\n        svgMain.classList.add('\"bracket-svg\"');\n\n        var matches = {};\n\n        for (let i = 0; i < bracketMatches.length; i++) {\n            const element = bracketMatches[i];\n            // console.log(element);\n            // matches\n            if (!matches[element['round']]) {\n                matches[element['round']] = [];\n            }\n\n            matches[element['round']].push(element);\n            // this.gMatches.push(element);\n        }\n\n        // console.log(matches);\n\n\n        var singleMatchRound;\n\n        const winnersMatches = [];\n        const iterator = Object.keys(matches);\n        for (const key of iterator) {\n            if (+key >= 0) {\n                winnersMatches.push(matches[key]);\n            }\n        }\n\n        const losersMatches = [];\n        for (const key of iterator) {\n            if (+key < 0) {\n                losersMatches.push(matches[key]);\n            }\n        }\n\n        const height = losersMatches.length > 0 ? winnersMatches[0].length * 60 + losersMatches[0].length * 60 + 200 : winnersMatches[0].length * 60 + 200;\n        const width = losersMatches.length > 0 ? losersMatches.length * 200 + 150 : winnersMatches.length * 200 + 150;\n\n        svgMain.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n        svgMain.setAttribute(\"width\", `${width}`);\n        svgMain.setAttribute(\"height\", `${height}`);\n        svgMain.style.minWidth = width + 220 + 'px';\n\n        document.getElementById('svgContainer').setAttribute(\"style\", `height:${height}px`);\n\n        // console.log(winnersMatches);\n        // console.log(losersMatches);\n\n        for (let i = 0; i < Object.keys(matches).length; i++) {\n            const round = matches[i];\n            if (round.length == 1) {\n                singleMatchRound = i;\n                break;\n            }\n        }\n\n        for (let i = 0; i < winnersMatches.length; i++) {\n            const round = matches[i];\n            const gRound = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n            gRound.setAttribute(\"transform\", \"translate(\" + (i * 220 - 100) + \", 30)\");\n            // gRound.setAttribute(\"data-matchId\", match['id']);\n            gRound.classList.add('round-' + i);\n\n            for (let j = 0; j < round.length; j++) {\n                const match = round[j];\n                let svgMatch = BracketComponent.createSvgMatch(j, match, bracketMatches, round, singleMatchRound, intervalIteration, false);\n                gRound.appendChild(svgMatch);\n            }\n            svgMain.appendChild(gRound);\n        }\n\n        let loserMatchCounter = 0;\n        for (let i = 0; i < losersMatches.length; i++) {\n            const round = losersMatches[i];\n            if (round.filter(x => !x.bye).length == 0) continue;\n            const gRound = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n            gRound.setAttribute(\"transform\", \"translate(\" + (loserMatchCounter * 220 - 100) + \", \" + (winnersMatches[0].length * 60 + 150) + \")\");\n            gRound.classList.add('round-' + loserMatchCounter);\n            gRound.classList.add('losers');\n            for (let j = 0; j < round.length; j++) {\n                const match: bracketMatch = round[j];\n                let svgMatch = BracketComponent.createSvgMatch(j, match, bracketMatches, round, singleMatchRound, intervalIteration, true);\n                gRound.appendChild(svgMatch);\n            }\n            svgMain.appendChild(gRound);\n            loserMatchCounter++;\n        }\n\n        const gLines = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n        gLines.classList.add('lines');\n        const gHeaders = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n        gHeaders.classList.add('headers');\n        // console.log(bracketMatches)\n        for (let i = 0; i < winnersMatches.length - 1; i++) {\n            const round = matches[i];\n\n            for (let j = 0; j < round.length; j++) {\n                const match = round[j];\n                var multi = i != 0 ? (60 * (2 ** i)) : 60;\n                // var startPos = 0.5 * (2 ** i) * 60;\n                var startPos = round.length != 1 ? 0.5 * (2 ** i) * 60 + 30 : 0.5 * (2 ** singleMatchRound) * 60 + 30;\n\n                let curY = (multi * j) + startPos + 10;\n                let curX = (i * 220 - 100) + 184;\n\n                var multi2 = (i + 1) != 0 ? (60 * (2 ** (i + 1))) : 60;\n                var startPos2 = round.length != 1 ? 0.5 * (2 ** (i + 1)) * 60 + 30 : 0.5 * (2 ** singleMatchRound) * 60 + 30;\n\n                let nextY = (multi2 * Math.floor(j / 2)) + startPos2 + 10;\n                let nextX = ((i + 1) * 220 - 100);\n\n                let xDist = nextX - curX;\n                let yDist = nextY - curY;\n                let matchLine = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n                matchLine.setAttribute('d', `M${curX} ${curY} l${xDist / 4} 0 l${xDist / 2} ${yDist} l${xDist / 4} 0`);\n                matchLine.setAttribute('stroke-width', \"1px\");\n                matchLine.classList.add(\"matchLine\");\n                // matchLine.setAttribute(\"data\", `round: '${i + 1}', match: '${Math.floor(j / 2)}'`);\n                matchLine.dataset.round = (i + 1).toString();\n                matchLine.dataset.match = Math.floor(j / 2).toString();\n                if (match['bye'] || (winnersMatches[i + 1][Math.floor(j / 2)] != undefined && winnersMatches[i + 1][Math.floor(j / 2)]['bye'])) {\n                    matchLine.classList.add(\"hidden\");\n                }\n                if (intervalIteration > 0) {\n                    matchLine.classList.add('noAnim');\n                }\n                gLines.appendChild(matchLine);\n            }\n\n            const roundLabel = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n            roundLabel.setAttribute(\"transform\", \"translate(\" + (i * 220 - 100) + \", 0)\");\n            const labelRect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n            labelRect.setAttribute(\"width\", '184');\n            labelRect.setAttribute(\"height\", '30');\n            labelRect.classList.add('labelBox');\n            labelRect.classList.add('matchPath');\n            if (intervalIteration > 0) {\n                labelRect.classList.add('noAnim');\n            }\n            roundLabel.appendChild(labelRect);\n            const labelText = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n            labelText.classList.add('labelText');\n            labelText.setAttribute(\"x\", '95');\n            labelText.setAttribute(\"y\", '21');\n            labelText.setAttribute(\"height\", '15');\n            labelText.setAttribute(\"width\", '190');\n            labelText.setAttribute(\"text-anchor\", \"middle\");\n            labelText.innerHTML = \"Round \" + (i + 1);\n            roundLabel.appendChild(labelText);\n            gHeaders.appendChild(roundLabel);\n\n        }\n\n        let i = 0;\n        for (let loserMatchCounter = 0; loserMatchCounter < losersMatches.length - 1; loserMatchCounter++) {\n            const round = losersMatches[loserMatchCounter];\n            if (round.filter(x => !x.bye).length <= 0) continue;\n            for (let j = 0; j < round.length; j++) {\n                const match: bracketMatch = round[j];\n                var multi = i != 0 ? (60 * (2 ** Math.floor(loserMatchCounter / 2))) : 60;\n                // var startPos = 0.5 * (2 ** i) * 60;\n                var startPos = round.length != 1 ? 0.5 * (2 ** Math.floor(loserMatchCounter / 2)) * 60 + (winnersMatches[0].length * 60 + 150) : 0.5 * (2 ** (Math.floor(singleMatchRound / 2) + 1)) * 60 + (winnersMatches[0].length * 60 + 150);\n\n                let curY = (multi * j) + startPos + 10;\n                let curX = (i * 220 - 100) + 184;\n\n                var multi2 = (i + 1) != 0 ? (60 * (2 ** (Math.floor(i / 2) + 1))) : 60;\n                var startPos2 = round.length != 1 ? 0.5 * (2 ** (Math.floor(i / 2) + 1)) * 60 + (winnersMatches[0].length * 60 + 150) : 0.5 * (2 ** (Math.floor(singleMatchRound / 2) + 1)) * 60 + (winnersMatches[0].length * 60 + 150);\n\n                let nextY = (multi2 * Math.floor(j / 2)) + startPos2 + 10;\n                let nextX = ((i + 1) * 220 - 100);\n\n                let xDist = nextX - curX;\n                let yDist = nextY - curY;\n                let matchLine = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n                if (loserMatchCounter % 2 == 1) {\n                    matchLine.setAttribute('d', `M${curX} ${curY} l${xDist / 4} 0 l${xDist / 2} ${yDist} l${xDist / 4} 0`);\n                } else {\n                    matchLine.setAttribute('d', `M${curX} ${curY} l${xDist} 0`);\n                }\n                matchLine.setAttribute('stroke-width', \"1px\");\n                matchLine.classList.add(\"matchLine\");\n                matchLine.dataset.round = (i + 1).toString();\n                matchLine.dataset.match = Math.floor(j / 2).toString();\n                if (match['bye'] || (losersMatches[loserMatchCounter + 1][Math.floor(j / 2)] != undefined && losersMatches[loserMatchCounter + 1][Math.floor(j / 2)]['bye'])) {\n                    matchLine.classList.add(\"hidden\");\n                }\n                if (intervalIteration > 0) {\n                    matchLine.classList.add('noAnim');\n                }\n                gLines.appendChild(matchLine);\n            }\n\n            const roundLabel = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n            roundLabel.setAttribute(\"transform\", \"translate(\" + (i * 220 - 100) + \", \" + (winnersMatches[0].length * 60 + 120) + \")\");\n            const labelRect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n            labelRect.setAttribute(\"width\", '184');\n            labelRect.setAttribute(\"height\", '30');\n            labelRect.classList.add('labelBox');\n            labelRect.classList.add('matchPath');\n            if (intervalIteration > 0) {\n                labelRect.classList.add('noAnim');\n            }\n            roundLabel.appendChild(labelRect);\n            const labelText = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n            labelText.classList.add('labelText');\n            labelText.setAttribute(\"x\", '95');\n            labelText.setAttribute(\"y\", '21');\n            labelText.setAttribute(\"height\", '15');\n            labelText.setAttribute(\"width\", '190');\n            labelText.setAttribute(\"text-anchor\", \"middle\");\n            labelText.innerHTML = \"Losers Round \" + (i + 1);\n            roundLabel.appendChild(labelText);\n            gHeaders.appendChild(roundLabel);\n            i++;\n        }\n        svgMain.appendChild(gHeaders);\n        svgMain.appendChild(gLines);\n\n        document.getElementById('svgContainer').innerHTML = svgMain.outerHTML;\n\n        document.querySelectorAll('.pName').forEach(elem => {\n            elem.addEventListener('mouseover', function () {\n                document.querySelectorAll(`.pName`).forEach((name) => {\n                    if (name.innerHTML == elem.innerHTML) name.classList.add('highlight');\n                });\n            });\n            elem.addEventListener('mouseout', function () {\n                document.querySelectorAll(`.pName`).forEach((name) => {\n                    if (name.innerHTML == elem.innerHTML) name.classList.remove('highlight');\n                });\n            });\n        });\n    }\n\n    static createSvgMatch(i, bracketMatch: bracketMatch, bracketData: bracketMatch[], roundElem, singleMatchRound: number, intervalIteration = 0, losers = false) {\n        const group = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\n        let round = bracketMatch.round;\n        if (losers) round = bracketMatch.round * -1 - 1;\n\n        var multi = round != 0 ? (60 * (2 ** round)) : 60;\n        var startPos = roundElem.length != 1 ? 0.5 * (2 ** round) * 60 : 0.5 * (2 ** singleMatchRound) * 60;\n        if (losers) {\n            var multi = round != 0 ? (60 * (2 ** Math.floor(round / 2))) : 60;\n            var startPos = roundElem.length != 1 ? 0.5 * (2 ** Math.floor(round / 2)) * 60 : 0.5 * (2 ** (Math.floor(singleMatchRound / 2) + 1)) * 60;\n        }\n        group.setAttribute(\"transform\", \"translate(0, \" + ((multi * i) + startPos) + \") scale(0.8)\");\n        group.setAttribute(\"data-matchId\", bracketMatch.id);\n        group.id = bracketMatch.id;\n        group.classList.add('match');\n        if (bracketMatch.bye) {\n            group.classList.add('hidden');\n        }\n        if (bracketMatch.p1.id && bracketMatch.p2.id) {\n            group.classList.add('matchReady');\n        }\n\n        const clip1 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n        clip1.setAttribute(\"id\", 'clipPath-' + bracketMatch.id + '-1');\n        clip1.innerHTML = ' <circle r=\"8\" cx=\"25\" cy=\"-2\" />';\n        group.appendChild(clip1);\n\n        const clip2 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n        clip2.setAttribute(\"id\", 'clipPath-' + bracketMatch.id + '-2');\n        clip2.innerHTML = ' <circle r=\"8\" cx=\"25\" cy=\"26\" />';\n        group.appendChild(clip2);\n\n        const nameClip1 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n        nameClip1.setAttribute(\"id\", 'nameClip-' + bracketMatch.id + '-1');\n        nameClip1.innerHTML = '<rect x=\"37\" y=\"-10\" width=\"160\" height=\"20\"/>';\n        group.appendChild(nameClip1);\n\n        const nameClip2 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n        nameClip2.setAttribute(\"id\", 'nameClip-' + bracketMatch.id + '-2');\n        nameClip2.innerHTML = '<rect x=\"37\" y=\"20\" width=\"160\" height=\"20\"/>';\n        group.appendChild(nameClip2);\n\n        var noAnim = \"\";\n        if (intervalIteration > 0) {\n            noAnim = \"noAnim\";\n        }\n\n        group.innerHTML += `\n            <path class=\"matchPath ${noAnim}\" d=\"m 0 12.25 l 0 -12.5 l 15 -15 h 200 l 15 15 l 0 12.5 M 0 12.25 l 0 12.5 l 15 15 h 200 l 15 -15 l 0 -12.5\" />\n            <path class=\"matchPath in_progress\" ${bracketMatch.status != 'in_progress' ? 'style=\"display:none;\"' : ''} id=\"livePath-${i}\" d=\"m 0 12.25 l 0 -12.5 l 15 -15 h 200 l 15 15 l 0 12.5 M 0 12.25 l 0 12.5 l 15 15 h 200 l 15 -15 l 0 -12.5\" />\n            <path class=\"matchPath ${noAnim} matchSplit\" d=\"m 0 12.25 l 230 0\" />`;\n\n        let p1Name: string = bracketMatch.p1.name;\n        if (bracketMatch.p1.name == null && bracketMatch.p1.id != null) p1Name = bracketMatch.p1.id;\n\n        group.innerHTML += `\n            <image x=\"17\" y=\"-10\"\n            ${bracketMatch.p1.avatar ? `href=\"https://cdn.discordapp.com/avatars/${bracketMatch.p1.id}${bracketMatch.p1.avatar}\"` : ''}            \n            class=\"img p1\" height=\"16\" width=\"16\" clip-path=\"url(#clipPath-${bracketMatch.id}-1)\" />\n            <text x=\"37\" y=\"5\" width=\"147\" height=\"12\" class=\"pName p1\" clip-path=\"url(#nameClip-${bracketMatch.id}-1)\">${p1Name || ''}</text>\n            `;\n        if (bracketMatch.p1.name == null && bracketMatch.p1.id != null) bracketMatch.p1.name = null;\n        let p2Name: string = bracketMatch.p2.name;\n        if (bracketMatch.p2.name == null && bracketMatch.p2.id != null) p2Name = bracketMatch.p2.id;\n\n        group.innerHTML += `\n            <image x=\"17\" y=\"18\"\n            ${bracketMatch.p2.avatar ? `href=\"https://cdn.discordapp.com/avatars/${bracketMatch.p2.id}${bracketMatch.p2.avatar}\"` : ''}            \n            class=\"img p2\" height=\"16\" width=\"16\" clip-path=\"url(#clipPath-${bracketMatch.id}-2)\" />\n            <text x=\"37\" y=\"33\" width=\"147\" height=\"12\" class=\"pName p2\" clip-path=\"url(#nameClip-${bracketMatch.id}-2)\">${p2Name || ''}</text>\n            `;\n        if (bracketMatch.p2.name == null && bracketMatch.p2.id != null) bracketMatch.p2.name = null;\n        if (bracketMatch.p1.score != 0 || bracketMatch.p2.score != 0) {\n            let p1Class = \"\", p2Class = \"\";\n            if (bracketMatch.status == 'complete') {\n                p1Class = bracketMatch.p1.score > bracketMatch.p2.score ? 'winner' : 'loser';\n                p2Class = bracketMatch.p1.score < bracketMatch.p2.score ? 'winner' : 'loser';\n            }\n            group.innerHTML += `\n            <text x=\"200\" y=\"5\" width=\"147\" height=\"12\" class=\"pName pScore p1 ${p1Class}\">${bracketMatch.p1.score}</text>\n            <text x=\"200\" y=\"33\" width=\"147\" height=\"12\" class=\"pName pScore p2 ${p2Class}\">${bracketMatch.p2.score}</text>\n            `;\n        } else {\n            group.innerHTML += `\n            <text x=\"200\" y=\"5\" width=\"147\" height=\"12\" class=\"pName pScore p1\"></text>\n            <text x=\"200\" y=\"33\" width=\"147\" height=\"12\" class=\"pName pScore p2\"></text>\n            `;\n        }\n\n        let firstRoundCount = bracketData.filter(x => x.round == 0).length;\n\n        let maxRound = Math.max.apply(Math, bracketData.map(x => x.round));\n        let minRound = Math.min.apply(Math, bracketData.map(x => x.round));\n\n        if (losers) {\n            group.innerHTML += `<text x=\"37\" y=\"5\" width=\"147\" height=\"12\" class=\"loserPlaceHolder top\"> </text>`;\n            group.innerHTML += `<text x=\"37\" y=\"33\" width=\"147\" height=\"12\" class=\"loserPlaceHolder bottom\"> </text>`;\n        }\n        if (round == maxRound && !losers && minRound < 0) {\n            group.innerHTML += `<text x=\"37\" y=\"33\" width=\"147\" height=\"12\" class=\"loserPlaceHolder\" style=\"font-size: 12px;\"></text>`;\n        }\n\n        if (round == maxRound - 1 && !losers && minRound < 0) {\n            // group.innerHTML += `<text x=\"37\" y=\"33\" width=\"147\" height=\"12\" class=\"loserPlaceHolder\" style=\"font-size: 12px;\">Winner of Losers Bracket</text>`;\n            group.innerHTML += `<text x=\"37\" y=\"33\" width=\"147\" height=\"12\" class=\"loserPlaceHolder\" style=\"font-size: 12px;\"></text>`;\n        }\n\n        group.innerHTML += `<text x=\"3\" y=\"16\" width=\"147\" height=\"12\" class=\"matchLabel\"></text>`;\n        return group;\n    }\n\n    static generateLabels(bracketData: bracketMatch[]) {\n        let maxRound = Math.max.apply(Math, bracketData.map(x => x.round));\n        let matchCounter = 1;\n        let matchElements = [];\n        for (let i = 0; i <= maxRound; i++) {\n            let elements = document.getElementsByClassName(`round-${i}`);\n            for (let j = 0; j < elements.length; j++) {\n                matchElements = [...matchElements, ...elements[j].children];\n            }\n        }\n        for (let j = 0; j < matchElements.length; j++) {\n            const element = matchElements[j];\n            if (!element.classList.contains('hidden')) {\n                element.querySelector('.matchLabel').innerHTML = matchCounter;\n                matchCounter++;\n            }\n        }\n        for (const match of matchElements) {\n            let curMatch = bracketData.find(x => x.id == match.id);\n            if (curMatch.p1_prereq_identifier) {\n                let prereqMatch = document.getElementById(curMatch.p1_prereq_identifier.toString());\n                let p1Loser = prereqMatch.querySelector(`.matchLabel`)?.innerHTML;\n                match.querySelector('.loserPlaceHolder.top').innerHTML = \"\";\n                if (match.querySelector(`.pName.p1`)?.innerHTML == \"\" && !prereqMatch.classList.contains('hidden')) match.querySelector('.loserPlaceHolder.top').innerHTML = `Loser of ${p1Loser}`;\n            }\n            if (curMatch.p2_prereq_identifier) {\n                let prereqMatch = document.getElementById(curMatch.p2_prereq_identifier.toString());\n                let p2Loser = prereqMatch.querySelector(`.matchLabel`)?.innerHTML;\n                match.querySelector('.loserPlaceHolder.bottom').innerHTML = \"\";\n                if (match.querySelector(`.pName.p2`)?.innerHTML == \"\" && !prereqMatch.classList.contains('hidden')) match.querySelector('.loserPlaceHolder.bottom').innerHTML = `Loser of ${p2Loser}`;\n            }\n            if (curMatch.round == maxRound - 1 && match.querySelector('.loserPlaceHolder')) {\n                match.querySelector('.loserPlaceHolder').innerHTML = \"\";\n                if (curMatch.p2.id == null) match.querySelector('.loserPlaceHolder').innerHTML = `Winner of Losers Bracket`;\n            }\n            if (curMatch.round == maxRound && match.querySelector('.loserPlaceHolder')) {\n                if (curMatch.p2.id == null) match.querySelector('.loserPlaceHolder').innerHTML = `Loser of ${matchCounter - 4} (If neccessary)`;\n            }\n        }\n\n    }\n}\n\ndeclare let Twitch: any;\n@Component({\n    selector: 'updateMatchDialog',\n    templateUrl: './updateMatchDialog.html',\n    styleUrls: ['./bracket.component.scss']\n})\nexport class updateMatchDialog implements OnInit {\n\n    scoreForm: FormGroup;\n\n    filteredOptions: Observable<any>;\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private dialogRef: MatDialogRef<updateMatchDialog>,\n        private notif: NotificationService,\n        public dialog: MatDialog,\n    ) {\n\n    }\n\n    status = 'update';\n\n\n    async ngOnInit() {\n        console.log(this.data);\n        this.scoreForm = this.fb.group({\n            p1Score: this.data.p1.score,\n            p2Score: this.data.p2.score,\n            status: 'update',\n            matchId: this.data.id\n        });\n\n        setTimeout(() => {\n            if (this.data.p1.name || this.data.p2.name) {\n                var options1 = {\n                    channel: this.data.p1.twitch,\n                    theme: 'dark',\n\n                };\n                var player1 = new Twitch.Player(\"P1twitch\", options1);\n                player1.setVolume(0.5);\n\n                var options2 = {\n                    channel: this.data.p2.twitch,\n                    theme: 'dark',\n\n                };\n                var player2 = new Twitch.Player(\"P2twitch\", options2);\n                player2.setVolume(0);\n            }\n        }, 1000);\n    }\n\n    isTheatre = false;\n    theatreBtn = 'Theatre Mode';\n\n    theatre() {\n        if (!this.isTheatre) this.dialogRef.updateSize(\"95vw\");\n        if (this.isTheatre) this.dialogRef.updateSize(\"60vw\");\n        this.isTheatre = !this.isTheatre;\n        this.theatreBtn = this.isTheatre ? 'Regular Mode' : 'Theatre Mode';\n    }\n\n    onSubmit(status) {\n        this.scoreForm.value.status = status;\n        this.updateScore(this.scoreForm.value)\n            .subscribe(data => {\n                this.notif.showInfo('', 'Successfully updated score');\n            }, error => {\n                this.notif.showError('', 'Error updaing score');\n                console.error(\"Error: \", error);\n            });\n        if (status == 'complete') this.dialogRef.close(false);\n    }\n\n    editMatch() {\n        const dialog = this.dialog.open(EditBracketMatchComponent, {\n            minWidth: '60vw',\n            width: '60vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            panelClass: 'matchPanel',\n            data: this.data\n        });\n\n        dialog.afterClosed()\n            .subscribe(data => {\n                if (data) {\n                    this.dialogRef.close(true);\n                }\n            })\n    }\n\n    updateScore(data: any): Observable<any> {\n        return this.http.put(`/api/tournament/${this.data.tournamentId}/bracket/${this.data.id}`, data);\n    }\n\n    close() {\n        this.dialogRef.close(false);\n    }\n\n    async scheduleMatch() {\n        try {\n            await this.http.put(`/api/tournament/${this.data.tournamentId}/bracket/schedule/${this.data.id}`, { matchTime: new Date((<HTMLInputElement>document.getElementById(\"matchTime\")).value) }).toPromise();\n            this.notif.showSuccess('', 'Successfully Scheduled Match');\n            this.dialogRef.close(false);\n        } catch (error) {\n            this.notif.showError('', 'Error Scheduling Match');\n            this.dialogRef.close(false);\n        }\n    }\n\n    bestOf = this.data.best_of || 3;\n\n    async updateBestOf() {\n        console.log(this.bestOf);\n        try {\n            await this.http.put(`/api/tournament/${this.data.tournamentId}/bracket/setBestOf/${this.data.id}`, { best_of: this.bestOf }).toPromise();\n            this.notif.showSuccess('', 'Successfully Scheduled Match');\n            this.dialogRef.close(false);\n        } catch (error) {\n            this.notif.showError('', 'Error Scheduling Match');\n            this.dialogRef.close(false);\n        }\n    }\n}\n\n@Component({\n    selector: 'generateBracketDialog',\n    templateUrl: './generateBracketDialog.html',\n    styleUrls: ['./bracket.component.scss']\n})\nexport class generateBracketDialog implements OnInit {\n\n    bracketGenForm: FormGroup;\n\n    filteredOptions: any;\n\n    users = [];\n    hiddenUsers = [];\n    userNameInput: FormControl = new FormControl();\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private dialogRef: MatDialogRef<generateBracketDialog>,\n        private notif: NotificationService,\n        private sanitizer: DomSanitizer\n    ) {\n        this.getUsers()\n            .subscribe(data => {\n                data.sort((a, b) => {\n                    return a.name > b.name\n                });\n                this.users = data;\n                this.filteredOptions = this.users;\n                // this.filteredOptions = this.userNameInput.valueChanges\n                //     .pipe(\n                //         startWith(''),\n                //         map(val => this._filter(val))\n                //     );\n            });\n    }\n\n    updatePlayers(event) {\n        let option = this.bracketGenForm.value.users.findIndex(x => x.id == event.option._parent.id);\n        if (option > -1) {\n            this.users.push(this.hiddenUsers.find(x => x.discordId == this.bracketGenForm.value.users[option].userId));\n            this.hiddenUsers.splice(this.hiddenUsers.findIndex(x => x.discordId == this.bracketGenForm.value.users[option].userId))\n            this.bracketGenForm.value.users[option].userId = event.option.value;\n        } else {\n            this.bracketGenForm.value.users.push({ userId: event.option.value, id: event.option._parent.id });\n        }\n\n        let usrIndex = this.users.findIndex(x => x.discordId == event.option.value);\n        if (usrIndex > -1) {\n            this.hiddenUsers.push(this.users[usrIndex]);\n            this.users.splice(usrIndex, 1);\n            this.filteredOptions = this.users;\n        }\n    }\n\n    lastVal = \"\";\n\n    updateLastEvent(event) {\n        this.lastVal = event;\n    }\n\n    updateFilter($val) {\n        this.filteredOptions = this._filter($val);\n    }\n\n\n    ngOnInit() {\n        this.bracketGenForm = this.fb.group({\n            custom: false,\n            manual: false,\n            users: this.fb.array([]),\n            players: null\n        });\n    }\n\n    async onSubmit() {\n        let players = this.bracketGenForm.value.players != null ? this.bracketGenForm.value.players.replace(' ', '').split('\\n') : null;\n        let users = this.bracketGenForm.value.users.length > 0 ? this.bracketGenForm.value.users.map(x => x.userId) : null;\n        try {\n            const bracketGen: any = await this.http.post(`/api/tournament/${this.data.tournamentId}/generateBracket`, { tournamentId: this.data.tournamentId, customPlayers: players, players: users }).toPromise();\n            this.notif.showSuccess('', 'Successfully created bracket');\n            this.dialogRef.close(false);\n        } catch (error) {\n            console.error(\"Error: \", error);\n            this.notif.showError('', 'Error creating bracket');\n            this.dialogRef.close(false);\n        }\n    }\n\n    updateScore(data: any): Observable<any> {\n        return this.http.put(`/api/tournament/${this.data.tournamentId}/bracket/${this.data.id}`, data);\n    }\n\n    private _filter(name: string) {\n        const filterValue = name.toLowerCase();\n        return this.users.filter(option => option.name.toLowerCase().indexOf(filterValue) === 0);\n    }\n\n    getUsers(): Observable<any> {\n        return this.http.get('/api/users');\n    }\n\n    displayFn(id): string {\n        let user = this.users.find(x => x.discordId == id);\n        return user && user.name ? user.name : '';\n    }\n\n}\n\n","<div class=\"card-body\">\n    <h1>{{tournament.name}}</h1>\n    <h3>Bracket</h3>\n    <br>\n    <div *ngIf=\"loading\">\n        <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n            margin-left: auto;\n            margin-right: auto;\n            width: 70px;\n            border: none;\">\n    </div>\n\n    <div id=\"svgContainer\" [hidden]=\"loading || bracketData.length == 0\">\n        <svg id=\"bracket-svg\" class=\"bracket-svg\" width=\"1985\" height=\"1042\" viewBox=\"0 0 1985 1042\"> </svg>\n    </div>\n    <h5 [hidden]=\"bracketData.length != 0 || loading\">This tournament currently does not have a bracket</h5>\n    <button mat-stroked-button color=\"primary\" *ngIf=\"isAuth\" (click)=\"genBracket()\">{{btnText}}</button>\n</div>","<h1>Match Info</h1>\n<div class=\"matchInfo\" *ngIf=\"data.p1.name != null\">\n  <div>\n    <img class=\"userImg\" src=\"https://cdn.discordapp.com/avatars/{{data.p1.id}}{{data.p1.avatar}}\" style=\"float: left;\">\n    <p class=\"playerText\" style=\"float: left;\">\n      <a routerLink=\"/user/{{data.p1.id}}\" class=\"playerName\"\n        [ngClass]=\"{'winner' : (data.status == 'complete' && data.p1.score > data.p2.score), 'loser': (data.status == 'complete' && data.p1.score < data.p2.score)}\"\n        mat-dialog-close>{{data.p1.name || data.p1.id}} </a>\n      <span class=\"playerName\"\n        [ngClass]=\"{'winner' : (data.status == 'complete' && data.p1.score > data.p2.score), 'loser': (data.status == 'complete' && data.p1.score < data.p2.score)}\">&nbsp;\n        [{{data.p1.score}}]</span>\n      <br> <b>Global Rank:</b> {{data.p1.rank}}\n      <br> <b>Seed:</b> {{data.p1.seed}}\n      <br> <b>Country:</b> {{data.p1.country | uppercase}}\n      <img class=\"participantFlag\" src=\"\\assets/flags/{{data.p1.country}}.png\" alt=\"{{data.p1.country}} Flag\"\n        style=\"height: 20px;border: none;\"><br>\n    </p>\n    <div class=\"twitch\" id='P1twitch'></div>\n  </div>\n  <div>\n    <img class=\"userImg\" src=\"https://cdn.discordapp.com/avatars/{{data.p2.id}}{{data.p2.avatar}}\"\n      style=\"float: right;\">\n    <p class=\"playerText\" style=\"float: right;text-align: right;\">\n      <a routerLink=\"/user/{{data.p2.id}}\" class=\"playerName\" style=\"float: right\"\n        [ngClass]=\"{'winner' : (data.status == 'complete' && data.p1.score < data.p2.score), 'loser': (data.status == 'complete' && data.p1.score > data.p2.score)}\"\n        mat-dialog-close> {{data.p2.name || data.p2.id}}</a>\n      <span class=\"playerName\"\n        [ngClass]=\"{'winner' : (data.status == 'complete' && data.p1.score < data.p2.score), 'loser': (data.status == 'complete' && data.p1.score > data.p2.score)}\">[{{data.p2.score}}]\n        &nbsp;</span>\n      <br> <b>Global Rank:</b> {{data.p2.rank}}\n      <br> <b>Seed:</b> {{data.p2.seed}}\n      <br> <b>Country:</b> {{data.p2.country | uppercase}}\n      <img class=\"participantFlag\" src=\"\\assets/flags/{{data.p2.country}}.png\" alt=\"{{data.p2.country}} Flag\"\n        style=\"height: 20px;border: none;\"><br>\n    </p>\n    <div class=\"twitch\" id='P2twitch'>\n      <!-- <iframe frameborder=\"0\" scrolling=\"no\" [src]=\"sanitize('https://player.twitch.tv/?channel='+data.p2Twitch+'&autoplay=true')\" height=\"100%\" width=\"100%\">\n            </iframe> -->\n    </div>\n  </div>\n</div>\n<div class=\"matchInfo\" *ngIf=\"data.p1.name == null && data.p1 != null\">\n  <div>\n    <p class=\"playerText\" style=\"float: left;\">\n      <span class=\"playerName\"\n        [ngClass]=\"{'winner' : (data.status == 'complete' && data.p1.score > data.p2.score), 'loser': (data.status == 'complete' && data.p1.score < data.p2.score)}\">{{data.p1.id}}\n        [{{data.p1.score}}] &nbsp;</span>\n    </p>\n  </div>\n  <div>\n    <p class=\"playerText\" style=\"float: right;text-align: right;\">\n      <span class=\"playerName\"\n        [ngClass]=\"{'winner' : (data.status == 'complete' && data.p1.score < data.p2.score), 'loser': (data.status == 'complete' && data.p1.score > data.p2.score)}\">{{data.p2.id}}\n        [{{data.p2.score}}] &nbsp;</span>\n    </p>\n  </div>\n</div>\n<p class=\"card-text\">\n  <ng-container *ngIf=\"data.time != null\">\n    <br>\n    <b>Scheduled Time:</b> {{data.time | date: 'd/MM/yy, h:mm a (zz)'}}\n  </ng-container>\n</p>\n\n<form [formGroup]=\"scoreForm\" novalidate *ngIf=\"data.isAuth\">\n  <!-- Value: {{ signUpForm.value | json }} -->\n  <br>\n  <mat-form-field class=\"fill\" style=\"width: 49%; float: left;\">\n    <mat-label *ngIf=\"data.p1.name || data.p1.id != null\">{{data.p1.name || data.p1.id}}'s Score</mat-label>\n    <!-- <mat-label *ngIf=\"data.p1 != null && data.p1.name || data.p1.id == null\">{{data.p1}}'s Score</mat-label> -->\n    <input matInput formControlName=\"p1Score\" autocomplete=\"off\">\n  </mat-form-field>\n  <!-- <br> -->\n  <mat-form-field class=\"fill\" style=\"width: 49%; float: right;\">\n    <mat-label *ngIf=\"data.p2.name || data.p2.id != null\">{{data.p2.name || data.p2.id}}'s Score</mat-label>\n    <!-- <mat-label *ngIf=\"data.p2 != null && data.p2.name || data.p2.id == null\">{{data.p2}}'s Score</mat-label> -->\n    <input matInput formControlName=\"p2Score\" autocomplete=\"off\">\n  </mat-form-field>\n  <br>\n  <div mat-dialog-actions style=\"display: block;\">\n    <!-- <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button> -->\n    <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"scoreForm.invalid\"\n      (click)=\"onSubmit('update')\">Update Match</button>\n    <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"scoreForm.invalid\"\n      (click)=\"onSubmit('complete')\">Complete Match</button>\n  </div>\n  <br>\n</form>\n<ng-container *ngIf=\"data.isAuth\">\n  <mat-form-field style=\"width:30%\">\n    <input matInput [ngxMatDatetimePicker]=\"picker\" id=\"matchTime\" placeholder=\"Choose a date\" (focus)=\"picker.open()\"\n      (click)=\"picker.open()\" readonly>\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n    <ngx-mat-datetime-picker #picker [defaultTime]=\"[12,0,0]\">\n    </ngx-mat-datetime-picker>\n  </mat-form-field> &nbsp;\n  <button mat-stroked-button color=\"primary\" type=\"button\" (click)=\"scheduleMatch()\">Update Time</button> &nbsp;\n  <br><br>\n  <mat-form-field class=\"fill\" style=\"width: 10%\">\n    <mat-label>Best of</mat-label>\n    <input matInput [value]=\"bestOf\" (input)=\"bestOf = $event.target.value\" autocomplete=\"off\">\n  </mat-form-field> &nbsp;\n  <button mat-stroked-button color=\"primary\" type=\"button\" (click)=\"updateBestOf()\">Update</button> &nbsp;\n  <br>\n  <button mat-stroked-button color=\"primary\" type=\"button\" (click)=\"close()\"\n    routerLink=\"/overlay/{{data.tournamentId}}/bracket/{{data.id}}\">Overlay</button> &nbsp;\n  <button mat-stroked-button color=\"primary\" type=\"button\" (click)=\"editMatch()\">Edit Match</button> &nbsp;\n  <br>\n  <br>\n  <hr>\n  <br>\n</ng-container>\n<br>\n<button mat-stroked-button color=\"primary\" type=\"submit\" (click)=\"theatre()\">{{theatreBtn}}</button> &nbsp; <button\n  mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n","<h1>Generate Bracket</h1>\n<form [formGroup]=\"bracketGenForm\" novalidate (ngSubmit)=\"onSubmit()\">\n    <!-- Value: {{ bracketGenForm.value | json }} -->\n    <p class=\"card-text\">\n        By generating a bracket you will completely wipe the existing bracket (if there is one).\n    </p>\n    <br>\n    <mat-checkbox formControlName=\"custom\" [disabled]=\"bracketGenForm.value.manual\">\n        Custom Users\n    </mat-checkbox>\n    <br>\n    <mat-checkbox formControlName=\"manual\" [disabled]=\"bracketGenForm.value.custom\">\n        Manually Select Users\n    </mat-checkbox>\n    <br><br>\n\n    <p class=\"card-text\" *ngIf=\"bracketGenForm.value.custom\">\n        By selecting custom users you overwrite any signed up users and users will not have their progress recorded.\n        <br> Other tournament bracket settings will also apply here such as the player limit and random sort\n        <br> If this is your intention then continue by adding each seperate player name on a new line below.\n    </p>\n    <mat-form-field *ngIf=\"bracketGenForm.value.custom\">\n        <mat-label>Enter each user on a new line</mat-label>\n        <textarea matInput rows=\"8\" formControlName=\"players\"></textarea>\n    </mat-form-field>\n\n    <ng-container *ngIf=\"bracketGenForm.value.manual\">\n        <mat-form-field *ngFor=\"let item of [].constructor(bracketGenForm.value.users?.length + 1); let i = index;\">\n            <mat-label>Seed {{i+1}}</mat-label>\n            <input type=\"text\" (focus)=\"updateLastEvent($event.target.value)\" (input)=\"updateFilter($event.target.value)\" matInput [matAutocomplete]=\"auto\">\n            <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"updatePlayers($event)\" [displayWith]=\"displayFn.bind(this)\">\n                <mat-option *ngFor=\"let option of filteredOptions\" [value]=\"option.discordId\">\n                    {{option.name}}\n                </mat-option>\n            </mat-autocomplete>\n        </mat-form-field>\n    </ng-container>\n\n    <div mat-dialog-actions>\n        <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"bracketGenForm.invalid\">Generate</button>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n    selector: 'app-calendar',\n    templateUrl: './calendar.component.html',\n    styleUrls: ['./calendar.component.scss']\n})\nexport class CalendarComponent implements OnInit {\n\n    constructor(\n        public http: HttpClient,\n        public titleService: Title,\n    ) { }\n\n    monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n\n    curDate = null;\n\n    curMonth = \"\";\n    curYear = 0;\n    days = 31;\n    startDay = 0;\n\n    dates = [];\n\n    events: any = [\n        //     { \"id\": 3, \"name\": \"Is a tourney :)\", \"startDate\": \"2020-03-08\", \"endDate\": \"2020-03-08\", \"color\": \"#02943d\" },\n        //     { \"id\": 2147483647, \"name\": \"gfdsgdfs\", \"startDate\": \"2020-03-14\", \"endDate\": \"2020-03-14\", \"color\": \"#6a687b\" },\n        //     { \"id\": 4, \"name\": \"Another tourney :))\", \"startDate\": \"2020-03-18\", \"endDate\": \"2020-03-18\", \"color\": \"#8b3ef7\" },\n        //     { \"id\": 2147483651, \"name\": \"OMEGALUL\", \"startDate\": \"2020-11-11\", \"endDate\": \"2020-12-12\", \"color\": \"#0cb099\" },\n        //     // { \"id\": 2147483921, \"name\": \"dannys gay\", \"startDate\": \"2020-07-13\", \"endDate\": \"2020-07-27\", \"color\": \"#99fb24\" }\n    ]\n\n\n    ngOnInit() {\n        const d = new Date();\n\n        this.events.sort(function (a, b) {\n            var keyA = new Date(a.startDate),\n                keyB = new Date(b.startDate);\n            if (keyA < keyB) return -1;\n            if (keyA > keyB) return 1;\n            return 0;\n        });\n\n        this.fillCalendar();\n\n        this.updateDates(d);\n        this.updateEvents(d);\n        this.titleService.setTitle('Calendar | BeatKhana!');\n    }\n\n    async fillCalendar(): Promise<void> {\n        const d = new Date();\n        this.events = await this.getDates().toPromise();\n        // console.log(this.events)\n        for (let event of this.events) {\n            event.color = '#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6);\n        }\n        // console.log(this.events);\n        this.updateDates(d);\n        this.updateEvents(d);\n        // console.log(this.displayEvents);\n    }\n\n    displayEvents = [];\n\n    updateEvents(date: Date) {\n        this.displayEvents = [];\n        if (this.events.length > 0) {\n            for (let i in this.events) {\n                const event = this.events[i];\n\n                let eventStartDate = new Date(event.startDate);\n                let eventEndDate = new Date(event.endDate);\n                let monthStart = new Date(date.getFullYear(), date.getMonth(), 1);\n\n                let margin = 10;\n\n                if (eventStartDate.getFullYear() != date.getFullYear()) {\n                    continue;\n                }\n\n                for (let j = 0; j < parseInt(i); j++) {\n                    let eventDate = new Date(this.events[j].endDate);\n                    // console.log(`comparing ${event.name} and ${this.events[j].name}`)\n                    if (eventDate.getTime() > eventStartDate.getTime() && this.events[j].top <= margin) {\n                        margin += 30;\n                    }\n                }\n\n                if (eventStartDate.getMonth() == date.getMonth()) {\n                    let timeDiff = eventEndDate.getTime() - eventStartDate.getTime();\n                    // let dayDiff = (timeDiff / (1000 * 3600 * 24)) + this.startDay;\n                    // let dayDiff2 = timeDiff / (1000 * 3600 * 24) + 1;\n\n\n\n                    // let adjustedDiff = (timeDiff / (1000 * 3600 * 24)) + this.startDay;\n                    let diff = Math.round(timeDiff / (1000 * 3600 * 24));\n\n                    let start = (eventStartDate.getDate() + this.startDay) % 7 != 0 ? (eventStartDate.getDate() + this.startDay) % 7 : 7;\n                    let end = start + diff > 7 ? 8 : start + diff + 1;\n\n                    let row = ((eventStartDate.getDate() + this.startDay) / 7) % 1 == 0 ? ((eventStartDate.getDate() + this.startDay) / 7) - 1 : Math.floor((eventStartDate.getDate() + this.startDay) / 7);\n\n                    // console.log(adjustedDiff)\n                    // console.log(diff, start, end, row)\n                    // console.log(start)\n                    // console.log(end)\n                    // console.log(row)\n                    if (diff + start > 6) {\n                        // let numRows = ((diff + start + 1) / 7) % 1 == 0 ? (diff + start + 1) / 7 - 1 : Math.floor((diff + start + 1) / 7);\n                        let finRow = 0;\n                        if (eventEndDate.getMonth() == date.getMonth()) {\n                            finRow = ((eventEndDate.getDate() + this.startDay) / 7) % 1 == 0 ? ((eventEndDate.getDate() + this.startDay) / 7) - 1 : Math.floor((eventEndDate.getDate() + this.startDay) / 7);\n                        } else {\n                            finRow = Math.floor((this.days + this.startDay) / 7);\n                        }\n                        // let curRow = Math.floor((eventStartDate.getDate() + this.startDay) / 7);\n                        let curRow = ((eventStartDate.getDate() + this.startDay) / 7) % 1 == 0 ? ((eventStartDate.getDate() + this.startDay) / 7) - 1 : Math.floor((eventStartDate.getDate() + this.startDay) / 7);\n                        // console.log(finRow)\n                        // first elem\n                        this.displayEvents.push({\n                            name: event.name,\n                            start: start,\n                            end: 8,\n                            row: curRow,\n                            top: margin,\n                            color: event.color,\n                            id: event.tournamentId\n                        })\n                        for (let i = curRow; i < finRow && curRow < 6; i++) {\n                            // console.log(((diff + start) - (7 * (i - curRow + 1))) + 1)\n                            curRow += 1;\n                            // console.log(((diff + start) - (7 * (i - curRow + 2))) + 1)\n                            this.displayEvents.push({\n                                name: event.name,\n                                start: 1,\n                                end: ((diff + start) - (7 * (i - curRow + 2))) + 1,\n                                row: curRow,\n                                top: margin,\n                                color: event.color,\n                                id: event.tournamentId\n                            })\n                        }\n                    } else if (eventStartDate.getDate() == eventEndDate.getDate()) {\n                        let start = (eventStartDate.getDate() + this.startDay) % 7 != 0 ? (eventStartDate.getDate() + this.startDay) % 7 : 7;\n                        let row = ((eventStartDate.getDate() + this.startDay) / 7) % 1 == 0 ? ((eventStartDate.getDate() + this.startDay) / 7) - 1 : Math.floor((eventStartDate.getDate() + this.startDay) / 7);\n                        this.displayEvents.push({\n                            name: event.name,\n                            start: start,\n                            end: start + 1,\n                            row: row,\n                            top: margin,\n                            color: event.color,\n                            id: event.tournamentId\n                        })\n                    } else {\n                        this.displayEvents.push({\n                            name: event.name,\n                            start: start,\n                            end: end,\n                            row: row,\n                            top: margin,\n                            color: event.color,\n                            id: event.tournamentId\n                        })\n                    }\n                } else if (eventEndDate.getMonth() == date.getMonth()) {\n                    let timeDiff = eventEndDate.getTime() - monthStart.getTime();\n\n                    let dayDiff = Math.ceil(timeDiff / (1000 * 3600 * 24)) + this.startDay + 1;\n                    let numRows = Math.ceil((dayDiff - 1) / 7);\n                    let curRow = 0;\n\n                    for (let i = 0; i < numRows && curRow < 6; i++) {\n                        this.displayEvents.push({\n                            name: event.name,\n                            start: 1,\n                            end: (dayDiff - (7 * i)),\n                            row: curRow,\n                            color: event.color,\n                            id: event.tournamentId\n                        })\n                        curRow += 1;\n                    }\n                } else if (eventStartDate.getMonth() < date.getMonth() && eventEndDate.getMonth() > date.getMonth()) {\n                    for (let j = 0; j < parseInt(i); j++) {\n                        let eventDate = new Date(this.events[j].endDate);\n                        if (eventDate.getTime() > eventStartDate.getTime()) {\n                            margin += 30;\n                        }\n                    }\n                    let numRows = Math.floor((this.getDaysInMonth(date.getMonth() + 1, date.getFullYear()) + this.startDay) / 7);\n                    for (let i = 0; i <= numRows; i++) {\n                        this.displayEvents.push({\n                            name: event.name,\n                            start: 1,\n                            end: 8,\n                            row: i,\n                            top: margin,\n                            color: event.color,\n                            id: event.tournamentId\n                        })\n                    }\n                }\n\n            };\n        }\n\n    }\n\n    updateDates(date) {\n        this.curDate = date;\n        this.curMonth = this.monthNames[date.getMonth()];\n        this.curYear = date.getYear() + 1900;\n        this.days = this.getDaysInMonth(date.getMonth() + 1, date.getFullYear());\n\n        let tempDate = new Date(`${date.getFullYear()}-${date.getMonth() + 1}-01`);\n        this.startDay = tempDate.getDay() - 1 != -1 ? tempDate.getDay() - 1 : 6;\n        // console.log(this.startDay)\n        this.dates = [];\n        let todayDate = new Date();\n        for (let i = 0; i < (Math.ceil((this.days + this.startDay - 1) / 7) * 7); i++) {\n            let today = todayDate.getDate() + this.startDay - 1 == i && todayDate.getMonth() == this.curDate.getMonth();\n            if (i < this.startDay || i >= this.days + this.startDay - 1) {\n                this.dates[i] = {\n                    date: 0,\n                    event: false,\n                    col: i % 7,\n                    row: Math.floor(i / 7),\n                    today: today\n                }\n            } else {\n                this.dates[i] = {\n                    date: i - this.startDay + 1,\n                    event: false,\n                    col: i % 7,\n                    row: Math.floor(i / 7),\n                    today: today\n                }\n            }\n        }\n    }\n\n    getDates(): Observable<any> {\n        return this.http.get('/api/events');\n    }\n\n    changeDate(change) {\n        this.curDate = new Date(this.curDate.setMonth(this.curDate.getMonth() + change))\n        this.updateDates(this.curDate);\n        this.updateEvents(this.curDate);\n        // console.log(this.displayEvents)\n    }\n\n    getDaysInMonth(month, year) {\n        return new Date(year, month, 0).getDate() + 1;\n    };\n\n    numSequence(n: number): Array<number> {\n        return Array(n);\n    }\n}\n","<div class=\"container\">\n    <div class=\"card noHover\">\n        <div class=\"card-body\">\n            <h1 style=\"text-align: center;\"><i class='fas fa-angle-left' style=\"float: left;\" (click)=\"changeDate(-1)\"></i> {{curMonth}} {{curYear}} <i class='fas fa-angle-right' style=\"float: right;\" (click)=\"changeDate(1)\"></i></h1>\n            <div class=\"calendar\">\n                <div class=\"headers\">\n                    <span>Monday</span>\n                    <span>Tuesday</span>\n                    <span>Wednesday</span>\n                    <span>Thursday</span>\n                    <span>Friday</span>\n                    <span>Saturday</span>\n                    <span>Sunday</span>\n                </div>\n                <div class=\"dates\">\n                    <div *ngFor=\"let date of dates\" class=\"date\" [ngClass]=\"{'today': date.today}\" style=\"grid-column: {{date.col + 1}}; grid-row: {{date.row + 1}};\">\n                        <span *ngIf=\"date.date != 0\" class=\"dateNum\">{{date.date}}</span>\n                    </div>\n                    <!-- <div style=\"grid-area: 4 / 7 / auto / span 2; z-index: 10;\n                    background: rgba(255, 255, 255, 0.465); height: 10px;\">\n                        event :)\n                    </div> -->\n                    <!-- <div *ngFor=\"let n of numSequence(6); let i = index;\" class=\"row\" style=\"grid-row: {{i + 1}}\">\n\n                    </div> -->\n\n                    <div *ngFor=\"let event of displayEvents\" class=\"event\" [routerLink]=\"['/tournament',event.id]\" style=\"grid-area: {{event.row + 1}} / {{event.start}} / auto / {{event.end}}; z-index: 10;\n                    background: {{event.color}}80; margin-top: {{event.top}}px\">\n                        <p>\n                            {{event.name}}\n                        </p>\n                        <!-- {{event | json}} -->\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Inject, HostListener } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-confirm-dialog',\n    templateUrl: './confirm-dialog.component.html',\n    styleUrls: ['./confirm-dialog.component.scss']\n})\nexport class ConfirmDialogComponent implements OnInit {\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: {\n        cancelText: string,\n        confirmText: string,\n        message: string,\n        title: string\n    }, private mdDialogRef: MatDialogRef<ConfirmDialogComponent>) { }\n\n    ngOnInit(): void {\n    }\n\n    public cancel() {\n        this.close(false);\n    } public close(value) {\n        this.mdDialogRef.close(value);\n    } public confirm() {\n        this.close(true);\n    } @HostListener(\"keydown.esc\")\n    public onEsc() {\n        this.close(false);\n    }\n\n}\n","<div class=\"header\">\n    <h1 mat-dialog-title>{{ data.title }}</h1>\n</div>\n<div mat-dialog-content>\n    <p class=\"card-text\">{{ data.message }}</p>\n</div>\n<div mat-dialog-actions>\n    <button mat-raised-button color=\"warn\" style=\"margin-right:10px;\" (click)=\"cancel()\">{{ data.cancelText }}</button>\n    <button mat-raised-button color=\"primary\" (click)=\"confirm()\">{{ data.confirmText }}</button>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '../models/user.model';\nimport { UserAuthService } from '../services/user-auth.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuardGuard implements CanActivate {\n\n    constructor(\n        public http: HttpClient,\n        private userS: UserAuthService\n    ) { }\n\n    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n        return this.http.get('/api/user').pipe(map(data=> {\n            return data[0]['roleIds'].indexOf('1') > -1 || data[0]['roleIds'].indexOf('2') > -1\n        }))\n    }\n}\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { merge, Observable, of as observableOf } from 'rxjs';\nimport { catchError, map, startWith, switchMap } from 'rxjs/operators';\nimport { AppComponent } from '../app.component';\n\n@Component({\n    selector: 'app-logs',\n    templateUrl: './logs.component.html',\n    styleUrls: ['./logs.component.scss']\n})\nexport class LogsComponent extends AppComponent implements AfterViewInit {\n\n    loading = true;\n    logs = [];\n\n    resultsLength = 18;\n    isLoadingResults = true;\n\n    columnsToDisplay = ['user', 'log', 'time'];\n\n    dataSource: MatTableDataSource<any>;\n\n    @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n    @ViewChild(MatSort, { static: false }) sort: MatSort;\n\n    ngAfterViewInit(): void {\n        this.getLogs()\n            .subscribe(data => {\n                this.loading = false;\n                data.data.sort((a, b) => {\n                    return <any>new Date(a.time) - <any>new Date(b.time);\n                });\n                this.logs = data.data;\n            });\n\n        this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n\n        merge(this.sort.sortChange, this.paginator.page)\n            .pipe(\n                startWith({}),\n                switchMap(() => {\n                    this.isLoadingResults = true;\n                    return this.getLogs(this.paginator.pageIndex);\n                    // return this.exampleDatabase!.getRepoIssues(\n                    //     this.sort.active, this.sort.direction, this.paginator.pageIndex);\n                }),\n                map(data => {\n                    // Flip flag to show that loading has finished.\n                    this.isLoadingResults = false;\n                    // this.isRateLimitReached = false;\n                    this.resultsLength = data.total;\n\n                    return data.data;\n                }),\n                catchError(() => {\n                    this.isLoadingResults = false;\n                    // Catch if the GitHub API has reached its rate limit. Return empty data.\n                    // this.isRateLimitReached = true;\n                    return observableOf([]);\n                })\n            ).subscribe(data => {\n                this.logs = data\n            });\n    }\n\n    getLogs(page = 0): Observable<any> {\n        return this.http.get('/api/logs?page=' + page);\n    }\n\n}\n","<div class=\"container\">\n    <div class=\"card noHover\" style=\"border-radius: 0px 4px 4px 4px;\">\n        <div class=\"card-body\">\n            <h1>Logs</h1>\n\n            <div class=\"example-loading-shade\" *ngIf=\"isLoadingResults\">\n                <!-- <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner> -->\n                <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 100px; border: none;\">\n            </div>\n            <table mat-table [dataSource]=\"logs\" class=\"card-text\" matSort>\n                <ng-container matColumnDef=\"user\">\n                    <th mat-header-cell *matHeaderCellDef>User</th>\n                    <td mat-cell *matCellDef=\"let log\">\n                        {{log.name}}\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"log\">\n                    <th mat-header-cell *matHeaderCellDef>Log</th>\n                    <td mat-cell *matCellDef=\"let log\">\n                        {{log.log}}\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"time\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Time</th>\n                    <td mat-cell *matCellDef=\"let log\">\n                        {{log.time | date: 'dd/MM/yyyy HH:mm:ss'}}\n                    </td>\n                </ng-container>\n\n\n                <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n                <tr mat-row *matRowDef=\"let myRowData; columns: columnsToDisplay\"></tr>\n            </table>\n            <mat-paginator [length]='resultsLength' [pageSize]=\"25\"></mat-paginator>\n        </div>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, Input, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Observable } from 'rxjs';\nimport { AppComponent } from '../app.component';\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport { User } from '../models/user.model';\nimport { NotificationService } from '../services/toast.service';\nimport { UserAuthService } from '../services/user-auth.service';\nimport { staff } from '../_models/tournamentApi.model';\n\n@Component({\n    selector: 'app-map-pool',\n    templateUrl: './map-pool.component.html',\n    styleUrls: ['./map-pool.component.scss']\n})\nexport class MapPoolComponent extends AppComponent implements OnInit {\n\n    private url = '/api/tournament';\n    @Input() tournament;\n    @Input() staff: staff[] = [];\n    public tourneyId: string;\n    loading = true;\n\n    isAuthorised = false;\n\n    user: User = null;\n\n    columnsToDisplay = ['image', 'songName', 'diff', 'bsaver', 'oneClick', 'code'];\n\n    curPoolId = '0';\n    curPoolLive = false;\n    poolsLen = 0;\n\n    mapPools = [];\n    poolValues = [];\n\n    async ngOnInit(): Promise<void> {\n        let poolStaff = this.staff.filter(x => x.roles.some(x => x.id == 2));\n        await this.userS.curUser();\n        if (this.user != null && (this.user['roleIds'].includes('1') || this.user.discordId == this.tournament.owner || poolStaff.find(x => x.discordId == this.user.discordId))) {\n            this.isAuthorised = true;\n            this.columnsToDisplay.push('delete');\n        }\n        this.getPools()\n            .subscribe(data => {\n                this.loading = false;\n                this.mapPools = data;\n                this.curPoolId = Object.keys(this.mapPools)[0];\n                this.poolsLen = Object.keys(this.mapPools).length;\n                this.poolValues = Object.values(this.mapPools);\n            });\n    }\n\n    // async updateUser() {\n    //     this.user = await this.userS.curUser();\n    //     if (this.user != null && (this.user['roleIds'].includes('1') || this.user.discordId == this.tournament.owner)) {\n    //         this.isAuthorised = true;\n    //         this.columnsToDisplay.push('delete');\n    //     }\n    // }\n\n    sanitize(url: string) {\n        return this.sanitizer.bypassSecurityTrustUrl(url);\n    }\n\n    public logIn(): Observable<User[]> {\n        // console.log('/api/discordAuth?code=' + code);\n        return this.http.get<User[]>('/api/user');\n    }\n\n    copyCode(code: string) {\n        navigator.clipboard.writeText(code);\n    }\n\n    delete(songId) {\n        const dialog = this.dialog.open(ConfirmDialogComponent, {\n            // height: '400px',\n            width: '400px',\n            data: {\n                cancelText: 'Cancel',\n                confirmText: 'Delete',\n                message: 'Are you sure you want to delete this song from this pool?',\n                title: 'Delete Song?'\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(async data => {\n                if (data) {\n                    let info = {\n                        tournamentId: this.tournament.tournamentId,\n                        id: songId\n                    }\n                    try {\n                        await this.http.post(`api/tournament/${this.tournament.tournamentId}/deleteSong`, info).toPromise();\n                        this.updatePools();\n                    } catch (error) {\n                        console.error(\"Error: \", data);\n                        this.notif.showError('', 'Error deleting song from map pool');\n                    }\n                }\n            }\n            );\n    }\n\n    public deleteSong(data): Observable<any> {\n        return this.http.post(`api/tournament/${this.tournament.tournamentId}/deleteSong`, data);\n    }\n\n    openCreate() {\n        const dialog = this.dialog.open(createPoolDialog, {\n            // height: '400px',\n            minWidth: '40vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: {\n                tournament: this.tournament,\n                edit: false\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(data => {\n                if (data) {\n                    this.loading = true;\n                    this.getPools()\n                        .subscribe(data => {\n                            this.loading = false;\n                            this.mapPools = data;\n                            this.curPoolId = Object.keys(this.mapPools)[0];\n                            this.poolsLen = Object.keys(this.mapPools).length;\n                        });\n                }\n            });\n    }\n\n    tabClick(tab) {\n        let id = Object.keys(this.mapPools)[tab.index];\n        this.curPoolLive = !!this.mapPools[id].live;\n        this.curPoolId = id;\n    }\n\n    downloadPool() {\n        let curSongs = this.mapPools[this.curPoolId].songs.map(e => { return { hash: e.hash } });\n        let playlist = {\n            playlistTitle: this.mapPools[this.curPoolId].poolName,\n            playlistAuthor: 'BeatKhana!',\n            playlistDescription: this.mapPools[this.curPoolId].description,\n            image: this.mapPools[this.curPoolId].image,\n            songs: curSongs\n        }\n        let data = \"text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(playlist));\n        var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(playlist));\n        var downloadAnchorNode = document.createElement('a');\n        downloadAnchorNode.setAttribute(\"href\", dataStr);\n        downloadAnchorNode.setAttribute(\"download\", `${this.tournament.name}_` + this.mapPools[this.curPoolId].poolName + \".json\");\n        document.body.appendChild(downloadAnchorNode);\n        downloadAnchorNode.click();\n        downloadAnchorNode.remove();\n    }\n\n    public getPools(): Observable<any[]> {\n        return this.http.get<any[]>(`api/tournament/${this.tournament.tournamentId}/map-pools`);\n    }\n\n    async updatePools() {\n        let data = await this.http.get<any[]>(`api/tournament/${this.tournament.tournamentId}/map-pools`).toPromise();\n        this.mapPools = data;\n        this.poolsLen = Object.keys(this.mapPools).length;\n        this.poolValues = Object.values(this.mapPools);\n    }\n\n    addSong() {\n        const dialog = this.dialog.open(addSongDialog, {\n            minWidth: '40vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: {\n                tournament: this.tournament,\n                mapPools: this.mapPools\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(data => {\n                if (data) {\n                    // this.loading = true;\n                    this.updatePools();\n                    // this.getPools()\n                    //     .subscribe(data => {\n                    //         this.loading = false;\n                    //         this.mapPools = data;\n                    //         this.curPoolId = Object.keys(this.mapPools)[0];\n                    //         this.poolsLen = Object.keys(this.mapPools).length;\n                    //     });\n                }\n            });\n    }\n\n    editPool() {\n        const dialog = this.dialog.open(createPoolDialog, {\n            // height: '400px',\n            minWidth: '40vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: {\n                tournament: this.tournament,\n                mapPool: this.mapPools[this.curPoolId],\n                edit: true\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(async data => {\n                if (data) {\n                    this.updatePools();\n                }\n            });\n    }\n\n    deletePool() {\n        const dialog = this.dialog.open(ConfirmDialogComponent, {\n            width: '400px',\n            data: {\n                cancelText: 'Cancel',\n                confirmText: 'Delete',\n                message: 'Are you sure you want to delete map pool?',\n                title: 'Delete Map Pool?'\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(async data => {\n                if (data) {\n                    try {\n                        await this.http.delete(`api/tournament/${this.tournament.tournamentId}/map-pools/${this.curPoolId}`).toPromise();\n                        this.updatePools();\n                        this.curPoolId = Object.keys(this.mapPools)[0];\n                        this.poolsLen = Object.keys(this.mapPools).length;\n                        this.poolValues = Object.values(this.mapPools);\n                    } catch (error) {\n                        console.error(\"Error: \", data);\n                        this.notif.showError('', 'Error deleting song from map pool');\n                    }\n                }\n            });\n    }\n}\n\n@Component({\n    selector: 'createPoolDialog',\n    templateUrl: './createPoolDialog.html',\n})\nexport class createPoolDialog implements OnInit {\n\n    newPoolForm: FormGroup;\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private dialogRef: MatDialogRef<createPoolDialog>,\n        private notif: NotificationService\n    ) { }\n\n    dialogTitle = \"\";\n    buttonMessage = \"\";\n    isSubmitted = false;\n\n    ngOnInit() {\n        if (this.data.edit) {\n            this.dialogTitle = \"Edit Map Pool\";\n            this.buttonMessage = \"Update Map Pool\";\n            this.newPoolForm = this.fb.group({\n                poolId: this.data.mapPool.id,\n                poolName: [this.data.mapPool.poolName, [\n                    Validators.required\n                ]],\n                image: [this.data.mapPool.image, [\n                    Validators.required\n                ]],\n                description: this.data.mapPool.description,\n                live: this.data.mapPool.live,\n                is_qualifiers: this.data.mapPool.is_qualifiers\n            });\n        } else {\n            this.dialogTitle = \"Create Map Pool\";\n            this.buttonMessage = \"Add Map Pool\";\n            this.newPoolForm = this.fb.group({\n                tournamentId: this.data.tournament.tournamentId,\n                poolName: ['', [\n                    Validators.required\n                ]],\n                image: ['', [\n                    Validators.required\n                ]],\n                description: '',\n                live: 0,\n                is_qualifiers: 0\n            });\n        }\n    }\n\n    selectedFile: File;\n    base64: string;\n\n    onFileChanged(event) {\n        this.selectedFile = event.target.files[0];\n        // this.newPoolForm.patchValue({imgName: this.selectedFile.name});\n\n        let reader = new FileReader();\n        reader.readAsDataURL(this.selectedFile);\n        reader.onload = () => {\n            this.newPoolForm.patchValue({ image: reader.result });\n        };\n    }\n\n    async onSubmit() {\n        this.isSubmitted = true;\n        if (this.data.edit) {\n            this.newPoolForm.value.live = +this.newPoolForm.value.live;\n            try {\n                await this.http.put(`/api/tournament/${this.data.tournament.tournamentId}/map-pools`, this.newPoolForm.value).toPromise();\n                this.notif.showSuccess('', 'Successfully updated map pool');\n                this.dialogRef.close(true);\n            } catch (error) {\n                this.notif.showError('', 'Error updating map pool');\n                console.error(\"Error: \", error);\n                this.dialogRef.close(true);\n            }\n            // this.updatePool(this.newPoolForm.value)\n            //     .subscribe(data => {\n            //         if (!data.flag) {\n            //             this.notif.showSuccess('', 'Successfully updated map pool');\n            //         } else {\n            //             console.error(\"Error: \", data);\n            //             this.notif.showError('', 'Error updating map pool');\n            //         }\n            //         this.dialogRef.close(true);\n            //     }, error => {\n            //         this.notif.showError('', 'Error updating map pool');\n            //         console.error(\"Error: \", error);\n            //         this.dialogRef.close(true);\n            //     });\n        } else {\n            try {\n                await this.http.post(`/api/tournament/${this.data.tournament.tournamentId}/addPool`, this.newPoolForm.value).toPromise();\n                this.notif.showSuccess('', 'Successfully updated map pool');\n                this.dialogRef.close(true);\n            } catch (error) {\n                this.notif.showError('', 'Error updating map pool');\n                console.error(\"Error: \", error);\n                this.dialogRef.close(true);\n            }\n        }\n    }\n\n    addPool(data: any): Observable<any> {\n        return this.http.post(`/api/tournament/${this.data.tournament.tournamentId}/addPool`, data);\n    }\n\n    updatePool(data: any): Observable<any> {\n        return this.http.put(`/api/tournament/${this.data.tournament.tournamentId}/map-pools`, data);\n    }\n}\n\n@Component({\n    selector: 'addSongDialog',\n    templateUrl: './addSongDialog.html',\n})\nexport class addSongDialog implements OnInit {\n\n    newSongForm: FormGroup;\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private dialogRef: MatDialogRef<createPoolDialog>,\n        private notif: NotificationService\n    ) { }\n\n    isSubmitted = false;\n    beatsaver = false;\n\n    ngOnInit() {\n        this.newSongForm = this.fb.group({\n            tournamentId: this.data.tournament.tournamentId,\n            poolIds: [[], [\n                Validators.minLength(1)\n            ]],\n            ssLink: ['', [\n                Validators.required\n            ]],\n            diff: ''\n        });\n\n    }\n\n    onCheckChange(event) {\n        // console.log(event);\n        // console.log(this.newSongForm.value.poolIds);\n        let poolId = event.source.value;\n        if (event.checked && !this.newSongForm.value.poolIds.includes(poolId)) {\n            this.newSongForm.value.poolIds.push(poolId);\n        } else {\n            this.newSongForm.value.poolIds.splice(this.newSongForm.value.poolIds.findIndex((e) => e === poolId), 1);\n            // delete this.newSongForm.value.poolIds[];\n        }\n    }\n\n    updateVal() {\n        this.beatsaver = this.newSongForm.value.ssLink.includes('beatsaver');\n    }\n\n    async onSubmit() {\n        this.isSubmitted = true;\n        // console.log(this.newSongForm.value);\n        try {\n            await this.http.post(`/api/tournament/${this.data.tournament.tournamentId}/addSong${this.beatsaver ? 'ByKey' : ''}`, this.newSongForm.value).toPromise();\n            this.notif.showSuccess('', 'Successfully added song to pool/s');\n            this.dialogRef.close(this.newSongForm.value);\n        } catch (error) {\n            this.notif.showError('', 'Error adding song to pool/s');\n            console.error(\"Error: \", error);\n            this.dialogRef.close(false);\n        }\n    }\n\n    addSong(data: any): Observable<any> {\n        return this.http.post(`/api/tournament/${this.data.tournament.tournamentId}/addSong${this.beatsaver ? 'ByKey' : ''}`, data);\n    }\n}","<div class=\"card-body\">\n    <!-- <img class=\"tourneyImg\" src=\"\\{{ tournament.image | lowercase }}\" alt=\"\" /> -->\n    <h1>{{tournament.name}}</h1>\n    <h3>Map Pool</h3>\n    <br>\n    <div *ngIf=\"loading else loaded\">\n        <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n                margin-left: auto;\n                margin-right: auto;\n                width: 70px; \n                border: none;\n                padding: 15px; \">\n    </div>\n    <ng-template #loaded>\n        <mat-tab-group animationDuration=\"300ms\" dynamicHeight (selectedTabChange)=\"tabClick($event)\">\n            <mat-tab *ngFor=\"let pool of poolValues\" id=\"{{pool.id}}\">\n                <ng-template mat-tab-label>\n                    <img src=\"{{pool.image}}\" class=\"labelImage\">\n                    <span class=\"labelText\">{{pool.poolName}}</span>\n                </ng-template>\n                <table *ngIf=\"pool.songs.length > 0 else noSongs\" mat-table [dataSource]=\"pool.songs\" class=\"card-text\">\n                    <ng-container matColumnDef=\"image\">\n                        <th mat-header-cell *matHeaderCellDef style=\"width: 2%;\"> &nbsp;&nbsp;&nbsp; Song </th>\n                        <td mat-cell *matCellDef=\"let song\" style=\"width: 2%;\">\n                            <img loading=\"lazy\" src=\"https://scoresaber.com/imports/images/songs/{{song.hash}}.png\"\n                                alt=\"{{song.name}} Cover art\" class=\"songImg\">\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"songName\">\n                        <th mat-header-cell *matHeaderCellDef> </th>\n                        <td mat-cell *matCellDef=\"let song\">\n                            <a href=\"{{song.ssLink}}\" target=\"_blank\">\n                                {{song.name}} - {{song.songAuthor}}\n                            </a>\n                            <span class=\"mapperName\">[{{song.levelAuthor}}]</span>\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"diff\">\n                        <th mat-header-cell *matHeaderCellDef> Difficulty </th>\n                        <td mat-cell *matCellDef=\"let song\" class=\"{{song.diff.replace('+', 'P')}}\">\n                            {{song.diff}}\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"bsaver\">\n                        <th mat-header-cell *matHeaderCellDef> </th>\n                        <td mat-cell *matCellDef=\"let song\">\n                            <a href=\"https://beatsaver.com/beatmap/{{song.key}}\" target=\"_blank\"\n                                class=\"beatsaver_icon\"></a>\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"oneClick\">\n                        <th mat-header-cell *matHeaderCellDef> </th>\n                        <td mat-cell *matCellDef=\"let song\">\n                            <a [href]=\"sanitize('beatsaver://'+song.key)\" target=\"_blank\">\n                                <button mat-button color=\"primary\">One Click</button>\n                            </a>\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"code\">\n                        <th mat-header-cell *matHeaderCellDef> </th>\n                        <td mat-cell *matCellDef=\"let song\">\n                            <button mat-button color=\"accent\" (click)=\"copyCode(song.key)\">Copy Key</button>\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"delete\" *ngIf=\"isAuthorised\">\n                        <th mat-header-cell *matHeaderCellDef style=\"width: 2%;\"> </th>\n                        <td mat-cell *matCellDef=\"let song\" style=\"width: 2%;\">\n                            <button mat-button color=\"warn\" (click)=\"delete(song.id)\">Delete</button>\n                        </td>\n                    </ng-container>\n\n                    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n                    <tr mat-row *matRowDef=\"let myRowData; columns: columnsToDisplay\"></tr>\n                </table>\n                <ng-template #noSongs>\n                    <p class=\"card-text\">\n                        This pool currently has no songs in it.\n                    </p>\n                </ng-template>\n            </mat-tab>\n        </mat-tab-group>\n        <p class=\"card-text\">\n            <!-- <a mat-stroked-button color=\"primary\" (click)=\"downloadPool()\"\n                *ngIf=\"poolsLen > 0 && mapPools[curPoolId].songs.length > 0\">Download Pool</a> &nbsp; -->\n            <a mat-stroked-button color=\"primary\" href=\"/api/download-pool/{{curPoolId}}\" target=\"_blank\"\n                *ngIf=\"poolsLen > 0 && mapPools[curPoolId].songs.length > 0\">Download Pool</a> &nbsp;\n            <button *ngIf=\"isAuthorised && curPoolId\" mat-stroked-button color=\"warn\" (click)=\"deletePool()\">Delete\n                Pool</button> &nbsp;\n            <button *ngIf=\"isAuthorised && poolsLen > 0\" mat-stroked-button color=\"primary\" (click)=\"addSong()\">Add\n                Song</button> &nbsp;\n            <button *ngIf=\"isAuthorised\" mat-stroked-button color=\"primary\" (click)=\"openCreate()\">Create Map\n                Pool</button> &nbsp;\n            <button *ngIf=\"isAuthorised\" mat-stroked-button color=\"primary\" (click)=\"editPool()\">Edit Map Pool</button>\n        </p>\n    </ng-template>\n</div>","<h1 mat-dialog-title>Add Song</h1>\n<form [formGroup]=\"newSongForm\" novalidate (ngSubmit)=\"onSubmit()\">\n    <!-- Value: {{ newSongForm.value | json }} -->\n\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Scoresaber/Beatsaver Link\" formControlName=\"ssLink\" (input)=\"updateVal()\">\n    </mat-form-field>\n    <br>\n    <ng-template [ngIf]=\"beatsaver\">\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Difficulty</mat-label>\n            <mat-select formControlName=\"diff\">\n                <mat-option value=\"Expert+\">Expert+</mat-option>\n                <mat-option value=\"Expert\">Expert</mat-option>\n                <mat-option value=\"Hard\">Hard</mat-option>\n                <mat-option value=\"Normal\">Normal</mat-option>\n                <mat-option value=\"Easy\">Easy</mat-option>\n            </mat-select>\n        </mat-form-field>\n        <br>\n    </ng-template>\n\n\n    <mat-label>Pool to add to:</mat-label>\n    <br>\n    <ng-template [ngIf]=\"true\" *ngFor=\"let pool of data.mapPools | keyvalue\">\n        <mat-checkbox [value]=\"pool.value.id\" (change)=\"onCheckChange($event)\">\n            {{pool.value.poolName}}\n        </mat-checkbox>\n        <br>\n    </ng-template>\n\n\n    <div mat-dialog-actions>\n        <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"newSongForm.invalid || isSubmitted\">Add Map Pool</button>\n    </div>\n</form>","<h1 mat-dialog-title>{{dialogTitle}}</h1>\n<form [formGroup]=\"newPoolForm\" novalidate (ngSubmit)=\"onSubmit()\">\n    <!-- Value: {{ newPoolForm.value | json }} -->\n\n\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Map Pool Name\" formControlName=\"poolName\">\n    </mat-form-field>\n    <br>\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Map Pool Description\" formControlName=\"description\">\n    </mat-form-field>\n    <br>\n    <img src=\"{{newPoolForm.value.image}}\" style=\"width: 48px;height: 48px;border: none;margin: 5px;\">\n    <br>\n    <input type=\"file\" (change)=\"onFileChanged($event)\" #fileInput accept=\"image/png, image/jpeg, image/gif, image/webp, image/svg+xml, image/tiff\">\n    <br><br>\n    <mat-checkbox formControlName=\"live\">\n        Is Live\n    </mat-checkbox>\n    <br>\n    <mat-checkbox formControlName=\"is_qualifiers\">\n        Is Qualifiers pool?\n    </mat-checkbox>\n\n    <div mat-dialog-actions>\n        <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"newPoolForm.invalid || isSubmitted\">{{buttonMessage}}</button>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AppComponent } from '../app.component';\nimport { ITournament } from '../interfaces/tournament';\nimport { archiveTournamentDialog } from '../tournaments/tournaments.component';\n\n@Component({\n    selector: 'app-mini-tourneys',\n    templateUrl: './mini-tourneys.component.html',\n    styleUrls: ['./mini-tourneys.component.scss']\n})\nexport class MiniTourneysComponent extends AppComponent implements OnInit {\n\n    title = \"BeatKhana!\";\n    private url = '/api/mini-tournaments';\n    public tournaments = [];\n    loading = true;\n\n\n\n    ngOnInit(): void {\n        this.getTournaments()\n            .subscribe(data => {\n                data.sort(function (a, b) {\n                    return <any>new Date(a.startDate) - <any>new Date(b.startDate);\n                });\n                this.tournaments = data;\n                this.loading = false;\n            });\n        this.setTitle(this.title);\n        this.metaTags.defineTags('/', 'BeatKhana!', 'The one stop spot for all Beat Saber tournament information!', 'assets/images/icon/BeatKhana Logo RGB.png')\n    }\n\n    public getTournaments(): Observable<ITournament[]> {\n        return this.http.get<ITournament[]>(this.url);\n    }\n\n    archive(id: number) {\n        this.dialog.open(archiveTournamentDialog, {\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: { id: id }\n        });\n    }\n\n    public archiveTournament(id: number): Observable<ITournament[]> {\n        return this.http.put<ITournament[]>('/api/archiveTournament', { 'id': id });\n    }\n}\n","<div class=\"container grid\">\n    <div *ngIf=\"loading else loaded\">\n        <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 100px;\">\n    </div>\n\n    <ng-template #loaded>\n        <div class=\"card tournamentCard\" *ngFor=\"let tournament of tournaments\">\n            <a [title]=\"tournament.name\" [routerLink]=\"['/tournament',tournament.tournamentId]\">\n                <!-- <img src=\"https://beatkhanas3.s3.us-east-1.amazonaws.com/{{tournament.image}}\" class=\"card-img-top\"> -->\n                <img src=\"/assets/images/{{tournament.image}}\" class=\"card-img-top\">\n                <h5 class=\"card-title\">\n                    {{tournament.name}}\n                </h5>\n            </a>\n            <p class=\"card-text\">\n                Date: {{tournament.startDate | date: 'd/MM/yy, h:mm a'}} <br> Prize: {{tournament.prize}} <br>\n                <a href=\"{{tournament.discord}}\">Discord</a><br>\n                <a href=\"{{tournament.twitchLink}}\">Twitch</a><br>\n                <span *ngIf=\"tournament.public == 0\" style=\"color:rgb(209, 23, 23);font-style: italic;\">*Private</span>\n            </p>\n            <p *ngIf=\"user && (user['roleIds'].includes('1') || user['roleIds'].includes('2'))\" class=\"card-text\">\n                <button mat-button color=\"primary\" (click)=\"archive(tournament.tournamentId)\">Archive Tournament</button>\n            </p>\n        </div>\n        <h4 *ngIf=\"tournaments.length == 0\">There are currently no active tournaments please check back later</h4>\n    </ng-template>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\n\n@Component({\n    selector: 'app-overlay-controller',\n    templateUrl: './overlay-controller.component.html',\n    styleUrls: ['./overlay-controller.component.scss']\n})\nexport class OverlayControllerComponent implements OnInit {\n\n    constructor() { }\n\n    bkWS: WebSocketSubject<any> = webSocket(`${location.protocol == 'http:' ? 'ws' : 'wss'}://` + location.host + '/api/ws');\n\n    ngOnInit(): void {\n        this.bkWS.subscribe(\n            msg => {\n\n            },\n            err => console.log('err: ', err),\n            () => console.log('complete')\n        );\n    }\n\n    play() {\n        this.bkWS.next({ \"overlay\": { \"command\": \"play\" } });\n    }\n\n    pause() {\n        this.bkWS.next({ \"overlay\": { \"command\": \"pause\" } });\n    }\n\n    formatLabel(value: number) {\n        return value*10;\n    }\n\n}\n","<button mat-stroked-button color=\"primary\" (click)=\"play()\">\n    play\n</button>\n<br>\n<button mat-stroked-button color=\"primary\" (click)=\"pause()\">\n    pause\n</button>\n<br><br> Volume\n<mat-slider thumbLabel min=\"0\" max=\"1\" step=\"0.1\" value=\"0\"></mat-slider>","import { HttpClient } from '@angular/common/http';\nimport { AfterViewInit, Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { WebSocketSubject, webSocket } from 'rxjs/webSocket';\nimport { BracketComponent, updateMatchDialog } from '../bracket/bracket.component';\nimport { bracketMatch } from '../_models/bracket.model';\nimport { TAEvent, EventType } from '../_models/ta/event';\nimport { PacketType, ForwardingPacket } from '../_models/ta/forwardingPacket';\nimport { Player } from '../_models/ta/player';\ndeclare let Twitch: any;\n@Component({\n    selector: 'app-overlay',\n    templateUrl: './overlay.component.html',\n    styleUrls: ['./overlay.component.scss']\n})\nexport class OverlayComponent implements AfterViewInit {\n\n    canvas;\n    body = document.body;\n    svgData;\n\n    matchId: Number | string;\n    stage: any;\n    tourneyId: any;\n\n    matchData: any;\n\n    settings: any;\n    viewSeason = '1';\n    seasons: number[] = [];\n\n    bracketData = [];\n    intervalIteration = 0;\n\n    constructor(private route: ActivatedRoute, private http: HttpClient, public dialog: MatDialog) { }\n\n    bkWS: WebSocketSubject<any> = webSocket(`${location.protocol == 'http:' ? 'ws' : 'wss'}://` + location.host + '/api/ws');\n    taWS: WebSocketSubject<any>;\n\n    async ngAfterViewInit(): Promise<void> {\n        let node = document.createElement('script');\n        node.src = 'https://embed.twitch.tv/embed/v1.js';\n        node.type = 'text/javascript';\n        document.getElementsByTagName('head')[0].appendChild(node);\n\n        this.canvas = document.getElementById(\"fakeCanvas\");\n        this.route.params.subscribe(params => {\n            this.matchId = params['matchId'];\n            this.stage = params['stage'];\n            this.tourneyId = params['tourneyId'];\n        });\n\n        if (!(this.stage == 'bracket' && this.matchId == 'display')) {\n            await this.getMatchData();\n            // await this.draw();\n            // await this.getMatchData();\n        } else {\n            this.initDisplaySettings();\n        }\n\n        this.bkWS.subscribe(\n            msg => {\n                if (msg.bracketMatch && (this.stage == 'bracket' && this.matchId == 'display')) this.updateDrawnMatch(msg.bracketMatch);\n                if (msg.bracketMatch && !(this.stage == 'bracket' && this.matchId == 'display') && this.matchData?.id == msg.bracketMatch.id) this.updateDisplayMatch(msg.bracketMatch);\n                if (msg.overlay) {\n                    switch (msg.overlay.command) {\n                        case 'play':\n                            this.play()\n                            break;\n                        case 'pause':\n                            this.pause()\n                            break;\n                    }\n                }\n            },\n            err => console.log('err: ', err),\n            () => console.log('complete')\n        );\n\n        // console.log(this.router.url)\n    }\n\n    async draw(url: string) {\n        await fetch(url)\n            .then(r => r.text())\n            .then(text => {\n                this.canvas.innerHTML = text;\n                // this.svgData = text;\n            })\n            .catch(console.error.bind(console));\n    }\n\n    handlePacket(packet) {\n        if (!this.matchData) return;\n        // console.log(packet);\n        if (packet.Type == PacketType.ForwardingPacket) {\n            let forward: ForwardingPacket = packet.SpecificPacket;\n            if (forward.Type == PacketType.Event) {\n                let event: TAEvent = forward.SpecificPacket;\n                // console.log(event);\n                if (event.Type == EventType.PlayerUpdated) {\n                    let playerInfo: Player = event.ChangedObject;\n                    // console.log(playerInfo, this.matchData);\n                    // console.log(playerInfo.UserId == this.matchData.p1.ssId || playerInfo.UserId == this.matchData.p2.ssId)\n                    if (!(playerInfo.UserId == this.matchData.p1.ssId || playerInfo.UserId == this.matchData.p2.ssId)) return;\n\n                    let curPlayer = this.matchData.p1.ssId == playerInfo.UserId ? this.matchData.p1 : this.matchData.p2;\n\n                    this.animateValue(playerInfo, \"Score\", curPlayer.soreInfo?.Score, playerInfo.Score, 500);\n                    this.animateValue(\n                        playerInfo,\n                        \"Accuracy\",\n                        curPlayer.soreInfo?.Accuracy,\n                        playerInfo.Accuracy,\n                        500\n                    );\n                    this.animateValue(playerInfo, \"Combo\", curPlayer.soreInfo?.Combo, playerInfo.Combo, 500);\n                }\n            }\n        }\n    }\n\n    animateValue(player: Player, property, start = 0, end, duration) {\n        // console.log\n        let startTimestamp = null;\n        const step = (timestamp) => {\n            if (!startTimestamp) startTimestamp = timestamp;\n            const progress = Math.min(\n                (timestamp - startTimestamp) / duration,\n                1\n            );\n            if (property == \"Accuracy\") {\n                player[property] = progress * (end - start) + start;\n            } else {\n                player[property] = Math.floor(progress * (end - start) + start);\n            }\n\n            if (player.UserId == this.matchData.p1.ssId) this.matchData.p1.soreInfo = player;\n            if (player.UserId == this.matchData.p2.ssId) this.matchData.p2.soreInfo = player;\n            this.scoreUpdate();\n\n\n            if (progress < 1) {\n                window.requestAnimationFrame(step);\n            }\n        };\n        window.requestAnimationFrame(step);\n    }\n\n    scoreUpdate() {\n        console.log(this.matchData);\n        if (this.matchData.p1.soreInfo) {\n            let scoreInfo: Player = this.matchData.p1.soreInfo;\n            setTimeout(() => {\n                let liveScore = document.getElementById(\"p1LiveScore\");\n                let liveAcc = document.getElementById(\"p1LiveAcc\");\n                let liveCombo = document.getElementById(\"p1LiveCombo\");\n                if (liveScore) liveScore.children[0].innerHTML = scoreInfo.Score.toString(), liveScore.style.display = \"block\";\n                if (liveAcc) liveAcc.children[0].innerHTML = (Math.round((+scoreInfo.Accuracy + Number.EPSILON) * 10000) / 100).toString(), liveAcc.style.display = \"block\";\n                if (liveCombo) liveCombo.children[0].innerHTML = scoreInfo.Combo.toString(), liveCombo.style.display = \"block\";\n            }, scoreInfo.StreamDelayMs);\n        }\n        if (this.matchData.p2.soreInfo) {\n            let scoreInfo: Player = this.matchData.p2.soreInfo;\n            setTimeout(() => {\n                let liveScore = document.getElementById(\"p2LiveScore\");\n                let liveAcc = document.getElementById(\"p2LiveAcc\");\n                let liveCombo = document.getElementById(\"p2LiveCombo\");\n                if (liveScore) liveScore.children[0].innerHTML = scoreInfo.Score.toString(), liveScore.style.display = \"block\";\n                if (liveAcc) liveAcc.children[0].innerHTML = (Math.round((+scoreInfo.Accuracy + Number.EPSILON) * 10000) / 100).toString(), liveAcc.style.display = \"block\";\n                if (liveCombo) liveCombo.children[0].innerHTML = scoreInfo.Combo.toString(), liveCombo.style.display = \"block\";\n            }, scoreInfo.StreamDelayMs);\n        }\n    }\n\n    player1 = null;\n\n    async getMatchData() {\n        let data: any = await this.http.get(`/api/tournament/${this.tourneyId}/${this.stage}/${this.matchId}`).toPromise();\n        let settings: any = await this.http.get(`/api/tournament/${this.tourneyId}`).toPromise();\n        settings = settings[0];\n        if (settings.ta_url) {\n            this.taWS = webSocket(`wss://` + settings.ta_url);\n            this.taWS.subscribe(\n                msg => {\n                    this.handlePacket(msg)\n                },\n                err => console.log('err: ', err),\n                () => console.log('complete')\n            );\n        }\n        this.matchData = data;\n        console.log(data);\n        console.log(settings);\n        await this.draw(`/assets/overlay/${data.tournamentId}.svg?t=${Date.now()}`);\n\n        if (data.p1) {\n            document.getElementById('p1Name').children[0].innerHTML = data.p1.name;\n            document.getElementById('p1Flag')?.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', `/assets/flags/${data.p1.country.toUpperCase()}.png`);\n            document.getElementById('p2Name').children[0].innerHTML = data.p2.name;\n            document.getElementById('p2Flag')?.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', `/assets/flags/${data.p2.country.toUpperCase()}.png`);\n            let pointIcons = document.querySelectorAll('[id*=\"Score\"]');\n            for (let i = 0; i < pointIcons.length; i++) {\n                const point = pointIcons[i];\n                (<HTMLElement>point).style.display = \"none\";\n                // point.setAttribute(\"style\", \"display:none\");\n            }\n            for (let i = 0; i < Math.ceil(data.best_of / 2); i++) {\n                if (document.getElementById(`p1Score_${i + 1}_blank`)) document.getElementById(`p1Score_${i + 1}_blank`).style.display = \"block\";\n                if (document.getElementById(`p2Score_${i + 1}_blank`)) document.getElementById(`p2Score_${i + 1}_blank`).style.display = \"block\";\n            }\n            for (let i = 0; i < data.p1.score; i++) {\n                if (document.getElementById(`p1Score_${i + 1}_blank`)) document.getElementById(`p1Score_${i + 1}_blank`).style.display = \"none\";\n                if (document.getElementById(`p1Score_${i + 1}`)) document.getElementById(`p1Score_${i + 1}`).style.display = \"block\";\n            }\n            for (let i = 0; i < data.p2.score; i++) {\n                if (document.getElementById(`p2Score_${i + 1}_blank`)) document.getElementById(`p2Score_${i + 1}_blank`).style.display = \"none\";\n                if (document.getElementById(`p2Score_${i + 1}`)) document.getElementById(`p2Score_${i + 1}`).style.display = \"block\";\n            }\n\n            // Stream stuff\n            let stream1 = document.getElementById(`p1Stream`);\n            let href1 = stream1.getAttribute('href').replace(\"#\", '');\n            let img1 = document.getElementById(href1);\n            let con1 = document.createElementNS(\"http://www.w3.org/2000/svg\", 'foreignObject');\n            con1.setAttribute('x', stream1.getAttribute('x'));\n            con1.setAttribute('y', stream1.getAttribute('y'));\n            con1.setAttribute('width', img1.getAttribute('width'));\n            con1.setAttribute('height', img1.getAttribute('height'));\n            let div1 = document.createElement('div');\n            div1.classList.add('twitch');\n            div1.style.width = `${1.7778 * (+img1.getAttribute('width'))}px`;\n            div1.id = 'p1Twitch';\n            con1.appendChild(div1);\n            this.insertAfter(con1, stream1);\n\n            var options1 = {\n                channel: 'snow_rme',\n                theme: 'dark',\n            };\n            this.player1 = new Twitch.Player(\"p1Twitch\", options1);\n            this.player1.setVolume(0.5);\n        }\n    }\n\n    pause() {\n        this.player1.pause();\n    }\n\n    play() {\n        this.player1.play();\n    }\n\n    insertAfter(newNode, referenceNode) {\n        referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n    }\n\n    async initDisplaySettings() {\n        const matchesData: any = await this.http.get(`/api/tournament/${this.tourneyId}/bracket`).toPromise();\n        this.bracketData = matchesData;\n\n        if (matchesData.length > 0) BracketComponent.generateMatches(this.bracketData, this.intervalIteration);\n        let matchElements = document.getElementsByClassName('match');\n        for (let i = 0; i < matchElements.length; i++) {\n            const element = matchElements[i];\n            element.addEventListener(\"click\", () => this.updateMatch(element.getAttribute('data-matchid')))\n        }\n        this.intervalIteration = 1;\n    }\n\n    updateDisplayMatch(match) {\n        this.matchData = match;\n        if (this.matchData.p1) {\n            document.getElementById('p1Name').children[0].innerHTML = this.matchData.p1.name;\n            document.getElementById('p1Flag')?.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', `/assets/flags/${this.matchData.p1.country.toUpperCase()}.png`);\n            document.getElementById('p2Name').children[0].innerHTML = this.matchData.p2.name;\n            document.getElementById('p2Flag')?.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', `/assets/flags/${this.matchData.p2.country.toUpperCase()}.png`);\n            let pointIcons = document.querySelectorAll('[id*=\"Score\"]');\n            for (let i = 0; i < pointIcons.length; i++) {\n                const point = pointIcons[i];\n                (<HTMLElement>point).style.display = \"none\";\n                // point.setAttribute(\"style\", \"display:none\");\n            }\n            for (let i = 0; i < Math.ceil(this.matchData.best_of / 2); i++) {\n                if (document.getElementById(`p1Score_${i + 1}_blank`)) document.getElementById(`p1Score_${i + 1}_blank`).style.display = \"block\";\n                if (document.getElementById(`p2Score_${i + 1}_blank`)) document.getElementById(`p2Score_${i + 1}_blank`).style.display = \"block\";\n            }\n            for (let i = 0; i < this.matchData.p1.score; i++) {\n                if (document.getElementById(`p1Score_${i + 1}_blank`)) document.getElementById(`p1Score_${i + 1}_blank`).style.display = \"none\";\n                if (document.getElementById(`p1Score_${i + 1}`)) document.getElementById(`p1Score_${i + 1}`).style.display = \"block\";\n            }\n            for (let i = 0; i < this.matchData.p2.score; i++) {\n                if (document.getElementById(`p2Score_${i + 1}_blank`)) document.getElementById(`p2Score_${i + 1}_blank`).style.display = \"none\";\n                if (document.getElementById(`p2Score_${i + 1}`)) document.getElementById(`p2Score_${i + 1}`).style.display = \"block\";\n            }\n        }\n    }\n\n    updateMatch(id) {\n        const dialog = this.dialog.open(updateMatchDialog, {\n            minWidth: '60vw',\n            width: '60vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            panelClass: 'matchPanel',\n            data: { ...this.bracketData.find(x => x.id == id), isAuth: false }\n        });\n    }\n\n    updateDrawnMatch(data: bracketMatch) {\n        let matchElem = document.getElementById(data.id);\n        // let tmpElement = {\n\n        // }\n        let index = this.bracketData.findIndex(x => x.id == data.id);\n        this.bracketData[index] = { ...this.bracketData[index], ...data };\n        matchElem.querySelector('.pName.p1').innerHTML = data.p1.name || data.p1.id;\n        matchElem.querySelector('.pName.p2').innerHTML = data.p2.name || data.p2.id;\n        if (data.status == 'in_progress') {\n            (<SVGPathElement>matchElem.querySelector('.in_progress')).style.display = 'inline';\n        } else {\n            (<SVGPathElement>matchElem.querySelector('.in_progress')).style.display = 'none';\n        }\n        if (data.p1.score != data.p2.score && data.status == 'complete') {\n            if (data.p1.score > data.p2.score) {\n                matchElem.querySelector('.pScore.p1').classList.add('winner');\n                matchElem.querySelector('.pScore.p2').classList.add('loser');\n            } else {\n                matchElem.querySelector('.pScore.p1').classList.add('loser');\n                matchElem.querySelector('.pScore.p2').classList.add('winner');\n            }\n        }\n\n        if (data.p1.score != 0 || (data.status == 'in_progress' || data.status == 'complete')) matchElem.querySelector('.pScore.p1').innerHTML = data.p1.score.toString();\n        if (data.p2.score != 0 || (data.status == 'in_progress' || data.status == 'complete')) matchElem.querySelector('.pScore.p2').innerHTML = data.p2.score.toString();\n\n        matchElem.querySelector('.img.p1').setAttribute('href', data.p1.avatar);\n        matchElem.querySelector('.img.p2').setAttribute('href', data.p2.avatar);\n\n        // if (data.p1.id && data.p2.id) {\n        //     matchElem.classList.add('matchReady');\n        //     matchElem.addEventListener(\"click\", () => this.updateMatch(matchElem.getAttribute('data-matchid')));\n        // }\n    }\n}\n","<div class=\"canvasContainer\">\n    <div class=\"sizingBox\">\n        <div id=\"fakeCanvas\">\n\n        </div>\n    </div>\n</div>\n<div id=\"svgContainer\" [hidden]=\"bracketData.length == 0\">\n    <svg id=\"bracket-svg\" class=\"bracket-svg\" width=\"1920\" height=\"1080\" viewBox=\"0 0 1920 1080\"> </svg>\n</div>","import { CdkDrag, CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { HttpClient } from '@angular/common/http';\nimport { ChangeDetectorRef, Component, Inject, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport { User } from '../models/user.model';\nimport { NotificationService } from '../services/toast.service';\nimport { UserAuthService } from '../services/user-auth.service';\nimport { AddPlayerComponent } from '../_modals/add-player/add-player.component';\nimport { AssignSessionComponent } from '../_modals/assign-session/assign-session.component';\nimport { participant } from '../_models/participants';\nimport { qualifierSession } from '../_models/qualifiers';\n\n@Component({\n    selector: 'app-participants',\n    templateUrl: './participants.component.html',\n    styleUrls: ['./participants.component.scss']\n})\nexport class ParticipantsComponent implements OnInit {\n\n    @Input() tournament;\n    @Input() participants: participant[];\n    @Input() all: boolean = false;\n\n    isAuthorised = false;\n    curUser: User = null;\n    loading = true;\n\n    editMode = false;\n\n    nonQualified: participant[];\n\n    linkOptions = {\n        target: {\n            url: \"_blank\"\n        }\n    }\n\n    userSession: qualifierSession;\n\n    constructor(public http: HttpClient, public dialog: MatDialog, private notif: NotificationService, public cd: ChangeDetectorRef, public router: Router, private userS: UserAuthService) { }\n\n    ngOnInit(): void {\n        this.updateParticipants()\n        if (this.curUser == null) {\n            this.updateUser();\n        }\n    }\n\n    async updateParticipants() {\n        this.loading = true;\n        let info = await this.http.get<participant[]>(`/api/tournament/${this.tournament.tournamentId}/${this.all ? 'allParticipants' : 'participants'}`).toPromise();\n        for (let i = 0; i < info.length; i++) {\n            if (!info[i].avatar) info[i].avatar = \"\";\n            if (info[i].avatar.includes('api') || info[i].avatar.includes('oculus')) {\n                info[i].avatar = \"https://new.scoresaber.com\" + info[i].avatar;\n            } else {\n                // info[i].avatar = `/${info[i].avatar}` + (info[i].avatar.substring(0, 2) == 'a_' ? '.gif' : '.webp');\n                info[i].avatar = `https://cdn.discordapp.com/avatars/${info[i].discordId}/${info[i].avatar}` + (info[i].avatar.substring(0, 2) == 'a_' ? '.gif' : '.webp')\n            }\n        }\n        this.nonQualified = info.filter(x => x.seed == 0);\n        this.participants = info;\n        this.sortParticipants();\n        try {\n            this.userSession = await this.http.get<qualifierSession>(`/api/tournament/${this.tournament.tournamentId}/qualifiers/sessions/current`).toPromise();\n        } catch (error) {\n\n        }\n        this.loading = false;\n    }\n\n    displayTime(dateString: string) {\n        return new Date(dateString).toLocaleString();\n    }\n\n    sortParticipants() {\n        if ((this.tournament.state == 'main_stage' || this.tournament.state == 'archived') && !this.all) {\n            this.participants = this.participants.filter(x => x.seed != 0);\n            if (this.tournament.type == 'battle_royale') {\n                this.participants.sort(this.royaleSort);\n            } else {\n                this.participants.sort(this.seedSort);\n            }\n        } else {\n            if (this.tournament.sort_method == 'globalRank') {\n                this.participants.sort(this.orderGlobal);\n            } else if (this.tournament.sort_method == 'date') {\n                this.participants.sort(this.dateSort);\n            }\n        }\n    }\n\n    orderGlobal(a, b) {\n        if (b.globalRank == 0) return -1;\n        if (a.globalRank == 0) return 1;\n        return a.globalRank - b.globalRank;\n    }\n\n    dateSort(a, b) {\n        return a.participantId - b.participantId;\n    }\n\n    seedSort(a, b) {\n        if (a.seed == b.seed) {\n            if (b.globalRank == 0) return -1;\n            if (a.globalRank == 0) return 1;\n            return a.globalRank - b.globalRank;\n        } else {\n            if (b.seed == 0) return -1;\n            if (a.seed == 0) return 1;\n            return a.seed - b.seed;\n        }\n    }\n\n    royaleSort(a, b) {\n        if (a.position == 0 && b.position == 0) {\n            if (b.seed == 0) return -1;\n            if (a.seed == 0) return 1;\n            return a.seed - b.seed;\n        } else {\n            return a.position - b.position;\n        }\n    }\n\n    async updateUser() {\n        this.curUser = await this.userS.curUser();\n        if (this.curUser != null && (this.curUser['roleIds'].includes('1') || this.curUser.discordId == this.tournament.owner)) {\n            this.isAuthorised = true;\n        }\n    }\n\n    deleteParticipant(participantId) {\n        const dialog = this.dialog.open(ConfirmDialogComponent, {\n            // height: '400px',\n            width: '400px',\n            data: {\n                cancelText: 'Cancel',\n                confirmText: 'Confirm',\n                message: 'Are you sure you want to remove this user from this tournament?',\n                title: 'Remove Participant?'\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(async data => {\n                if (data) {\n                    let info = {\n                        participantId: participantId\n                    }\n                    try {\n                        await this.http.post(`/api/tournament/${this.tournament.tournamentId}/deleteParticipant`, info).toPromise();\n                        this.notif.showSuccess('', 'Successfully removed participant');\n                        this.participants.splice(this.participants.findIndex(x => x.participantId == participantId), 1);\n                    } catch (error) {\n                        console.error(\"Error: \", error);\n                        this.notif.showError('', 'Error removing participant');\n                    }\n                }\n            });\n    }\n\n    eliminateParticipant(participantId) {\n        const dialog = this.dialog.open(ConfirmDialogComponent, {\n            // height: '400px',\n            width: '400px',\n            data: {\n                cancelText: 'Cancel',\n                confirmText: 'Confirm',\n                message: 'Are you sure you want to eliminate this user?',\n                title: 'Eliminate Participant?'\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(async data => {\n                if (data) {\n                    let info = {\n                        participantId: participantId\n                    }\n                    try {\n                        await this.http.post(`/api/tournament/${this.tournament.tournamentId}/elimParticipant`, info).toPromise();\n                        this.notif.showSuccess('', 'Successfully eliminated participant');\n                        this.updateParticipants();\n                    } catch (error) {\n                        console.error(\"Error: \", error);\n                        this.notif.showError('', 'Error eliminating participant');\n                    }\n                    // this.elimParticipant(info)\n                    //     .subscribe(data => {\n                    //         if (!data.flag) {\n                    //             this.notif.showSuccess('', 'Successfully eliminated participant');\n                    //             // this.participants.splice(this.participants.findIndex(x => x.participantId == participantId), 1);\n                    //             this.updateParticipants();\n                    //         } else {\n                    //             console.error(\"Error: \", data);\n                    //             this.notif.showError('', 'Error eliminating participant');\n                    //         }\n                    //     }, error => {\n                    //         this.notif.showError('', 'Error eliminating participant');\n                    //         console.error(\"Error: \", error);\n                    //     });\n                }\n            });\n    }\n\n    editComment(participantId) {\n        const dialog = this.dialog.open(editCommentDialog, {\n            minWidth: '60vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: {\n                participantId: participantId,\n                tournament: this.tournament,\n                curUser: this.participants.find(x => x.participantId == participantId)\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(data => {\n                if (data) {\n                    let userIndex = this.participants.findIndex(x => x.participantId == data.participantId);\n                    // console.log(this.participants[userIndex])\n                    this.participants[userIndex] = { ...this.participants[userIndex], ...data }\n                    // console.log(this.participants[userIndex])\n                    // console.log(data)\n                }\n            });\n    }\n\n    updateQualSession() {\n        const dialog = this.dialog.open(AssignSessionComponent, {\n            minWidth: '60vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: {\n                tournament: this.tournament,\n                session: this.userSession\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(data => {\n                if (data) {\n                    // let userIndex = this.participants.findIndex(x => x.participantId == data.participantId);\n                    // // console.log(this.participants[userIndex])\n                    // this.participants[userIndex] = { ...this.participants[userIndex], ...data }\n                    // console.log(this.participants[userIndex])\n                    // console.log(data)\n                }\n            });\n    }\n\n    removeParticipant(data: any): Observable<any> {\n        return this.http.post(`/api/tournament/${this.tournament.tournamentId}/deleteParticipant`, data);\n    }\n\n    elimParticipant(data: any): Observable<any> {\n        return this.http.post(`/api/tournament/${this.tournament.tournamentId}/elimParticipant`, data);\n    }\n\n    setParticpants() {\n        this.getParticipants()\n            .subscribe(data => {\n                this.participants = data;\n                this.participants.sort(this.orderGlobal);\n                this.cd.detectChanges();\n                // console.log(this.participants);\n            })\n    }\n\n    canEdit() {\n        return this.participants.every(x => x.position == 0);\n    }\n\n    getParticipants(): Observable<any> {\n        return this.http.get(`/api/tournament/${this.tournament.tournamentId}/${this.all ? 'allParticipants' : 'participants'}`);\n    }\n\n    addPlayer() {\n        const dialog = this.dialog.open(AddPlayerComponent, {\n            minWidth: '60vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n        });\n    }\n\n    recalc() {\n\n    }\n\n    async save() {\n        try {\n            await this.http.put(`/api/tournament/${this.tournament.tournamentId}/participants`, this.participants).toPromise();\n            this.notif.showSuccess('', 'Successfully updated participant');\n            this.updateParticipants();\n        } catch (error) {\n            console.error(\"Error: \", error);\n            this.notif.showError('', 'Error updating participants');\n        }\n    }\n\n    seedDragDrop(event: CdkDragDrop<participant>) {\n        // console.log(event);\n        if (event.previousContainer === event.container) {\n            // moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n            if (this.participants[event.currentIndex].position == 0) {\n                moveItemInArray(this.participants, event.previousIndex, event.currentIndex);\n                for (let i = 0; i < this.participants.length; i++) {\n                    const user = this.participants[i];\n                    user.seed = i + 1;\n                }\n            }\n        } else {\n            if (this.participants.find(x => x == event.item.data)) {\n                transferArrayItem(this.participants,\n                    this.nonQualified,\n                    event.previousIndex,\n                    event.currentIndex);\n            } else {\n                transferArrayItem(this.nonQualified,\n                    this.participants,\n                    event.previousIndex,\n                    event.currentIndex);\n            }\n            for (let i = 0; i < this.participants.length; i++) {\n                const user = this.participants[i];\n                user.seed = i + 1;\n            }\n        }\n\n    }\n}\n\n@Component({\n    selector: 'editCommentDialog',\n    templateUrl: './editCommentDialog.html',\n})\nexport class editCommentDialog implements OnInit {\n\n    signUpForm: FormGroup;\n    id: number;\n    signUpComment: string = '';\n\n    filteredOptions: Observable<any>;\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private dialogRef: MatDialogRef<editCommentDialog>,\n        private notif: NotificationService\n    ) {\n\n    }\n\n    ngOnInit() {\n        // console.log(this.data)\n        this.id = this.data.tournament.tournamentId;\n        this.signUpComment = this.data.tournament.signup_comment;\n        this.signUpForm = this.fb.group({\n            comment: this.data.curUser.comment\n        });\n        if (!!this.data.tournament.comment_required) {\n            this.signUpForm.controls['comment'].setValidators([Validators.required]);\n            this.signUpForm.controls['comment'].updateValueAndValidity();\n        }\n    }\n\n    get comment() {\n        return this.signUpForm.get('comment');\n    }\n\n    async onSubmit() {\n        // this.editSignup(this.signUpForm.value)\n        //     .subscribe(data => {\n        //         if (!data.flag) {\n        //             this.notif.showInfo('', 'Successfully updated sign up');\n        //             this.dialogRef.close({ ...this.signUpForm.value, participantId: this.data.participantId });\n        //         } else {\n        //             console.error('Error', data.err)\n        //             this.notif.showError('', 'Error updaing sign up');\n        //             this.dialogRef.close(false);\n        //         }\n        //     }, error => {\n        //         this.notif.showError('', 'Error updaing sign up');\n        //         console.error(\"Error: \", error);\n        //         this.dialogRef.close(false);\n        //     });\n        try {\n            await this.http.put(`/api/updateParticipant/${this.id}/${this.data.participantId}`, this.signUpForm.value).toPromise();\n            this.notif.showInfo('', 'Successfully updated sign up');\n            this.dialogRef.close({ ...this.signUpForm.value, participantId: this.data.participantId });\n        } catch (error) {\n            this.notif.showError('', 'Error updaing sign up');\n            console.error(\"Error: \", error);\n            this.dialogRef.close(false);\n        }\n    }\n\n    editSignup(data: any): Observable<any> {\n        return this.http.put(`/api/updateParticipant/${this.id}/${this.data.participantId}`, data);\n    }\n}\n","<div class=\"card-body\">\n  <h1>{{tournament.name}}</h1>\n  <h3>Participants</h3>\n\n  <div *ngIf=\"loading else loaded\">\n    <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n            margin-left: auto;\n            margin-right: auto;\n            width: 70px;\n            border: none;\">\n  </div>\n\n  <ng-template #loaded>\n    <!-- Base participant display -->\n    <div class=\"participantGrid\"\n      *ngIf=\"tournament.state == 'qualifiers' || tournament.state == 'awaiting_start' || all\">\n      <mat-accordion *ngFor=\"let user of participants\">\n        <mat-expansion-panel hideToggle class=\"playerPanel\">\n          <mat-expansion-panel-header>\n            <mat-panel-title style=\"justify-content: center;\">\n              <a class=\"playerName\" [routerLink]=\"['/user', user.userId]\">\n                {{user.name}}\n              </a>\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n          <img loading=\"lazy\" class=\"participantImg\" src=\"{{user.avatar}}\">\n          <p class=\"card-text\" style=\"float: left;\">\n            <b>Global Rank:</b> #{{user.globalRank}} <br>\n            <b>Regional Rank:</b> #{{user.localRank}} <img class=\"participantFlag\"\n              src=\"\\assets/flags/{{user.country}}.png\" alt=\"{{user.country}} Flag\"\n              style=\"height: 20px;border: none;\"><br>\n            <!-- <b>Tournament Rank:</b> #{{user.tourneyRank}} <br> -->\n            <a *ngIf=\"user.ssId\" href=\"https://scoresaber.com/u/{{user.ssId}}\" target=\"_blank\">Scoresaber</a> <br>\n            <a href=\"https://twitch.tv/{{user.twitchName}}\" target=\"_blank\">Twitch</a> <br>\n            <span *ngIf=\"isAuthorised || user.comment != null\"\n              [innerHTML]=\"'Comment: ' + (user.comment | linkify: linkOptions) + '\\n'\"\n              style=\"white-space: pre-line;\"></span>\n            <span *ngIf=\"(curUser != null && curUser.discordId == curUser.discordId) && userSession\">\n              Current Session Time: {{displayTime(userSession.time)}}\n            </span>\n            <button mat-stroked-button color=\"warn\" *ngIf=\"isAuthorised\"\n              (click)=\"deleteParticipant(user.participantId)\">Remove Participant</button> &nbsp;\n            <button mat-stroked-button color=\"accent\"\n              *ngIf=\"(curUser != null && user.discordId == curUser.discordId) || isAuthorised\"\n              (click)=\"editComment(user.participantId)\">Edit comment</button> &nbsp;\n            <button mat-stroked-button color=\"accent\"\n              *ngIf=\"(curUser != null && user.discordId == curUser.discordId) && tournament.state == 'awaiting_start'\"\n              (click)=\"updateQualSession()\">Change Session</button> &nbsp;\n          </p>\n        </mat-expansion-panel>\n      </mat-accordion>\n    </div>\n\n    <!-- Seeded display -->\n    <p class=\"card-text\" *ngIf=\"(tournament.state == 'main_stage' || tournament.state == 'archived') && tournament.type != 'battle_royale' && !all \n            && isAuthorised\n            && canEdit()\">\n      <mat-checkbox [checked]=\"editMode\" (change)=\"editMode = !editMode\" style=\"display: block;\">\n        Edit <i class=\"fas fa-edit\"></i>\n      </mat-checkbox>\n      <ng-container *ngIf=\"editMode\">\n        *Reordering participants will change their seed.\n        <br>\n        <!-- <button mat-button color=\"primary\" (click)=\"addPlayer()\">Add Player</button> -->\n        <!-- <button mat-button color=\"primary\" (click)=\"recalc()\">Recalc from quals</button>\n                <br> -->\n        <button mat-raised-button color=\"accent\" (click)=\"save()\">Save</button>\n        <button mat-raised-button color=\"warn\" (click)=\"updateParticipants()\">Revert</button>\n      </ng-container>\n    </p>\n    <div class=\"participantGrid\" [ngClass]=\"{'battleRoyale' : editMode}\"\n      *ngIf=\"(tournament.state == 'main_stage' || tournament.state == 'archived') && tournament.type != 'battle_royale' && !all\"\n      cdkDropListGroup>\n      <ng-container *ngIf=\"!editMode\">\n        <ng-container *ngFor=\"let user of participants\">\n          <mat-accordion *ngIf=\"user.seed != 0\">\n            <mat-expansion-panel hideToggle class=\"playerPanel\">\n              <mat-expansion-panel-header>\n                <mat-panel-title class=\"playerName\">\n                  <span style=\"justify-content: left;\">#{{user.seed}}</span> &nbsp;\n                  <a class=\"playerName\" [routerLink]=\"['/user', user.userId]\">\n                    {{user.name}}\n                  </a> &nbsp;\n                </mat-panel-title>\n              </mat-expansion-panel-header>\n              <img loading=\"lazy\" class=\"participantImg\" src=\"{{user.avatar}}\">\n              <p class=\"card-text\" style=\"float: left;\">\n                <b>Global Rank:</b> #{{user.globalRank}} <br>\n                <b>Regional Rank:</b> #{{user.localRank}} <img class=\"participantFlag\"\n                  src=\"\\assets/flags/{{user.country}}.png\" alt=\"{{user.country}} Flag\"\n                  style=\"height: 20px;border: none;\"><br>\n                <b>Seed:</b> #{{user.seed}} <br>\n                <a *ngIf=\"user.ssId\" href=\"https://scoresaber.com/u/{{user.ssId}}\" target=\"_blank\">Scoresaber</a> <br>\n                <a href=\"https://twitch.tv/{{user.twitchName}}\" target=\"_blank\">Twitch</a> <br>\n                <span *ngIf=\"isAuthorised || user.comment != null\"\n                  [innerHTML]=\"'Comment: ' + (user.comment | linkify: linkOptions) + '\\n'\"\n                  style=\"white-space: pre-line;\"></span>\n                <button mat-stroked-button color=\"warn\" *ngIf=\"isAuthorised\"\n                  (click)=\"deleteParticipant(user.participantId)\">Remove Participant</button> &nbsp;\n                <button mat-stroked-button color=\"accent\"\n                  *ngIf=\"(curUser != null && user.discordId == curUser.discordId) || isAuthorised\"\n                  (click)=\"editComment(user.participantId)\">Edit comment</button> &nbsp;\n              </p>\n            </mat-expansion-panel>\n          </mat-accordion>\n        </ng-container>\n      </ng-container>\n\n      <ng-container *ngIf=\"editMode\">\n        <mat-accordion [cdkDropListData]=\"participants\" cdkDropList (cdkDropListDropped)=\"seedDragDrop($event)\">\n          <span *ngIf=\"editMode\">Qualified</span>\n          <ng-container *ngFor=\"let user of participants; let i = index\">\n            <mat-expansion-panel disabled hideToggle *ngIf=\"user.seed != 0\" class=\"playerPanel\"\n              [ngClass]=\"{'eliminated' : user.position != 0}\" cdkDrag [cdkDragData]=\"user\"\n              [cdkDragDisabled]=\"user.position != 0\">\n              <mat-expansion-panel-header>\n                <mat-panel-title class=\"playerName\">\n                  #{{user.seed}} <img loading=\"lazy\" class=\"participantImgSmall\" src=\"{{user.avatar}}\">\n                  <a class=\"playerName\" [routerLink]=\"['/user', user.userId]\">\n                    {{user.name}}\n                  </a>\n                </mat-panel-title>\n                <mat-panel-description class=\"playerSumary\">\n                  <i *ngIf=\"editMode\" class=\"far fa-trash-alt\" (click)=\"deleteParticipant(user.participantId)\"></i>\n                  &nbsp;\n                  <i *ngIf=\"editMode && user.position == 0\" cdkDragHandle class=\"fas fa-grip-vertical grabber\"></i>\n                </mat-panel-description>\n              </mat-expansion-panel-header>\n            </mat-expansion-panel>\n          </ng-container>\n        </mat-accordion>\n        <div *ngIf=\"editMode\">\n          Non Qualified\n          <mat-accordion [cdkDropListData]=\"nonQualified\" cdkDropList (cdkDropListDropped)=\"seedDragDrop($event)\">\n            <ng-container *ngFor=\"let user of nonQualified; let i = index\">\n              <mat-expansion-panel disabled hideToggle class=\"playerPanel\"\n                [ngClass]=\"{'eliminated' : user.position != 0}\" cdkDrag [cdkDragData]=\"user\"\n                [cdkDragDisabled]=\"user.position != 0\">\n                <mat-expansion-panel-header>\n                  <mat-panel-title class=\"playerName\">\n                    <img loading=\"lazy\" class=\"participantImgSmall\" src=\"{{user.avatar}}\">\n                    <a class=\"playerName\" [routerLink]=\"['/user', user.userId]\">\n                      {{user.name}}\n                    </a>\n                  </mat-panel-title>\n                  <mat-panel-description class=\"playerSumary\">\n                    <i *ngIf=\"editMode\" class=\"far fa-trash-alt\" (click)=\"deleteParticipant(user.participantId)\"></i>\n                    &nbsp;\n                    <i *ngIf=\"editMode && user.position == 0\" cdkDragHandle class=\"fas fa-grip-vertical grabber\"></i>\n                  </mat-panel-description>\n                </mat-expansion-panel-header>\n              </mat-expansion-panel>\n            </ng-container>\n          </mat-accordion>\n        </div>\n      </ng-container>\n    </div>\n\n    <!-- Battle royale -->\n    <p class=\"card-text\" *ngIf=\"(tournament.state == 'main_stage' || tournament.state == 'archived') && tournament.type == 'battle_royale' \n            && !all \n            && isAuthorised\n            && canEdit()\">\n      <mat-checkbox [checked]=\"editMode\" (change)=\"editMode = !editMode\" style=\"display: block;\">\n        Edit <i class=\"fas fa-edit\"></i>\n      </mat-checkbox>\n      <ng-container *ngIf=\"editMode\">\n        *Reordering participants will change their seed.\n        <br>\n        <!-- <button mat-button color=\"primary\" (click)=\"addPlayer()\">Add Player</button> -->\n        <!-- <button mat-button color=\"primary\" (click)=\"recalc()\">Recalc from quals</button>\n                <br> -->\n        <button mat-raised-button color=\"accent\" (click)=\"save()\">Save</button>\n        <button mat-raised-button color=\"warn\" (click)=\"updateParticipants()\">Revert</button>\n      </ng-container>\n    </p>\n    <div class=\"participantGrid\"\n      *ngIf=\"(tournament.state == 'main_stage' || tournament.state == 'archived') && tournament.type == 'battle_royale' && !all\"\n      [ngClass]=\"{'battleRoyale' : tournament.type == 'battle_royale'}\" cdkDropListGroup>\n      <mat-accordion [cdkDropListData]=\"participants\" cdkDropList (cdkDropListDropped)=\"seedDragDrop($event)\">\n        <span *ngIf=\"editMode\">Qualified</span>\n        <ng-container *ngFor=\"let user of participants; let i = index\">\n          <mat-expansion-panel hideToggle *ngIf=\"user.seed != 0\" class=\"playerPanel\"\n            [ngClass]=\"{'eliminated' : user.position != 0}\" cdkDrag [cdkDragData]=\"user\"\n            [cdkDragDisabled]=\"user.position != 0 || !editMode\">\n            <mat-expansion-panel-header>\n              <mat-panel-title class=\"playerName\">\n                #{{user.seed}} <img loading=\"lazy\" class=\"participantImgSmall\" src=\"{{user.avatar}}\">\n                <a class=\"playerName\" [routerLink]=\"['/user', user.userId]\">\n                  {{user.name}}\n                </a>\n              </mat-panel-title>\n              <mat-panel-description class=\"playerSumary\">\n                <i *ngIf=\"editMode\" class=\"far fa-trash-alt\" (click)=\"deleteParticipant(user.participantId)\"></i> &nbsp;\n                <i *ngIf=\"editMode && user.position == 0\" cdkDragHandle class=\"fas fa-grip-vertical grabber\"></i>\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n            <p class=\"card-text\">\n              <b>Seed:</b> #{{user.seed}} <br>\n              <b>Global Rank:</b> #{{user.globalRank}} <br>\n              <b>Regional Rank:</b> #{{user.localRank}} <img class=\"participantFlag\"\n                src=\"\\assets/flags/{{user.country}}.png\" alt=\"{{user.country}} Flag\"\n                style=\"height: 20px;border: none;\"><br>\n              <a *ngIf=\"user.ssId\" href=\"https://scoresaber.com/u/{{user.ssId}}\" target=\"_blank\">Scoresaber</a> <br>\n              <a href=\"https://twitch.tv/{{user.twitchName}}\" target=\"_blank\">Twitch</a> <br>\n              <span *ngIf=\"isAuthorised || user.comment != null\"\n                [innerHTML]=\"'Comment: ' + (user.comment | linkify: linkOptions) + '\\n'\"\n                style=\"white-space: pre-line;\"></span>\n              <button mat-stroked-button color=\"warn\" *ngIf=\"isAuthorised && user.position == 0\"\n                (click)=\"eliminateParticipant(user.participantId)\">Eliminate Participant</button> &nbsp;\n              <button mat-stroked-button color=\"accent\"\n                *ngIf=\"(curUser != null && user.discordId == curUser.discordId) || isAuthorised\"\n                (click)=\"editComment(user.participantId)\">Edit comment</button> &nbsp;\n            </p>\n          </mat-expansion-panel>\n        </ng-container>\n      </mat-accordion>\n      <div *ngIf=\"editMode\">\n        Non Qualified\n        <mat-accordion [cdkDropListData]=\"nonQualified\" cdkDropList (cdkDropListDropped)=\"seedDragDrop($event)\">\n          <ng-container *ngFor=\"let user of nonQualified; let i = index\">\n            <mat-expansion-panel disabled hideToggle class=\"playerPanel\" [ngClass]=\"{'eliminated' : user.position != 0}\"\n              cdkDrag [cdkDragData]=\"user\" [cdkDragDisabled]=\"user.position != 0\">\n              <mat-expansion-panel-header>\n                <mat-panel-title class=\"playerName\">\n                  <img loading=\"lazy\" class=\"participantImgSmall\" src=\"{{user.avatar}}\">\n                  <a class=\"playerName\" [routerLink]=\"['/user', user.userId]\">\n                    {{user.name}}\n                  </a>\n                </mat-panel-title>\n                <mat-panel-description class=\"playerSumary\">\n                  <i *ngIf=\"editMode\" class=\"far fa-trash-alt\" (click)=\"deleteParticipant(user.participantId)\"></i>\n                  &nbsp;\n                  <i *ngIf=\"editMode && user.position == 0\" cdkDragHandle class=\"fas fa-grip-vertical grabber\"></i>\n                </mat-panel-description>\n              </mat-expansion-panel-header>\n            </mat-expansion-panel>\n          </ng-container>\n        </mat-accordion>\n      </div>\n\n    </div>\n  </ng-template>\n</div>\n","<h1>Edit sign up</h1>\n<form [formGroup]=\"signUpForm\" novalidate (ngSubmit)=\"onSubmit()\">\n    <!-- Value: {{ signUpForm.value | json }} -->\n    <br>\n    <mat-form-field>\n        <mat-label>{{signUpComment}}</mat-label>\n        <textarea matInput formControlName=\"comment\"></textarea>\n        <mat-error *ngIf=\"comment.invalid && comment.touched\">\n            This tournament requires you to provide: {{signUpComment}} in order to sign up\n        </mat-error>\n    </mat-form-field>\n\n    <div mat-dialog-actions>\n        <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"signUpForm.invalid\">Update sign Up</button>\n    </div>\n</form>","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { AppComponent } from '../app.component';\nimport { NotificationService } from '../services/toast.service';\nimport { userAPI } from '../_models/user.model';\n\n@Component({\n    selector: 'app-profile',\n    templateUrl: './profile.component.html',\n    styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent extends AppComponent implements OnInit {\n\n    title = \"Profile | BeatKhana!\";\n    loading = true;\n    curUser: userAPI = null;\n\n    async ngOnInit(): Promise<void> {\n        this.setTitle(this.title);\n\n        await this.updateUser();\n        this.curUser = await this.http.get<userAPI>(`/api/user/${this.user.discordId}`).toPromise();\n        // this.setTitle(this.curUser.name+\"'s Profile\" + this.title);\n        if (this.curUser.avatar.includes('api') || this.curUser.avatar.includes('oculus')) {\n            this.curUser.avatar = \"https://new.scoresaber.com\" + this.curUser.avatar;\n        } else {\n            this.curUser.avatar = `/${this.curUser.avatar}` + (this.curUser.avatar.substring(0, 2) == 'a_' ? '.gif' : '.webp');\n            this.curUser.avatar = `https://cdn.discordapp.com/avatars/${this.curUser.discordId}${this.curUser.avatar}`\n        }\n        console.log(this.user);\n    }\n\n    editUser(id) {\n        const dialog = this.dialog.open(editProfileDialog, {\n            // height: '400px',\n            minWidth: '60vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: {\n                selUser: this.user,\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(data => {\n                if (data) {\n                    this.user = { ...this.user, ...data };\n                }\n            });\n    }\n\n}\n\n@Component({\n    selector: 'editProfileDialog',\n    templateUrl: './editProfileDialog.html',\n    styleUrls: ['./profile.component.scss']\n})\nexport class editProfileDialog implements OnInit {\n\n    userForm: FormGroup;\n\n    pronouns = ['He/Him', 'She/Her', 'They/Them'];\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private dialogRef: MatDialogRef<editProfileDialog>,\n        private notif: NotificationService\n    ) { }\n\n    // roleIds = [];\n    // minRole = 999;\n\n    ngOnInit() {\n        this.userForm = this.fb.group({\n            discordId: [this.data.selUser.discordId, [\n                Validators.required\n            ]],\n            name: [this.data.selUser.name, [\n                Validators.required\n            ]],\n            twitchName: [this.data.selUser.twitchName, [\n                Validators.required\n            ]],\n            pronoun: [this.data.selUser.pronoun, [\n                Validators.required\n            ]]\n        });\n        this.userForm.value.roleIds = [];\n        // this.roleIds = this.data.selUser.roleIds != null ? this.data.selUser.roleIds.split(', ').map(x=>+x) : [];\n        // this.minRole = Math.min(...this.data.curUser.roleIds.map(x=>+x));\n    }\n\n    async onSubmit() {\n        try {\n            await this.http.put('/api/user/' + this.userForm.value.discordId, this.userForm.value).toPromise();\n            this.notif.showSuccess('', 'Successfully updated profile');\n            this.dialogRef.close(this.userForm.value);\n        } catch (error) {\n            console.error(\"Error: \", error);\n            this.notif.showError('', 'Error updating profile');\n            this.dialogRef.close(false);\n        }\n    }\n\n    updateUser(): Observable<any> {\n        return this.http.put('/api/user/' + this.userForm.value.discordId, this.userForm.value);\n    }\n}\n","<div *ngIf=\"!curUser || !user else loaded\">\n    <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 100px;\">\n</div>\n\n<ng-template #loaded>\n    <div class=\"container\">\n        <div class=\"card noHover\">\n            <div class=\"card-body\">\n                <!-- <img class=\"profileImg\" src=\"{{ user.avatar }}\" /> -->\n                <div class=\"right-container\">\n                    <img class=\"profileImg\" src=\"{{ curUser.avatar }}\" />\n                </div>\n                <h1>\n                    {{ curUser.name }}\n                    <img class=\"countryImg\" src=\"\\assets/flags/{{curUser.country | uppercase}}.png\" alt=\"\">\n                </h1>\n                <div *ngIf=\"curUser.badges.length > 0\" class=\"badges\">\n                    <img *ngFor=\"let badge of curUser.badges\" src=\"assets/badges/{{badge.image}}.png\"\n                        alt=\"{{badge.description}}\" title=\"{{badge.description}}\">\n                </div>\n                <p class=\"card-text\">\n                    <b>Global Rank:</b> #{{curUser.globalRank}} <br>\n                    <b>Regional Rank:</b> #{{curUser.localRank}} <br>\n                    <!-- <b>Tournament Rank:</b> #{{curUser.tourneyRank}} <br> -->\n                    <a *ngIf=\"user.ssId\" href=\"https://scoresaber.com/u/{{curUser.ssId}}\" target=\"_blank\">Scoresaber</a>\n                    <br>\n                    <a href=\"https://twitch.tv/{{curUser.twitchName}}\" target=\"_blank\">Twitch</a>\n                    <br><br>\n                    <button mat-stroked-button color=\"primary\" (click)=\"editUser(user.discordId)\">Edit</button> &nbsp;\n                    <a mat-stroked-button color=\"primary\" href=\"/api/quest\" target=\"_blank\">Download QuestID</a>\n                </p>\n                <div>\n                    <h4>Previous Tournaments</h4>\n                    <ul class=\"card-text\" style=\"margin-left:10px\">\n                        <li *ngFor=\"let tournament of curUser.tournaments\">{{tournament}}</li>\n                    </ul>\n                </div>\n                <ng-container *ngIf=\"user['roleIds'].includes('1') || user['roleIds'].includes('2')\">\n                    <br>\n                    <h4>Staff:</h4>\n                    <p class=\"card-text\">\n                        <a [routerLink]=\"['/users']\">All Users</a> <br>\n                        <a [routerLink]=\"['/badges']\">Badges</a> <br>\n                        <a [routerLink]=\"['/logs']\">Logs</a>\n                    </p>\n                </ng-container>\n\n            </div>\n        </div>\n    </div>\n</ng-template>","<h1 mat-dialog-title>Edit {{data.selUser.name}}</h1>\n<form [formGroup]=\"userForm\" novalidate (ngSubmit)=\"onSubmit()\">\n    <!-- Value: {{ userForm.value | json }} -->\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Name\" formControlName=\"name\">\n    </mat-form-field>\n    <br>\n    <!-- <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Score Saber ID\" formControlName=\"ssId\">\n    </mat-form-field> -->\n    <br>\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Twitch Name\" formControlName=\"twitchName\">\n    </mat-form-field>\n    <br>\n    <label id=\"pronounlabel\">Preferred Pronoun:</label>\n    <mat-radio-group aria-labelledby=\"pronounlabel\" formControlName=\"pronoun\" class=\"pronounRadio\">\n        <mat-radio-button *ngFor=\"let pronoun of pronouns\" class=\"radio-button\" value=\"{{pronoun}}\">{{pronoun}}\n        </mat-radio-button>\n        <mat-radio-button class=\"radio-button\" value=\"Other\">Other</mat-radio-button>\n        <mat-form-field style=\"margin-top: 5px;\" class=\"fill\" *ngIf=\"pronouns.indexOf(userForm.value.pronoun) == -1\">\n            <input matInput placeholder=\"Preferred Pronoun\" formControlName=\"pronoun\">\n        </mat-form-field>\n    </mat-radio-group>\n    <br>\n    <!-- <label>Roles:</label> -->\n    <!-- <div class=\"roles\">\n        <mat-checkbox *ngFor=\"let role of userRoles\" (change)=\"updateRoleId(role.id)\" [checked]=\"roleIds.includes(+role.id)\" [disabled]=\"role.id <= minRole\">\n            {{role.name}}\n        </mat-checkbox>\n    </div> -->\n\n    <div mat-dialog-actions>\n        <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"userForm.invalid\">Update user</button>\n    </div>\n</form>","import { HttpClient } from '@angular/common/http';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { AppComponent } from '../app.component';\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport { addSongDialog } from '../map-pool/map-pool.component';\nimport { NotificationService } from '../services/toast.service';\nimport { staff } from '../_models/tournamentApi.model';\n\n@Component({\n    selector: 'app-qualifiers',\n    templateUrl: './qualifiers.component.html',\n    styleUrls: ['./qualifiers.component.scss']\n})\nexport class QualifiersComponent extends AppComponent implements OnInit {\n\n    @Input() tournament;\n\n    qualsScores = [];\n    loading = true;\n\n    pools: any = [];\n    leaderboards = {};\n    qualsPool;\n\n    isAuth = false;\n    staff: staff[];\n\n\n    // constructor(public http: HttpClient, public dialog: MatDialog, private notif: NotificationService) { }\n\n    async ngOnInit(): Promise<void> {\n        let pools = await this.http.get(`api/tournament/${this.tournament.tournamentId}/map-pools`).toPromise();\n        let tmp = Object.values(pools).filter(x => x.is_qualifiers == 1);\n        this.qualsPool = Object.values(pools).find(x => x.is_qualifiers == 1);\n        for (let pool of tmp) {\n            if (pool.id != this.qualsPool.id) {\n                this.qualsPool.songs = [...this.qualsPool.songs, ...pool.songs];\n            }\n        }\n        this.staff = await this.http.get<staff[]>(`/api/tournament/${this.tournament.tournamentId}/staff`).toPromise();\n        if (this.user) {\n            this.isAuth = this.tournament.owner == this.user.discordId || this.user['roleIds'].includes('1') || !!this.staff.find(x => x.discordId == this.user.discordId && x.roles.map(x => x.id).includes(1));\n        }\n\n        this.getQuals()\n            .subscribe(res => {\n                this.qualsScores = res;\n                for (const user of this.qualsScores) {\n                    if (!user.avatar) user.avatar = \"\";\n                    if (user.avatar.includes('api') || user.avatar.includes('oculus')) {\n                        user.avatar = \"https://new.scoresaber.com\" + user.avatar;\n                    } else {\n                        user.avatar = `/${user.avatar}` + (user.avatar.substring(0, 2) == 'a_' ? '.gif' : '.webp');\n                        user.avatar = `https://cdn.discordapp.com/avatars/${user.discordId}${user.avatar}`\n                    }\n                    for (const score of user.scores) {\n                        if (this.qualsPool.songs.find(x => x.hash == score.songHash)?.numNotes != 0) {\n                            score.percentage = score.score / (this.qualsPool.songs.find(x => x.hash == score.songHash)?.numNotes * 920 - 7245)\n                        } else {\n                            score.percentage = 0;\n                        }\n                        // score.score = Math.round(score.score / 2);\n                        if (score.songHash in this.leaderboards) {\n                            this.leaderboards[score.songHash].push({\n                                discordId: user.discordId,\n                                name: user.name,\n                                avatar: user.avatar,\n                                score: score.score,\n                                percentage: (score.percentage * 100).toFixed(2)\n                            });\n                        } else {\n                            this.leaderboards[score.songHash] = [{\n                                discordId: user.discordId,\n                                name: user.name,\n                                avatar: user.avatar,\n                                score: score.score,\n                                percentage: (score.percentage * 100).toFixed(2)\n                            }];\n                        }\n                    }\n\n                }\n                // leadboards.sort((a,b) => a.score)\n                for (const leaderboard of Object.keys(this.leaderboards)) {\n                    this.leaderboards[leaderboard].sort((a, b) => b.score - a.score);\n                }\n                for (const user of this.qualsScores) {\n                    for (const score of user.scores) {\n                        score.position = this.leaderboards[score.songHash].findIndex(x => x.discordId == user.discordId);\n                    }\n                    user.scores.sort((a, b) => (a.songHash > b.songHash) ? 1 : ((a.songHash < b.songHash) ? -1 : 0));\n                }\n\n                if (this.qualsScores.length == 1) {\n                    let sumA = this.sumProperty(this.qualsScores[0].scores, 'score');\n                    let sumAPer = this.sumProperty(this.qualsScores[0].scores, 'percentage');\n                    this.qualsScores[0].avgPercentage = isNaN(sumAPer / this.qualsPool.songs.length * 100) ? 0 : (sumAPer / this.qualsPool.songs.length * 100).toFixed(2);\n                    this.qualsScores[0].scoreSum = sumA;\n                }\n\n                this.qualsScores.sort((a, b) => {\n                    let sumA = this.sumProperty(a.scores, 'score');\n                    let sumB = this.sumProperty(b.scores, 'score');\n                    let sumAPer = this.sumProperty(a.scores, 'percentage');\n                    let sumBPer = this.sumProperty(b.scores, 'percentage');\n                    a.avgPercentage = isNaN(sumAPer / this.qualsPool.songs.length * 100) ? 0 : (sumAPer / this.qualsPool.songs.length * 100).toFixed(2);\n                    b.avgPercentage = isNaN(sumBPer / this.qualsPool.songs.length * 100) ? 0 : (sumBPer / this.qualsPool.songs.length * 100).toFixed(2);\n                    a.scoreSum = sumA;\n                    b.scoreSum = sumB;\n                    if (b.avgPercentage == a.avgPercentage) {\n                        if (sumB == sumA) {\n                            if (a.globalRank == 0) return 1;\n                            if (b.globalRank == 0) return -1;\n                            return a.globalRank - b.globalRank;\n                        } else {\n                            return sumB - sumA;\n                        }\n                    } else {\n                        return b.avgPercentage - a.avgPercentage;\n                    }\n\n                });\n\n                this.qualsScores.splice(this.tournament.quals_cutoff, 0, {\n                    cutoff: true\n                });\n                let i = 1;\n                for (const user of this.qualsScores) {\n                    if (!user.cutoff) {\n                        user.position = i;\n                        i++;\n                    }\n                }\n                this.loading = false;\n            })\n    }\n\n    taSync() {\n        const dialog = this.dialog.open(ConfirmDialogComponent, {\n            // height: '400px',\n            width: '400px',\n            data: {\n                cancelText: 'Cancel',\n                confirmText: 'Sync',\n                message: 'Syncing scores with TA will remove all current scores and ensure that they match the TA leaderboards, this will bypass elements such as qualifier attempt limits or remove old scores that are no longer saved within TA.',\n                title: 'Sync Scores With TA'\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(async data => {\n                if (data) {\n                    try {\n                        await this.http.put(`/api/tournament/${this.tournament.tournamentId}/qualifiers/sync`, {}).toPromise();\n                        this.notif.showInfo('', 'Scores are being synced. Please refresh in a minute');\n                    } catch (error) {\n                        console.error(\"Error: \", error);\n                        this.notif.showError('', 'Error syncing scores');\n                    }\n                }\n            });\n    }\n\n    public getQuals(): Observable<any> {\n        return this.http.get(`/api/tournament/${this.tournament.tournamentId}/qualifiers`);\n    }\n\n    async getPools() {\n        return await this.http.get(`api/tournament/${this.tournament.tournamentId}/map-pools`).toPromise();\n    }\n\n    findSong(hash: string) {\n        return this.qualsPool.songs.find(x => x.hash == hash);\n    }\n\n    sumProperty(items, prop) {\n        if (items == null) {\n            return 0;\n        }\n        return items.reduce(function (a, b) {\n            return b[prop] == null ? a : a + b[prop];\n        }, 0);\n    }\n\n}","<div class=\"card-body\">\n  <h1>{{tournament.name}}</h1>\n  <h3>Qualifiers</h3>\n\n  <div *ngIf=\"loading else loaded\">\n    <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n            margin-left: auto;\n            margin-right: auto;\n            width: 70px;\n            border: none;\">\n  </div>\n\n  <ng-template #loaded>\n    <button *ngIf=\"isAuth\" style=\"float: right;\" (click)=\"taSync()\" mat-stroked-button color=\"primary\">Sync With\n      TA</button>\n    <br>\n    <mat-tab-group animationDuration=\"300ms\" dynamicHeight>\n      <mat-tab>\n        <ng-template mat-tab-label>\n          <span class=\"labelText\">All Songs</span>\n        </ng-template>\n        <mat-accordion>\n          <mat-expansion-panel hideToggle *ngFor=\"let user of qualsScores; let i = index\" class=\"playerPanel\"\n            [disabled]=\"user.cutoff || user.scores.length == 0\" [ngClass]=\"{'cutoff' : user.cutoff}\">\n            <mat-expansion-panel-header>\n\n              <mat-panel-title class=\"playerName\" *ngIf=\"!user.cutoff\">\n                #{{user.position}} <img class=\"participantImgSmall\" src=\"{{user.avatar}}\"> <a\n                  routerLink=\"/user/{{user.discordId}}\">{{user.name}}</a>\n              </mat-panel-title>\n              <mat-panel-description class=\"playerSumary\" *ngIf=\"!user.cutoff\">\n                <b style=\"color: #fff\">{{user.scoreSum}}</b> &nbsp; ({{user.avgPercentage}}%)\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n            <p *ngIf=\"!user.cutoff\" class=\"card-text\">\n              <span *ngFor=\"let score of user.scores\">\n                <b style=\"color: #fff\">#{{score.position+1}}</b> &nbsp;\n                <a href=\"https://beatsaver.com/beatmap/{{score.key}}\" target=\"_blank\">\n                  {{score.songName}} - {{score.songAuthor}}\n                </a>\n                <span class=\"mapperName\">[{{score.levelAuthor}}]</span>\n                <span style=\"float: right; color: rgba(255, 255, 255, 0.7);\">\n                  <b class=\"rawScore\" style=\"color: #fff\">{{score.score}}</b> &nbsp;\n                  ({{(score.percentage *\n                                    100).toFixed(2)}}%)\n                </span>\n                <br>\n              </span>\n            </p>\n          </mat-expansion-panel>\n\n        </mat-accordion>\n      </mat-tab>\n      <mat-tab *ngFor=\"let leaderboard of leaderboards | keyvalue\">\n        <ng-template mat-tab-label>\n          <img src=\"https://scoresaber.com/imports/images/songs/{{leaderboard.key}}.png\" class=\"labelImage\">\n          <span class=\"labelText\">{{findSong(leaderboard.key).name}}</span>\n        </ng-template>\n        <mat-accordion>\n          <mat-expansion-panel hideToggle *ngFor=\"let user of leaderboard.value; let i = index\" class=\"playerPanel\"\n            [disabled]=\"true\">\n            <mat-expansion-panel-header>\n              <mat-panel-title class=\"playerName\" *ngIf=\"!user.cutoff\">\n                #{{i+1}} <img class=\"participantImgSmall\" src=\"{{user.avatar}}\"> <a\n                  routerLink=\"/user/{{user.discordId}}\">{{user.name}}</a>\n              </mat-panel-title>\n              <mat-panel-description class=\"playerSumary\" *ngIf=\"!user.cutoff\">\n                <b style=\"color: #fff\">{{user.score}}</b> &nbsp; ({{user.percentage}}%)\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n          </mat-expansion-panel>\n\n        </mat-accordion>\n      </mat-tab>\n    </mat-tab-group>\n  </ng-template>\n</div>\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { AppComponent } from '../app.component';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'app-rankings',\n    templateUrl: './rankings.component.html',\n    styleUrls: ['./rankings.component.scss']\n})\nexport class RankingsComponent extends AppComponent implements OnInit {\n\n    title = \"Rankings | BeatKhana!\";\n    private url = '/api/rankings';\n    public users = [];\n    loading = true;\n    secondLoading = false;\n    allRecords = false;\n    page = 0;\n\n    ngOnInit(): void {\n        this.getRanks()\n            .subscribe(data => {\n                this.page += 1;\n                this.users = data.data;\n                for (const member of this.users) {\n                    if(member.avatar.includes('api') || member.avatar.includes('oculus')) {\n                        member.avatar = \"https://new.scoresaber.com\" + member.avatar;\n                    } else {\n                        member.avatar = `/${member.avatar}` + (member.avatar.substring(0, 2) == 'a_' ? '.gif' : '.webp');\n                        member.avatar = `https://cdn.discordapp.com/avatars/${member.discordId}${ member.avatar }`\n                    }\n                }\n                this.loading = false;\n                // console.log(data)\n            });\n        this.setTitle(this.title);\n    }\n\n    public getRanks(): Observable<any> {\n        return this.http.get(this.url + `?page=${this.page}`);\n    }\n\n    @HostListener('window:scroll', ['$event'])\n    doSomething(event) {\n        if (window.pageYOffset - document.getElementsByClassName(\"playerGrid\")[0].scrollHeight > -1000 && !this.secondLoading && !this.allRecords) {\n            this.secondLoading = true\n            this.getRanks()\n            .subscribe(data => {\n                if(data.err == null) {\n                    this.page += 1;\n                    this.users = this.users.concat(data.data);\n                    this.secondLoading = false;\n                }else {\n                    this.secondLoading = false;\n                    this.allRecords = true;\n                }\n            });\n        }\n    }\n\n}\n","<div class=\"container playerGrid\">\n    <div *ngIf=\"loading else loaded\">\n        <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 100px;\">\n    </div>\n\n    <ng-template #loaded>\n        <div *ngFor=\"let user of users\">\n            <div class=\"card playerCard\">\n                <a class=\"tourneyLink\" routerLink=\"/user/{{user.discordId}}\">\n                    <div class=\"card-body rank\">\n                        <p class=\"card-text\">#{{user.tourneyRank}}</p>\n                    </div>\n                    <div>\n                        <img src=\"{{user.avatar}}\" class=\"card-img\" alt=\"...\">\n                    </div>\n                    <div class=\"card-body\">\n                        <p class=\"card-text\">{{user.name}}</p>\n                    </div>\n                    <div class=\"cardLeft card-body\">\n                        <p class=\"card-text\">+{{user.TR}} TR</p>\n                    </div>\n                    <!-- <div class=\"col-lg-1 playerRank col\">\n                        <div class=\"card-body\">\n                            <p class=\"card-text\">#{{user.tourneyRank}}</p>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-1 col playerImg\">\n                        <img src=\"https://new.scoresaber.com{{user.avatar}}\" class=\"card-img\" alt=\"...\">\n                    </div>\n                    <div class=\"col-lg-9 col playerName\">\n                        <div class=\"card-body\">\n                            <h5 class=\"card-title\">{{user.name}}</h5>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-1 cardLeft col\">\n                        <div class=\"card-body\">\n                            <p class=\"card-text\">+20TR</p>\n                        </div>\n                    </div> -->\n                </a>\n            </div>\n        </div>\n        <div *ngIf=\"secondLoading\">\n            <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n            margin-left: auto;\n            margin-right: auto;\n            width: 40px;\">\n        </div>\n    </ng-template>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rules',\n  templateUrl: './rules.component.html',\n  styleUrls: ['./rules.component.scss']\n})\nexport class RulesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <p>rules works!</p> -->\n<div class=\"container\">\n    <div class=\"card noHover\">\n        <div class=\"card-body\">\n            <h1>Standardized rules</h1>\n            <p class=\"card-text\">\n                Here you can find a set of standardized rules compiled by BeatKhana! and other major tournament hosts.\n            </p>\n            <ul class=\"accordion\">\n                <li>\n                    <input type=\"checkbox\" checked>\n                    <i></i>\n                    <h2 class=\"infoHeader\">Whitelisted mods</h2>\n                    <p class=\"card-text\">\n                        Here is a list of approved mods that will be used by most tournaments. If you have a mod that is not on this list it is likely that you will not be allowed to use it in a tournament setting. <br><br> BeatSaverDownloader <br> BeatSaverVoting\n                        <br> BeatSaviourData <br> BS_Utils <br> BSML <br> CameraPlus <br> Custom Campaigns <br> CustomJSONData <br> CustomSaber <br> Custom Notes (Notes must be approved with screenshots) <br> Custom Walls <br> FencingQualifierPlugin <br>                        FPFCToggle <br> HitScoreVisualizer <br> ImageCoverExpander <br> MusicEscape <br> NoodleExtensions <br> NoteLineRemover <br> No360HUD <br> NoteSpawnEffectRemover <br> ParticleOverdrive <br> PlaylistLoaderLite <br> PracticePlugin\n                        <br> RumbleMod <br> ScoreSaber <br> SongDataCore <br> Song-refresh-button <br> TournamentAssistant <br> YeetDebris <br> BSIPA <br> Saber Factory <br> CustomMenuPointers <br> Custom Campaigns\n                        <br> RandomSongPlayer <br> Chroma <br> JustRainbowLights <br> PerfectionDisplay <br> MappingExtensions <br> StreamCore <br> TransparentWalls <br> YUR Fit Calorie Tracker <br> HTTPStatus <br> CustomMenuText <br> CustomFailText <br>                        CustomMissText <br> CustomMenuMusic <br> SnapTurn <br> SongInfoViewer <br> NoFailCheck <br> BeatFollower <br> Enhancements <br> Music Spatializer <br> SmoothCameraUnlimited <br> FireworksDisabler <br> AdaptiveSFXRemover <br> Enhanced\n                        Search And Filters <br> SongBrowser <br> SongPlayHistory <br> Counters+ <br> ScorePercentage <br> SongChartVisualizer <br> Custom Exit <br> Level Pack Panel Mover <br> ChatCore\n                    </p>\n                </li>\n                <li>\n                    <input type=\"checkbox\" checked>\n                    <i></i>\n                    <h2 class=\"infoHeader\">Replays</h2>\n                    <p class=\"card-text\">\n                        A replay is simply when the map is replayed, this can be called for any reason. <br> Each party will get one replay call per match, however only one replay is allowed per map. <br> Both parties will be told their scores before\n                        being required to call a replay.\n                    </p>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Title, Meta } from '@angular/platform-browser';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MetaTagService {\n\n    private urlMeta: string = \"og:url\";//\n    private titleMeta: string = \"og:title\";//\n    private descriptionMeta: string = \"og:description\";\n    private imageMeta: string = \"og:image\";//\n    private typeMeta: string = \"og:type\";//\n\n    constructor(private titleService: Title, private metaService: Meta) { }\n\n    public defineTags(url: string, title: string, description: string, image: string): void {\n        var mainUrl = `https://beatkhana.com${url}`;\n        var imageUrl = `https://beatkhana.com/${image}`;\n        var tags = [\n            new MetaTag(this.urlMeta, mainUrl, true),\n            new MetaTag(this.titleMeta, title, true),\n            new MetaTag(this.descriptionMeta, description, true),\n            new MetaTag(this.imageMeta, imageUrl, true),\n            new MetaTag(this.typeMeta, 'website', true),\n        ];\n        this.setTags(tags);\n    }\n\n    private setTags(tags: MetaTag[]): void {\n        tags.forEach(siteTag => {\n            const tag = siteTag.isFacebook ? this.metaService.getTag(`property='${siteTag.name}'`) : this.metaService.getTag(`name='${siteTag.name}'`);\n            if (siteTag.isFacebook) {\n                this.metaService.updateTag({ property: siteTag.name, content: siteTag.value });\n            } else {\n                this.metaService.updateTag({ name: siteTag.name, content: siteTag.value });\n            }\n        });\n    }\n}\n\nexport class MetaTag {\n    name: string;\n    value: string;\n    isFacebook: boolean;\n\n    constructor(name: string, value: string, isFacebook: boolean) {\n        this.name = name;\n        this.value = value;\n        this.isFacebook = isFacebook;\n    }\n}\n\n","import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NotificationService {\n\n    constructor(private toastr: ToastrService) { }\n\n    config = {\n        closeButton: true,\n        timeOut: 3000,\n        positionClass: 'toast-bottom-right',\n        tapToDismiss: false\n    }\n\n    showSuccess(title, message) {\n        this.toastr.success(message, title, this.config)\n    }\n\n    showError(title, message) {\n        this.toastr.error(message, title, this.config)\n    }\n\n    showInfo(title, message) {\n        this.toastr.info(message, title, this.config)\n    }\n\n    showWarning(title, message) {\n        this.toastr.warning(message, title, this.config)\n    }\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from '../models/user.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserAuthService {\n\n    user: User;\n    request: Promise<User[]> = null;\n\n    constructor(public http: HttpClient) {\n        this.getUser();\n    }\n\n    private async getUser() {\n        this.request = this.http.get<User[]>('/api/user').toPromise();\n        let tmp = await this.request;\n        this.user = tmp ? tmp[0] : null;\n        if (this.user) {\n            if(this.user.avatar.includes('api') || this.user.avatar.includes('oculus')) {\n                this.user.avatar = \"https://new.scoresaber.com\" + this.user.avatar;\n            } else {\n                this.user.avatar = `/${this.user.avatar}` + (this.user.avatar.substring(0, 2) == 'a_' ? '.gif' : '.webp');\n                this.user.avatar = `https://cdn.discordapp.com/avatars/${this.user.discordId}${ this.user.avatar }`\n            }\n        }\n        this.request = null;\n    }\n\n    async curUser() {\n        if (this.request) {\n            await this.request;\n            return this.user;\n        } else {\n            return this.user;\n        }        \n    }\n\n    hasAdminPerms(tournament) {\n        if (!this.user) return false;\n        return (tournament.owner == this.user.discordId || this.user.roleIds.includes(\"1\"));\n    }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { qualifierSession } from '../_models/qualifiers';\n\n@Component({\n    selector: 'app-sessions',\n    templateUrl: './sessions.component.html',\n    styleUrls: ['./sessions.component.scss']\n})\nexport class SessionsComponent implements OnInit {\n\n    @Input() tournament: any;\n    loading = false;\n\n    qualSessions: qualifierSession[];\n\n    constructor(public http: HttpClient) { }\n\n    async ngOnInit(): Promise<void> {\n        this.loading = true;\n        try {\n            this.qualSessions = await this.http.get<qualifierSession[]>(`/api/tournament/${this.tournament.tournamentId}/qualifiers/sessions/all`).toPromise();\n        } catch (error) { }\n        this.loading = false;\n    }\n\n    displayTime(dateString: string) {\n        return new Date(dateString).toLocaleString();\n    }\n\n}\n","<div class=\"card-body\">\n  <h1>{{tournament.name}}</h1>\n  <h3>Qualifier Sessions</h3>\n\n  <div *ngIf=\"loading else loaded\">\n    <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n            margin-left: auto;\n            margin-right: auto;\n            width: 70px;\n            border: none;\">\n  </div>\n\n  <ng-template #loaded>\n    <br>\n    <mat-accordion>\n      <mat-expansion-panel hideToggle *ngFor=\"let session of qualSessions; let i = index\">\n        <mat-expansion-panel-header>\n\n          <mat-panel-title>\n            {{displayTime(session.time)}}\n          </mat-panel-title>\n          <mat-panel-description>\n            <span>\n              {{session.allocated}}/{{session.limit}}\n            </span>\n          </mat-panel-description>\n        </mat-expansion-panel-header>\n        <p class=\"card-text\">\n\n        </p>\n        <div class=\"sesssionPlayers\">\n          <div *ngFor=\"let user of session.users\" class=\"player\">\n            <img class=\"participantImgSmall\" src=\"https://cdn.discordapp.com/avatars/{{user.userId}}{{user.avatar}}\">\n            <a routerLink=\"/user/{{user.userId}}\">{{user.name}}</a>\n          </div>\n        </div>\n      </mat-expansion-panel>\n\n    </mat-accordion>\n\n  </ng-template>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AppComponent } from '../app.component';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { editProfileDialog } from '../profile/profile.component';\nimport { NotificationService } from '../services/toast.service';\n\n@Component({\n    selector: 'app-sign-up',\n    templateUrl: './sign-up.component.html',\n    styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit {\n\n    signUpForm: FormGroup;\n    id: number;\n    url = '/api/newUser';\n    users = [];\n\n    pronouns = ['He/Him', 'She/Her', 'They/Them'];\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        private notif: NotificationService\n    ) { }\n\n\n\n    ngOnInit(): void {\n        this.signUpForm = this.fb.group({\n            twitch: ['', [\n                Validators.required,\n                // Validators.pattern('^(?:https?:\\/\\/)?(?:www\\.|go\\.)?twitch\\.tv\\/([a-z0-9_]+)($|\\?)'),\n            ]],\n            scoreSaber: [null, [\n                // Validators.required\n            ]],\n            pronoun: ['He/Him', [\n                Validators.required\n            ]]\n        });\n    }\n\n    async onSubmit() {\n        try {\n            await this.http.post(this.url, this.signUpForm.value).toPromise();\n            this.notif.showSuccess('', 'Successfully created profile');\n            window.location.href = '/';\n        } catch (error) {\n            console.error(\"Error: \", error);\n            this.notif.showError('', 'Error creating profile');\n\n            if (error.error?.message?.includes('ER_DUP_ENTRY')) this.notif.showError('', 'Discord or Scoresaber account already in use');\n        }\n    }\n\n    submitData(): Observable<any> {\n        return this.http.post(this.url, this.signUpForm.value);\n    }\n\n    get twitch() {\n        return this.signUpForm.get('twitch');\n    }\n\n    get scoresaber() {\n        return this.signUpForm.get('scoreSaber');\n    }\n}\n","<div class=\"container\">\n    <div class=\"card noHover\">\n        <div class=\"card-body\">\n            <h1>Sign Up</h1>\n            <p class=\"card-text\">\n\n            </p>\n            <form [formGroup]=\"signUpForm\" novalidate (ngSubmit)=\"onSubmit()\" class=\"card-text\">\n                <!-- Value: {{ signUpForm.value | json }} -->\n\n                <mat-form-field class=\"fill\">\n                    <input matInput placeholder=\"Twitch Link\" formControlName=\"twitch\" pattern=\"^(?:https?:\\/\\/)?(?:www\\.)?twitch\\.tv\\/([a-z0-9_]+)($|\\?)\">\n                    <mat-error *ngIf=\"twitch.invalid\">\n                        Please enter a valid twitch link, Format: https://twitch.tv/[channel name]\n                    </mat-error>\n                </mat-form-field>\n                <br>\n                <mat-form-field class=\"fill\">\n                    <input matInput placeholder=\"Scoresaber Link\" formControlName=\"scoreSaber\" pattern=\"^(?:https?:\\/\\/)?(?:www\\.)?scoresaber\\.com\\/u\\/([0-9]+)($|\\?)\">\n                    <mat-error *ngIf=\"scoresaber.invalid\">\n                        Please enter a valid Score Saber link, Format: https://scoresaber.com/u/1234567890123456\n                    </mat-error>\n                </mat-form-field>\n                <br>\n                <label id=\"pronounlabel\">Preferred Pronoun:</label>\n                <mat-radio-group aria-labelledby=\"pronounlabel\" formControlName=\"pronoun\" class=\"pronounRadio\">\n                    <mat-radio-button *ngFor=\"let pronoun of pronouns\" class=\"radio-button\" value=\"{{pronoun}}\">{{pronoun}}</mat-radio-button>\n                    <mat-radio-button class=\"radio-button\" value=\"Other\">Other</mat-radio-button>\n                    <mat-form-field style=\"margin-top: 5px;\" class=\"fill\" *ngIf=\"pronouns.indexOf(signUpForm.value.pronoun) == -1\">\n                        <input matInput placeholder=\"Preferred Pronoun\" formControlName=\"pronoun\">\n                    </mat-form-field>\n                </mat-radio-group>\n\n\n\n                <div mat-dialog-actions>\n                    <button mat-raised-button color=\"warn\">Cancel</button> &nbsp;\n                    <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"signUpForm.invalid\">Sign\n                        Up</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n    selector: 'app-ta',\n    templateUrl: './ta.component.html',\n    styleUrls: ['./ta.component.scss']\n})\nexport class TaComponent implements OnInit {\n\n    constructor(public titleService: Title) {\n        titleService.setTitle('TA Client');\n     }\n\n    ngOnInit(): void {\n        let node = document.createElement('script');\n        node.src = '/assets/ta/bundle.js';\n        node.type = 'text/javascript';\n        document.getElementsByTagName('head')[0].appendChild(node);\n    }\n}\n","<!-- <p>ta works!</p> -->\n<link rel='stylesheet' href='/assets/ta/global.css'>\n<link rel='stylesheet' href='/assets/ta/bundle.css'>\n\n<!-- <script src='/assets/ta/bundle.js'></script> -->\n<div id=\"taClient\"></div>","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AppComponent } from '../app.component';\n\n@Component({\n    selector: 'app-team',\n    templateUrl: './team.component.html',\n    styleUrls: ['./team.component.scss']\n})\nexport class TeamComponent extends AppComponent implements OnInit {\n\n    title = \"Team | BeatKhana!\";\n    private url = '/api/team';\n    userId: string;\n    public team = null;\n    loading = true;\n\n    displayRoles = {\n        1: {label: 'Admins', id: 1, users: []},\n        2: {label: 'Staff', id: 2, users: []},\n        6: {label: 'Mini Tournament Team', id: 6, users: []},\n    }\n\n    ngOnInit(): void {\n        this.setTitle(this.title);\n        this.getTeam()\n            .subscribe(data => {\n                this.team = data;\n                for (let member of this.team) {\n                    if(member.avatar.includes('api') || member.avatar.includes('oculus')) {\n                        member.avatar = \"https://new.scoresaber.com\" + member.avatar;\n                    } else {\n                        member.avatar = `/${member.avatar}` + (member.avatar.substring(0, 2) == 'a_' ? '.gif' : '.webp');\n                        member.avatar = `https://cdn.discordapp.com/avatars/${member.discordId}${ member.avatar }`\n                    }\n                    let minRole = Math.min.apply(null, member.roleIds);\n                    this.displayRoles[minRole].users.push(member);\n                }\n            });\n    }\n\n    getTeam(): Observable<any> {\n        return this.http.get(this.url);\n    }\n\n}\n","<div class=\"container\">\n    <div class=\"card noHover\" style=\"border-radius: 0px 4px 4px 4px;\">\n        <div class=\"card-body\">\n            <ng-template *ngFor=\"let role of displayRoles | keyvalue\" [ngIf]=\"role.value.users.length > 0\">\n                <h2>{{role.value.label}}</h2>\n                <div class=\"usrRow\">\n                    <p class=\"card-text\" *ngFor=\"let user of role.value.users\">\n                        <img class=\"teamImg\" src=\"{{user.avatar}}\">\n                        <span class=\"teamName\">{{user.name}}</span><br>\n                        <span style=\"font-size:smaller;\">{{ user.roleNames.join(', ') }}</span><br>\n                        <a href=\"https://discord.com/users/{{ user.discordId }}\"><i class=\"fab fa-discord\"></i></a>\n                        <a href=\"https://www.twitch.tv/{{ user.twitchName }}\"><i class=\"fab fa-twitch\"></i></a>\n                    </p>\n                </div>\n            </ng-template>\n        </div>\n    </div>\n</div>","import { Input } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { AppComponent } from '../app.component';\nimport { EditStaffComponent } from '../_modals/edit-staff/edit-staff.component';\nimport { staff } from '../_models/tournamentApi.model';\n\n@Component({\n    selector: 'app-tournament-staff',\n    templateUrl: './tournament-staff.component.html',\n    styleUrls: ['./tournament-staff.component.scss']\n})\nexport class TournamentStaffComponent extends AppComponent implements OnInit {\n\n    @Input() tournament;\n    loading = true;\n    staff: staff[] = [];\n\n    async ngOnInit(): Promise<void> {\n        this.staff = await this.http.get<staff[]>(`/api/tournament/${this.tournament.tournamentId}/staff`).toPromise();\n        this.loading = false;\n    }\n\n    getRoleNames(roles: {id: number, role: string}[]) {\n        return roles.map(x => x.role).join(', ');\n    }\n\n    openEdit() {\n        const dialog = this.dialog.open(EditStaffComponent, {\n            // height: '400px',\n            minWidth: '40vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: {\n                tournament: this.tournament,\n                staff: this.staff\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(async data => {\n                if (data) { \n                    this.staff = await this.http.get<staff[]>(`/api/tournament/${this.tournament.tournamentId}/staff`).toPromise();\n                }\n            });\n    }\n\n}\n","<div class=\"card-body\">\n    <h1>{{tournament.name}}</h1>\n    <h3>Staff</h3>\n    <div *ngIf=\"loading else loaded\">\n        <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n                margin-left: auto;\n                margin-right: auto;\n                width: 70px; \n                border: none;\n                padding: 15px; \">\n    </div>\n    <ng-template #loaded>\n        <div class=\"usrRow\">\n            <p class=\"card-text\" *ngFor=\"let user of staff\">\n                <img class=\"teamImg\" src=\"https://cdn.discordapp.com/avatars/{{user.discordId}}/{{user.avatar}}\">\n                <span class=\"teamName\">{{user.name}}</span><br>\n                <span style=\"font-size:smaller;\">{{ getRoleNames(user.roles) }}</span><br>\n                <a href=\"https://discord.com/users/{{ user.discordId }}\"><i class=\"fab fa-discord\"></i></a>\n                <a href=\"https://www.twitch.tv/{{ user.twitchName }}\"><i class=\"fab fa-twitch\"></i></a>\n            </p>\n        </div>\n        <ng-container *ngIf=\"this.userS.hasAdminPerms(tournament)\">\n            <hr>\n            <button mat-stroked-button color=\"primary\" (click)=\"openEdit()\">Edit Staff</button> &nbsp;\n        </ng-container>\n    </ng-template>\n</div>","import { Component, OnInit, Inject, Output, EventEmitter, ViewEncapsulation } from '@angular/core';\nimport { AppComponent } from '../app.component';\nimport { ITournament } from '../interfaces/tournament';\nimport { Observable } from 'rxjs';\nimport { FormGroup, FormBuilder, Validators, AbstractControl, FormControl, ValidationErrors } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { map, startWith, switchMap } from 'rxjs/operators';\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport { NotificationService } from '../services/toast.service';\nimport { signedUp, staff } from '../_models/tournamentApi.model';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\nimport { EventSettings } from '../_models/ta/qualifierEvent';\nimport { GameOptions } from '../_models/ta/gameplayModifiers';\nimport { PlayerOptions } from '../_models/ta/playerSpecificSettnigs';\nimport { Characteristic } from '../_models/ta/characteristic';\nimport { BeatmapDifficulty } from '../_models/ta/match';\nimport { qualifierSession } from '../_models/qualifiers';\nimport { Beatsaver } from '../models/beatsaver.model';\n\n@Component({\n    selector: 'app-tournament',\n    templateUrl: './tournament.component.html',\n    styleUrls: ['./tournament.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class TournamentComponent extends AppComponent implements OnInit {\n\n    title = \"BeatKhana!\";\n    private url = '/api/tournament';\n    public tournament;\n    public tourneyId: string;\n    loading = true;\n    isInfo = true;\n    isMapPool = false;\n    isBracket = false;\n    isParticipants = false;\n    canSignup = true;\n    isQuals = false;\n    isSignedUp = false;\n    staffPage = false;\n    sessions: boolean = false;\n\n    isAuth = false;\n\n    participants: any = [];\n    isParticipant = true;\n    participantData = {};\n\n    linkOptions = {\n        target: {\n            url: \"_blank\"\n        }\n    }\n\n    async ngOnInit(): Promise<void> {\n        this.route.paramMap.subscribe(params => {\n            this.tourneyId = params.get('id');\n            if (this.router.url.includes('map-pool')) {\n                this.isMapPool = true;\n                this.isBracket = false;\n                this.isInfo = false;\n                this.isParticipants = false;\n                this.isQuals = false;\n                this.isSignedUp = false;\n                this.staffPage = false;\n                this.sessions = false;\n            } else if (this.router.url.includes('allParticipants')) {\n                this.isSignedUp = true;\n                this.isQuals = false;\n                this.isParticipants = false;\n                this.isBracket = false;\n                this.isMapPool = false;\n                this.staffPage = false;\n                this.isInfo = false;\n                this.sessions = false;\n            } else if (this.router.url.includes('bracket')) {\n                this.isBracket = true;\n                this.isMapPool = false;\n                this.isInfo = false;\n                this.isParticipants = false;\n                this.isQuals = false;\n                this.isSignedUp = false;\n                this.staffPage = false;\n                this.sessions = false;\n            } else if (this.router.url.includes('participants')) {\n                this.isParticipants = true;\n                this.isBracket = false;\n                this.isMapPool = false;\n                this.isInfo = false;\n                this.isQuals = false;\n                this.isSignedUp = false;\n                this.staffPage = false;\n                this.sessions = false;\n            } else if (this.router.url.includes('qualifiers')) {\n                this.isQuals = true;\n                this.isParticipants = false;\n                this.isBracket = false;\n                this.isMapPool = false;\n                this.isInfo = false;\n                this.isSignedUp = false;\n                this.staffPage = false;\n                this.sessions = false;\n            } else if (this.router.url.includes('staff')) {\n                this.isMapPool = false;\n                this.isBracket = false;\n                this.isInfo = false;\n                this.isParticipants = false;\n                this.isQuals = false;\n                this.isSignedUp = false;\n                this.staffPage = true;\n                this.sessions = false;\n            } else if (this.router.url.includes('sessions')) {\n                this.isMapPool = false;\n                this.isBracket = false;\n                this.isInfo = false;\n                this.isParticipants = false;\n                this.isQuals = false;\n                this.isSignedUp = false;\n                this.staffPage = false;\n                this.sessions = true;\n            } else {\n                this.isMapPool = false;\n                this.isBracket = false;\n                this.isInfo = true;\n                this.isParticipants = false;\n                this.isQuals = false;\n                this.isSignedUp = false;\n                this.staffPage = false;\n                this.sessions = false;\n            }\n        });\n        this.main();\n\n        this.router.events.subscribe((val) => {\n            if (this.router.url.includes('map-pool')) {\n                this.isMapPool = true;\n                this.isBracket = false;\n                this.isInfo = false;\n                this.isParticipants = false;\n                this.isQuals = false;\n                this.isSignedUp = false;\n                this.staffPage = false;\n                this.sessions = false;\n            } else if (this.router.url.includes('allParticipants')) {\n                this.isSignedUp = true;\n                this.isQuals = false;\n                this.isParticipants = false;\n                this.isBracket = false;\n                this.isMapPool = false;\n                this.staffPage = false;\n                this.isInfo = false;\n                this.sessions = false;\n            } else if (this.router.url.includes('bracket')) {\n                this.isBracket = true;\n                this.isMapPool = false;\n                this.isInfo = false;\n                this.isParticipants = false;\n                this.isQuals = false;\n                this.isSignedUp = false;\n                this.staffPage = false;\n                this.sessions = false;\n            } else if (this.router.url.includes('participants')) {\n                this.isParticipants = true;\n                this.isBracket = false;\n                this.isMapPool = false;\n                this.isInfo = false;\n                this.isQuals = false;\n                this.isSignedUp = false;\n                this.staffPage = false;\n                this.sessions = false;\n            } else if (this.router.url.includes('qualifiers')) {\n                this.isQuals = true;\n                this.isParticipants = false;\n                this.isBracket = false;\n                this.isMapPool = false;\n                this.isInfo = false;\n                this.isSignedUp = false;\n                this.staffPage = false;\n                this.sessions = false;\n            } else if (this.router.url.includes('staff')) {\n                this.isMapPool = false;\n                this.isBracket = false;\n                this.isInfo = false;\n                this.isParticipants = false;\n                this.isQuals = false;\n                this.isSignedUp = false;\n                this.staffPage = true;\n                this.sessions = false;\n            } else if (this.router.url.includes('sessions')) {\n                this.isMapPool = false;\n                this.isBracket = false;\n                this.isInfo = false;\n                this.isParticipants = false;\n                this.isQuals = false;\n                this.isSignedUp = false;\n                this.staffPage = false;\n                this.sessions = true;\n            } else {\n                this.isMapPool = false;\n                this.isBracket = false;\n                this.isInfo = true;\n                this.isParticipants = false;\n                this.isQuals = false;\n                this.isSignedUp = false;\n                this.staffPage = false;\n                this.sessions = false;\n            }\n        });\n    }\n\n    countries: any = null;\n    staff: staff[];\n\n    async main() {\n        this.staff = await this.http.get<staff[]>(`/api/tournament/${this.tourneyId}/staff`).toPromise();\n        const data = await this.http.get<ITournament[]>(this.url + '/' + this.tourneyId).toPromise();\n        this.tournament = data[0];\n\n        // user auth\n        if (this.user) {\n            this.isAuth = this.tournament.owner == this.user.discordId || this.user['roleIds'].includes('1') || !!this.staff.find(x => x.discordId == this.user.discordId && x.roles.map(x => x.id).includes(1));\n        }\n\n        const usr: any = await this.userS.curUser();\n        this.user = usr != null ? usr : null;\n\n        if (this.tournament.countries != '') {\n            this.countries = this.tournament.countries.toLowerCase().replace(' ', '').split(',');\n            if (this.user != null && !this.countries.includes(this.user.country.toLowerCase())) {\n                this.canSignup = false;\n            }\n        }\n\n        if (this.tournament.public_signups == 1) {\n            const participantData = await this.http.get(`/api/tournament/${this.tournament.tournamentId}/participants`).toPromise();\n            this.participants = participantData;\n            if (this.user != null) {\n                let signedUp = await this.http.get<signedUp>(`/api/tournament/${this.tournament.tournamentId}/signedUp`).toPromise();\n                this.isParticipant = signedUp.signedUp;\n            }\n        }\n        if (this.tournament.state == 'archived' || this.tournament.state == 'main_stage') {\n            this.canSignup = false;\n        }\n        this.tournament.safeInfo = this.sanitizer.bypassSecurityTrustHtml(this.tournament.info);\n        this.setTitle(this.tournament.name + ' | ' + this.title);\n        // console.log(this.tournament);\n        this.loading = false;\n    }\n\n    getParticipants(): Observable<any> {\n        return this.http.get(`/api/tournament/${this.tournament.tournamentId}/participants`);\n    }\n\n    public getTournaments(): Observable<ITournament[]> {\n        return this.http.get<ITournament[]>(this.url + '/' + this.tourneyId);\n    }\n\n    openEdit(): void {\n        const dialog = this.dialog.open(editTournament, {\n            minWidth: '60vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: { tournament: this.tournament }\n        });\n\n        dialog.afterClosed()\n            .subscribe(data => {\n                if (data) {\n                    this.tournament = { ...this.tournament, ...data };\n                    this.tournament.safeInfo = this.sanitizer.bypassSecurityTrustHtml(this.tournament.info);\n                }\n            });\n    }\n\n    tourneySettings(): void {\n        const dialog = this.dialog.open(tournamentSettingsDialog, {\n            // height: '400px',\n            minWidth: '40vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: { tournament: this.tournament }\n        });\n\n        dialog.afterClosed()\n            .subscribe(data => {\n                if (data) {\n                    // console.log(\"Dialog output:\", data);\n                    this.tournament = { ...this.tournament, ...data };\n                    this.tournament.safeInfo = this.sanitizer.bypassSecurityTrustHtml(this.tournament.info);\n                    this.main();\n                }\n            });\n    }\n\n    addPlayer(): void {\n        const dialog = this.dialog.open(addPlayerDialog, {\n            // height: '400px',\n            minWidth: '40vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: {\n                tournament: this.tournament,\n                participants: this.participants\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(data => {\n                if (data) { }\n            });\n    }\n\n    delete(): void {\n        const dialog = this.dialog.open(ConfirmDialogComponent, {\n            // height: '400px',\n            width: '400px',\n            data: {\n                cancelText: 'Cancel',\n                confirmText: 'Delete',\n                message: 'Are you sure you want to delete, this cannot be undone',\n                title: 'Delete Tournament?'\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(async data => {\n                if (data) {\n                    try {\n                        await this.http.delete('/api/tournament/' + this.tourneyId).toPromise();\n                        this.notif.showSuccess('', 'Successfully deleted tournament');\n                        this.router.navigate(['/']);\n                    } catch (error) {\n                        console.error(\"Error: \", data);\n                        this.notif.showError('', 'Error deleting tournament');\n                    }\n                }\n            });\n    }\n\n    signUp(): void {\n        const dialog = this.dialog.open(signUpDialog, {\n            // height: '400px',\n            minWidth: '40vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: { tournament: this.tournament }\n        });\n\n        dialog.afterClosed()\n            .subscribe(data => {\n                if (data) {\n                    this.isParticipant = true;\n                }\n            });\n    }\n\n    private deleteTourney(id): Observable<any> {\n        return this.http.delete('/api/tournament/' + id, {});\n    }\n}\n\n@Component({\n    selector: 'editTournament',\n    templateUrl: './editTournament.html'\n})\nexport class editTournament implements OnInit {\n    tournamentForm: FormGroup;\n    id: number;\n    url = '/api/tournament/';\n    users = [];\n\n    filteredOptions: Observable<any>;\n\n    isSubmitted = false;\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        private router: Router,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private dialogRef: MatDialogRef<editTournament>,\n        private notif: NotificationService\n    ) {\n\n    }\n\n    ngOnInit() {\n        this.id = this.data.tournament.tournamentId;\n        // console.log(this.data);\n        this.url += this.id;\n        // console.log(this.data);\n        this.tournamentForm = this.fb.group({\n            name: this.data.tournament.name,\n            date: this.data.tournament.startDate,\n            endDate: this.data.tournament.endDate,\n            discord: this.data.tournament.discord,\n            owner: [this.data.tournament.owner, [Validators.required, this.requireMatch.bind(this)]],\n            twitchLink: this.data.tournament.twitchLink,\n            image: this.data.tournament.image,\n            imgName: '',\n            prize: this.data.tournament.prize,\n            info: this.data.tournament.info,\n            is_mini: !!this.data.tournament.is_mini\n        });\n\n        this.getUsers()\n            .subscribe(data => {\n                this.users = data;\n                this.filteredOptions = this.tournamentForm.valueChanges\n                    .pipe(\n                        startWith(''),\n                        map(value => typeof value === 'string' ? value : value.owner),\n                        map(owner => owner ? this._filter(owner) : this.users.slice())\n                    );\n            });\n    }\n\n    selectedFile: File;\n    base64: string;\n\n    onFileChanged(event) {\n        this.selectedFile = event.target.files[0];\n        this.tournamentForm.patchValue({ imgName: this.selectedFile.name });\n\n        let reader = new FileReader();\n        reader.readAsDataURL(this.selectedFile);\n        reader.onload = () => {\n            this.tournamentForm.patchValue({ image: reader.result });\n        };\n    }\n\n    private _filter(name: string) {\n        const filterValue = name.toLowerCase();\n        return this.users.filter(option => option.name.toLowerCase().indexOf(filterValue) === 0);\n    }\n\n    get discord() {\n        return this.tournamentForm.get('discord');\n    }\n\n    get twitch() {\n        return this.tournamentForm.get('twitchLink');\n    }\n\n    displayFn(id): string {\n        let user = this.users.find(x => x.discordId == id);\n        return user && user.name ? user.name : '';\n    }\n\n    public formatDate(date) {\n        var d = new Date(date)\n        //     month = '' + (d.getMonth()),\n        //     day = '' + d.getDate(),\n        //     year = d.getFullYear();\n\n        // if (month.length < 2)\n        //     month = '0' + month;\n        // if (day.length < 2)\n        //     day = '0' + day;\n\n        // // return [year, month, day].join('-');\n        // return new Date(Date.UTC(year, parseInt(month), parseInt(day)))\n        return d.toISOString().slice(0, 19).replace('T', ' ');\n    }\n\n    onSubmit() {\n        this.isSubmitted = true;\n        // this.tournamentForm.value.date = this.formatDate(this.tournamentForm.value.date.toString())\n        // this.tournamentForm.value.endDate = this.formatDate(this.tournamentForm.value.endDate.toString())\n        // this.tournamentForm.value.date = this.tournamentForm.value.date.toISOString().slice(0, 19).replace('T', ' '); \n        // this.tournamentForm.value.endDate = this.tournamentForm.value.endDate.toISOString().slice(0, 19).replace('T', ' ');\n        // console.log\n        // console.log(this.tournamentForm.value);\n        this.updateTournament(this.tournamentForm.value)\n            .subscribe(data => {\n                if (!data.flag) {\n                    this.notif.showSuccess('', 'Successfully updated tournament');\n                } else {\n                    console.error('Error', data.err)\n                    this.notif.showError('', 'Error updating tournament');\n                }\n                data.data.date = new Date(Date.parse(data.data.date + '+00:00'));\n                data.data.endDate = new Date(Date.parse(data.data.endDate + '+00:00'));\n                this.dialogRef.close(data.data);\n            }, error => {\n                this.notif.showError('', 'Error updating tournament');\n                console.error(\"Error: \", error);\n                this.dialogRef.close(this.tournamentForm.value);\n            });\n    }\n\n\n    getUsers(): Observable<any> {\n        return this.http.get('/api/users');\n    }\n\n    public updateTournament(data: any): Observable<any> {\n        return this.http.put(this.url, data);\n    }\n\n    private requireMatch(control: FormControl): ValidationErrors | null {\n        const selection: any = control.value;\n        if (!this.users.some(x => x.discordId == selection)) {\n            return { requireMatch: true };\n        }\n        return null;\n    }\n}\n\n@Component({\n    selector: 'tournamentSettingsDialog',\n    templateUrl: './tournamentSettingsDialog.html',\n})\nexport class tournamentSettingsDialog implements OnInit {\n\n    settingsForm: FormGroup;\n    id: number;\n    url = '/api/tournament/';\n    users = [];\n\n    ws: WebSocketSubject<any> = webSocket(`${location.protocol == 'http:' ? 'ws' : 'wss'}://` + location.host + '/api/ws');\n    taConnected = false;\n\n    filteredOptions: Observable<any>;\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        private router: Router,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private dialogRef: MatDialogRef<tournamentSettingsDialog>,\n        private notif: NotificationService\n    ) {\n\n    }\n\n    qualsPool = null;\n\n    baseTaSettings = [];\n\n    showQualsLimit = false;\n\n    async ngOnInit() {\n        this.id = this.data.tournament.id;\n        this.url += this.id;\n\n\n        // console.log(this.data);\n        this.settingsForm = this.fb.group({\n            public_signups: !!this.data.tournament.public_signups,\n            show_signups: !!this.data.tournament.show_signups,\n            public: !!this.data.tournament.public,\n            state: this.data.tournament.state,\n            type: this.data.tournament.type,\n            has_bracket: !!this.data.tournament.has_bracket,\n            has_map_pool: !!this.data.tournament.has_map_pool,\n            signup_comment: this.data.tournament.signup_comment,\n            comment_required: !!this.data.tournament.comment_required,\n            bracket_sort_method: this.data.tournament.bracket_sort_method,\n            bracket_limit: [this.data.tournament.bracket_limit, [\n                Validators.required,\n                Validators.pattern('^[0-9]*$')\n            ]],\n            quals_cutoff: [this.data.tournament.quals_cutoff, [\n                Validators.required,\n                Validators.pattern('^[0-9]*$')\n            ]],\n            show_quals: !!this.data.tournament.show_quals,\n            has_quals: !!this.data.tournament.has_quals,\n            countries: this.data.tournament.countries,\n            sort_method: this.data.tournament.sort_method,\n            standard_cutoff: this.data.tournament.standard_cutoff,\n            ta_url: this.data.tournament.ta_url,\n            ta_password: this.data.tournament.ta_password,\n            qual_attempts: this.data.tournament.qual_attempts,\n            ta_event_flags: this.data.tournament.ta_event_flags,\n            quals_method: this.data.tournament.quals_method\n        });\n        this.showQualsLimit = this.data.tournament.qual_attempts !== 0;\n        this.ws.subscribe(\n            msg => {\n                if (msg.TA && !this.taConnected) {\n                    this.taConnected = msg.TA.Self?.Name == \"BeatKhana!\";\n                }\n            },\n            err => console.log(err)\n        );\n        this.ws.next({ setTournament: this.data.tournament.tournamentId });\n        this.qualSessions = await this.http.get<qualifierSession[]>(`/api/tournament/${this.data.tournament.tournamentId}/qualifiers/sessions`).toPromise();\n\n        let pools = await this.http.get(`/api/tournament/${this.data.tournament.tournamentId}/map-pools`).toPromise();\n        this.qualsPool = Object.values(pools).find(x => x.is_qualifiers == 1);\n        // console.log(this.qualsPool);\n        for (const modifier in EventSettings) {\n            if (isNaN(Number(modifier))) {\n                if (modifier == \"None\") continue;\n                this.baseTaSettings.push({\n                    name: modifier.replace(/([A-Z])/g, \" $1\").trim(),\n                    value: EventSettings[modifier],\n                    isSelected: (<number><unknown>EventSettings[modifier] == (this.data.tournament.ta_event_flags & <number><unknown>EventSettings[modifier])),\n                });\n            }\n        }\n\n        if (this.qualsPool) {\n            for (const song of this.qualsPool.songs) {\n                song.mapOptions = [];\n                for (const modifier in GameOptions) {\n                    if (isNaN(Number(modifier))) {\n                        if (modifier == \"None\") continue;\n                        song.mapOptions.push({\n                            name: modifier.replace(/([A-Z])/g, \" $1\").trim(),\n                            value: GameOptions[modifier],\n                            isSelected: (<number><unknown>GameOptions[modifier] == (song.flags & <number><unknown>GameOptions[modifier])),\n                        });\n                    }\n                }\n                song.pOptions = [];\n                for (const modifier in PlayerOptions) {\n                    if (isNaN(Number(modifier))) {\n                        if (modifier == \"None\") continue;\n                        song.pOptions.push({\n                            name: modifier.replace(/([A-Z])/g, \" $1\").trim(),\n                            value: PlayerOptions[modifier],\n                            isSelected: (<number><unknown>PlayerOptions[modifier] == (song.playerOptions & <number><unknown>PlayerOptions[modifier])),\n                        });\n                    }\n                }\n                let songData: Beatsaver.map = await this.http.get<Beatsaver.map>(`https://beatsaver.com/api/maps/hash/${song.hash}`).toPromise();\n                let characteristics: Characteristic[] = [];\n                let curVersion = songData.versions.reduce((a, b) => (new Date(a.createdAt) > new Date(b.createdAt) ? a : b));\n                for (const characteristic of curVersion.diffs) {\n                    let curCharacteristic = characteristics.find(x => x.SerializedName === characteristic.characteristic);\n                    if (curCharacteristic) {\n                        let diff: BeatmapDifficulty = (<any>BeatmapDifficulty)[\n                            this.titleCase(characteristic.difficulty)\n                        ];\n                        curCharacteristic.Difficulties.push(diff);\n                    } else {\n                        let diff: BeatmapDifficulty = (<any>BeatmapDifficulty)[\n                            this.titleCase(characteristic.difficulty)\n                        ];\n                        characteristics.push({\n                            SerializedName: characteristic.characteristic,\n                            Difficulties: [diff],\n                        });\n                    }\n                    // let diffs: BeatmapDifficulty[] = [];\n                    // for (const diffLabel in characteristic.difficulties) {\n                    //     if (\n                    //         Object.prototype.hasOwnProperty.call(\n                    //             characteristic.difficulties,\n                    //             diffLabel\n                    //         )\n                    //     ) {\n                    //         if (characteristic.difficulties[diffLabel] != null) {\n                    //             let diff: BeatmapDifficulty = (<any>BeatmapDifficulty)[\n                    //                 this.titleCase(diffLabel)\n                    //             ];\n                    //             diffs.push(diff);\n                    //         }\n                    //     }\n                    // }\n                    // characteristics.push({\n                    //     SerializedName: characteristic.name,\n                    //     Difficulties: diffs,\n                    // });\n                }\n                song.characteristics = characteristics;\n                if (song.difficulty) song.difficulty = song.difficulty.toString();\n            }\n        }\n\n\n    }\n\n    titleCase(str): string {\n        var splitStr = str.split(\" \");\n        for (var i = 0; i < splitStr.length; i++) {\n            splitStr[i] =\n                splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n        }\n        return splitStr.join(\" \");\n    }\n\n    ngOnDestroy() {\n        this.ws.complete();\n    }\n\n    get bracket() {\n        return this.settingsForm.get('has_bracket');\n    }\n\n    get limit() {\n        return this.settingsForm.get('bracket_limit');\n    }\n\n    get quals() {\n        return this.settingsForm.get('has_quals');\n    }\n\n    get qualsMethod() {\n        return this.settingsForm.get('quals_method').value;\n    }\n\n    get type() {\n        return this.settingsForm.get('type');\n    }\n\n    getSongDiffs(song) {\n        if (song.selectedCharacteristic) {\n            return song.characteristics.find(x => x.SerializedName == song.selectedCharacteristic).Difficulties;\n        } else {\n            return [];\n        }\n    }\n\n    diffString(diff) {\n        return BeatmapDifficulty[diff];\n    }\n\n    async onSubmit() {\n        if (this.qualsPool && this.quals.value == true && this.taConnected && this.settingsForm.value.quals_method == \"ta_quals\") {\n            this.settingsForm.value.ta_event_flags = 0;\n            for (const modifier of this.baseTaSettings) {\n                if (modifier.isSelected) {\n                    this.settingsForm.value.ta_event_flags |= modifier.value;\n                }\n            }\n            for (const song of this.qualsPool.songs) {\n                song.flags = 0;\n                song.playerOptions = 0;\n                for (const modifier of song.mapOptions) {\n                    if (modifier.isSelected) song.flags |= modifier.value;\n                }\n                for (const modifier of song.pOptions) {\n                    if (modifier.isSelected) song.playerOptions |= modifier.value;\n                }\n                if (song.selectedCharacteristic == null || song.difficulty == null) {\n                    this.notif.showError('', 'Qualifiers must have selected difficulties');\n                    return;\n                }\n            }\n        }\n        let info = {\n            tournamentId: this.data.tournament.tournamentId,\n            settingsId: this.data.tournament.settingsId,\n            settings: this.settingsForm.value\n        }\n        if (this.base64 != null) {\n            console.log(this.base64);\n            await this.http.post(`/api/tournament/${info.tournamentId}/overlay`, { img: this.base64 }).toPromise();\n        }\n        try {\n            if (this.qualsPool && this.settingsForm.value.quals_method == \"ta_quals\") await this.http.put(`/api/tournament/${info.tournamentId}/updateFlags`, this.qualsPool.songs).toPromise();\n        } catch (error) {\n            console.error(error);\n        }\n        if (this.newQualSessions.length > 0) {\n            try {\n                await this.http.post(`/api/tournament/${this.data.tournament.tournamentId}/qualifiers/sessions/add`, this.newQualSessions).toPromise();\n            } catch (error) {\n                console.error(error);\n            }\n        }\n        this.updateSettings(info)\n            .subscribe(async data => {\n                if (!data.flag) {\n                    this.notif.showSuccess('', 'Successfully updated tournament settings');\n\n                } else {\n                    console.error('Error', data.err)\n                    this.notif.showError('', 'Error updating tournament settings');\n                }\n                this.dialogRef.close(this.settingsForm.value);\n            }, error => {\n                this.notif.showError('', 'Error updating tournament settings');\n                console.error(\"Error: \", error);\n                this.dialogRef.close(this.settingsForm.value);\n            });\n    }\n\n    updateSettings(data: any): Observable<any> {\n        return this.http.put(`/api/tournament/${data.tournamentId}/settings`, data);\n    }\n\n    selectedFile: File;\n    base64: string = null;\n\n\n    onFileChanged(event) {\n        this.selectedFile = event.target.files[0];\n        let reader = new FileReader();\n        // reader.readAsDataURL(this.selectedFile);\n        reader.readAsText(this.selectedFile, 'UTF-8');\n        reader.onload = () => {\n            this.base64 = <string>reader.result;\n        };\n    }\n\n    qualSessions: qualifierSession[] = [];\n    newQualSessions: qualifierSession[] = [];\n    newQualsTime = new FormControl();\n    newQualsCap: number = 15;\n\n    async removeSession(session: qualifierSession) {\n        console.log(session);\n        if (session.id) {\n            // delete request\n            await this.http.delete(`/api/tournament/${this.data.tournament.tournamentId}/qualifiers/sessions/delete/${session.id}`).toPromise();\n        }\n        this.qualSessions.splice(this.qualSessions.findIndex(x => x === session), 1);\n        this.newQualSessions.splice(this.newQualSessions.findIndex(x => x === session), 1);\n    }\n\n    createSession() {\n        this.qualSessions.push({ time: this.newQualsTime.value, limit: this.newQualsCap, allocated: 0, tournamentId: this.data.tournament.tournamentId });\n        this.newQualSessions.push({ time: this.newQualsTime.value, limit: this.newQualsCap, allocated: 0, tournamentId: this.data.tournament.tournamentId });\n    }\n\n    displayTime(dateString: string) {\n        return new Date(dateString).toLocaleString();\n    }\n}\n\n\n@Component({\n    selector: 'signUpDialog',\n    templateUrl: './signUpDialog.html',\n})\nexport class signUpDialog implements OnInit {\n\n    signUpForm: FormGroup;\n    id: number;\n    signUpComment: string = '';\n\n    filteredOptions: Observable<any>;\n    qualSessions: qualifierSession[];\n    selectedSession: qualifierSession;\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        private router: Router,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private dialogRef: MatDialogRef<signUpDialog>,\n        private notif: NotificationService\n    ) {\n\n    }\n\n    loading = false;\n\n    async ngOnInit() {\n        this.loading = true;\n        console.log(this.data);\n        this.id = this.data.tournament.tournamentId;\n        this.signUpComment = this.data.tournament.signup_comment;\n        this.signUpForm = this.fb.group({\n            tournamentId: this.id,\n            comment: ''\n        });\n        if (!!this.data.tournament.comment_required) {\n            this.signUpForm.controls['comment'].setValidators([Validators.required]);\n            this.signUpForm.controls['comment'].updateValueAndValidity();\n        }\n        this.qualSessions = await this.http.get<qualifierSession[]>(`/api/tournament/${this.data.tournament.tournamentId}/qualifiers/sessions`).toPromise();\n        this.loading = false;\n    }\n\n    get comment() {\n        return this.signUpForm.get('comment');\n    }\n\n    async onSubmit() {\n        try {\n            await this.http.post(`/api/tournament/${this.id}/signUp`, this.signUpForm.value).toPromise();\n            if (this.data.tournament.quals_method == 'live_quals' && this.selectedSession) {\n                await this.http.post(`/api/tournament/${this.id}/qualifiers/sessions/assign`, { sessionId: this.selectedSession.id }).toPromise();\n            }\n            this.notif.showInfo('', 'Successfully signed up');\n            this.dialogRef.close(true);\n        } catch (error) {\n            console.error('Error', error)\n            this.notif.showError('', 'Error signing up');\n            this.dialogRef.close(false);\n        }\n    }\n\n    signUp(data: any): Observable<any> {\n        return this.http.post(`/api/tournament/${this.id}/signUp`, data);\n    }\n\n    selectSession(session: qualifierSession) {\n        this.selectedSession = session;\n    }\n\n    displayTime(dateString: string) {\n        return new Date(dateString).toLocaleString();\n    }\n}\n\n@Component({\n    selector: 'addPlayerDialog',\n    templateUrl: './addPlayerDialog.html',\n})\nexport class addPlayerDialog implements OnInit {\n\n    addPlayerForm: FormGroup;\n    id: number;\n    signUpComment: string = '';\n\n    filteredOptions: Observable<any>;\n    users: any = [];\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        private router: Router,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private dialogRef: MatDialogRef<signUpDialog>,\n        private notif: NotificationService\n    ) {\n\n    }\n\n    ngOnInit() {\n        this.id = this.data.tournament.tournamentId;\n        // console.log(this.data)\n        this.signUpComment = this.data.tournament.signup_comment;\n        this.addPlayerForm = this.fb.group({\n            userId: ['', [Validators.required, this.requireMatch.bind(this)]],\n            tournamentId: this.id,\n            comment: ''\n        });\n        if (!!this.data.tournament.comment_required) {\n            this.addPlayerForm.controls['comment'].setValidators([Validators.required]);\n            this.addPlayerForm.controls['comment'].updateValueAndValidity();\n        }\n        this.getUsers()\n            .subscribe(data => {\n                this.users = data;\n                this.filteredOptions = this.addPlayerForm.valueChanges\n                    .pipe(\n                        startWith(''),\n                        map(value => typeof value === 'string' ? value : value.userId),\n                        map(userId => userId ? this._filter(userId) : this.users.slice())\n                    );\n            });\n    }\n\n    get comment() {\n        return this.addPlayerForm.get('comment');\n    }\n\n    async onSubmit() {\n        try {\n            await this.http.post(`/api/tournament/${this.id}/signUp`, this.addPlayerForm.value).toPromise();\n            this.notif.showInfo('', 'Successfully added participant');\n            this.dialogRef.close(true);\n        } catch (error) {\n            console.error('Error', error)\n            this.notif.showError('', 'Error adding participant');\n            this.dialogRef.close(false);\n        }\n        // this.signUp(this.addPlayerForm.value)\n        //     .subscribe(data => {\n        //         if (!data.flag) {\n        //             this.notif.showInfo('', 'Successfully added participant');\n        //             this.dialogRef.close(true);\n        //         } else {\n        //             console.error('Error', data.err)\n        //             this.notif.showError('', 'Error adding participant');\n        //             this.dialogRef.close(false);\n        //         }\n        //     }, error => {\n        //         this.notif.showError('', 'Error adding participant');\n        //         console.error(\"Error: \", error);\n        //         this.dialogRef.close(false);\n        //     });\n    }\n\n    signUp(data: any): Observable<any> {\n        return this.http.post(`/api/tournament/${this.id}/signUp`, data);\n    }\n\n    displayFn(id): string {\n        let user = this.users.find(x => x.discordId == id);\n        return user && user.name ? user.name : '';\n    }\n\n    private _filter(name: string) {\n        const filterValue = name.toLowerCase();\n        return this.users.filter(option => option.name.toLowerCase().indexOf(filterValue) === 0);\n    }\n\n    getUsers(): Observable<any> {\n        return this.http.get('/api/users');\n    }\n\n    private requireMatch(control: FormControl): ValidationErrors | null {\n        const selection: any = control.value;\n        if (!this.users.some(x => x.discordId == selection)) {\n            return { requireMatch: true };\n        }\n        return null;\n    }\n}\n","<div *ngIf=\"loading else loaded\">\n  <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 100px;\">\n</div>\n\n<ng-template #loaded>\n  <div class=\"container\">\n    <div class=\"tab-bar\">\n      <div [routerLink]=\"['/tournament', tourneyId]\" [routerLinkActiveOptions]=\"{exact:true}\"\n        routerLinkActive=\"isActive\">\n        <h3>Info</h3>\n      </div>\n      <div *ngIf=\"tournament.show_signups == 1\" [routerLink]=\"['participants']\" routerLinkActive=\"isActive\">\n        <h3>Participants</h3>\n      </div>\n      <div *ngIf=\"user && (tournament.owner == user.discordId || user['roleIds'].includes('1'))\"\n        [routerLink]=\"['allParticipants']\" routerLinkActive=\"isActive\">\n        <h3>Signed Up</h3>\n      </div>\n      <div *ngIf=\"tournament.has_map_pool == 1\" [routerLink]=\"['map-pool']\" routerLinkActive=\"isActive\">\n        <h3>Map Pool</h3>\n      </div>\n      <div\n        *ngIf=\"user && (tournament.owner == user.discordId || user['roleIds'].includes('1')) && tournament.quals_method == 'live_quals'\"\n        [routerLink]=\"['sessions']\" routerLinkActive=\"isActive\">\n        <h3>Sessions</h3>\n      </div>\n      <div *ngIf=\"tournament.show_quals == 1\" [routerLink]=\"['qualifiers']\" routerLinkActive=\"isActive\">\n        <h3>Qualifiers</h3>\n      </div>\n      <div *ngIf=\"tournament.has_bracket == 1\" [routerLink]=\"['bracket']\" routerLinkActive=\"isActive\">\n        <h3>Bracket</h3>\n      </div>\n      <div [routerLink]=\"['staff']\" routerLinkActive=\"isActive\">\n        <h3>Staff</h3>\n      </div>\n    </div>\n    <div class=\"card noHover\" style=\"border-radius: 0px 4px 4px 4px;\">\n      <div class=\"card-body\" #info *ngIf=\"isInfo\">\n        <img class=\"tourneyImg\" src=\"/assets/images/{{tournament.image}}\" alt=\"\" />\n        <h1>{{ tournament.name }}</h1>\n\n        <p class=\"card-text\" style=\"color: #c8825a\" *ngIf=\"tournament.archived == 1\">\n          <b>Archived <br /></b>\n        </p>\n\n        <div class=\"card-text infoText\" *ngIf=\"tournament.safeInfo != null\" [innerHTML]=\"tournament.safeInfo\">\n        </div>\n\n        <p class=\"card-text\">\n          *All times are in your local timezone <br> Date: {{ tournament.startDate | date: 'd/MM/yy, h:mm a'}}\n          -> {{ tournament.endDate | date: 'd/MM/yy, h:mm a'}}<br />\n          <span *ngIf=\"tournament.info != null; else noPrize\">\n            Prize pool: <span [innerHTML]=\"tournament.prize | linkify: linkOptions\"></span> <br />\n          </span>\n          <ng-template #noPrize>Prize Pool: Not announced yet <br></ng-template>\n          <a *ngIf=\"tournament.discord != null\" href=\"{{ tournament.discord }}\" target=\"new\">Discord</a>\n          <br />\n          <a *ngIf=\"tournament.twitchLink != null\" href=\"{{ tournament.twitchLink }}\" target=\"new\">Twitch</a>\n          <br />\n        </p>\n        <p class=\"card-text\" *ngIf=\"tournament.first != null && tournament.archived == 1\">\n          <b>Tournament Results:</b> <br> #1 {{tournament.first}} <br> #2 {{tournament.second}} <br> #3\n          {{tournament.third}} <br>\n        </p>\n        <p *ngIf=\"tournament.public_signups == 1 && user != null && !isParticipant && canSignup\" class=\"card-text\">\n          <button mat-stroked-button color=\"accent\" (click)=\"signUp()\">Sign Up!</button>\n        </p>\n        <p *ngIf=\"tournament.public_signups == 1 && user != null && isParticipant && canSignup\" class=\"card-text\">\n          You have successfully signed up for this tournament!\n        </p>\n        <p *ngIf=\"tournament.public_signups == 1 && user == null\" class=\"card-text\">\n          Please login to signup for this tournament.\n        </p>\n        <ng-container *ngIf=\"isAuth\">\n          <p class=\"card-text\">\n            <button mat-stroked-button color=\"primary\" (click)=\"openEdit()\">Edit Tournament</button> &nbsp;\n            <button mat-stroked-button color=\"primary\" (click)=\"tourneySettings()\">Tournament\n              Settings</button> &nbsp;\n            <button mat-stroked-button color=\"primary\" (click)=\"addPlayer()\">Add Player</button> &nbsp;\n            <button *ngIf=\"user && user['roleIds'].includes('1')\" mat-stroked-button color=\"warn\"\n              (click)=\"delete()\">Delete Tournament</button>\n          </p>\n        </ng-container>\n\n        <!-- <p *ngIf=\"user && tournament.owner == user.discordId && !user['roleIds'].includes('1')\" class=\"card-text\">\n                    \n                    \n                </p>\n                <p >\n                    <button mat-stroked-button color=\"primary\" (click)=\"openEdit()\">Edit Tournament</button> &nbsp;\n                    <button mat-stroked-button color=\"primary\" (click)=\"tourneySettings()\">Tournament Settings</button> &nbsp;\n                    <button mat-stroked-button color=\"primary\" (click)=\"addPlayer()\">Add Player</button> &nbsp;\n                    \n                </p> -->\n      </div>\n      <!-- <router-outlet></router-outlet> -->\n      <app-participants [tournament]=\"tournament\" [participants]=\"participants\"\n        *ngIf=\"isParticipants && tournament.public_signups == 1\"></app-participants>\n      <app-participants [tournament]=\"tournament\" [participants]=\"participants\" [all]=\"true\"\n        *ngIf=\"isSignedUp && user && (tournament.owner == user.discordId || user['roleIds'].includes('1'))\">\n      </app-participants>\n      <app-map-pool [tournament]=\"tournament\" [staff]=\"staff\" *ngIf=\"isMapPool && tournament.has_map_pool == 1\">\n      </app-map-pool>\n      <app-bracket [tournament]=\"tournament\" *ngIf=\"isBracket && tournament.has_bracket == 1\"></app-bracket>\n      <app-qualifiers [tournament]=\"tournament\" *ngIf=\"isQuals\"></app-qualifiers>\n      <app-sessions [tournament]=\"tournament\" *ngIf=\"sessions\"></app-sessions>\n      <app-tournament-staff [tournament]=\"tournament\" *ngIf=\"staffPage\"></app-tournament-staff>\n    </div>\n  </div>\n</ng-template>\n","<h1 mat-dialog-title>Edit Tournament</h1>\n<form [formGroup]=\"tournamentForm\" novalidate (ngSubmit)=\"onSubmit()\">\n    <!-- Value: {{ tournamentForm.value | json }} -->\n\n\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Tournament Name\" formControlName=\"name\">\n    </mat-form-field>\n    <br>\n    <!-- <mat-form-field>\n        <mat-label>Start Date (local)</mat-label>\n        <input matInput [matDatepicker]=\"dp3\" readonly formControlName=\"date\" (focus)=\"dp3.open()\" (click)=\"dp3.open()\">\n        <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\n        <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\n    </mat-form-field>\n    <br>\n    <mat-form-field>\n        <mat-label>End Date (local)</mat-label>\n        <input matInput [matDatepicker]=\"dp1\" readonly formControlName=\"endDate\" (focus)=\"dp1.open()\" (click)=\"dp1.open()\">\n        <mat-datepicker-toggle matSuffix [for]=\"dp1\"></mat-datepicker-toggle>\n        <mat-datepicker #dp1 disabled=\"false\"></mat-datepicker>\n    </mat-form-field> -->\n    <mat-form-field>\n        <mat-label>Start Date (local)</mat-label>\n        <!-- <input matInput [matDatepicker]=\"dp3\" readonly formControlName=\"date\" (focus)=\"dp3.open()\" (click)=\"dp3.open()\">\n        <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\n        <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker> -->\n\n        <input matInput [ngxMatDatetimePicker]=\"picker\" readonly formControlName=\"date\" (focus)=\"picker.open()\" (click)=\"picker.open()\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <ngx-mat-datetime-picker #picker [showSeconds]=\"false\" [defaultTime]=\"[12,0,0]\">\n        </ngx-mat-datetime-picker>\n    </mat-form-field>\n    <br>\n    <mat-form-field>\n        <mat-label>End Date (local)</mat-label>\n        <!-- <input matInput [matDatepicker]=\"dp1\" readonly formControlName=\"endDate\" (focus)=\"dp1.open()\" (click)=\"dp1.open()\">\n        <mat-datepicker-toggle matSuffix [for]=\"dp1\"></mat-datepicker-toggle>\n        <mat-datepicker #dp1 disabled=\"false\"></mat-datepicker> -->\n        <input matInput [ngxMatDatetimePicker]=\"picker2\" readonly formControlName=\"endDate\" (focus)=\"picker2.open()\" (click)=\"picker2.open()\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n        <ngx-mat-datetime-picker #picker2 [showSeconds]=\"false\" [defaultTime]=\"[12,0,0]\">\n        </ngx-mat-datetime-picker>\n    </mat-form-field>\n\n    <br>\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Discord Link\" formControlName=\"discord\" pattern=\"^(?:https?:\\/\\/)?(?:www\\.)?discord\\.gg\\/([a-zA-Z0-9]+)($|\\?)\">\n        <mat-error *ngIf=\"discord.invalid && discord.touched\">\n            Please enter a valid link, Format: https://discord.gg/[code]\n        </mat-error>\n    </mat-form-field>\n\n    <br>\n    <mat-form-field *ngIf=\"users.length > 0\">\n        <mat-label>Owner</mat-label>\n        <input type=\"text\" matInput formControlName=\"owner\" [matAutocomplete]=\"auto\">\n        <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn.bind(this)\">\n            <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.discordId\">\n                {{option.name}}\n            </mat-option>\n        </mat-autocomplete>\n    </mat-form-field>\n\n\n    <br>\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Twitch Link\" formControlName=\"twitchLink\" pattern=\"^(?:https?:\\/\\/)?(?:www\\.)?twitch\\.tv\\/([a-z0-9_]+)($|\\?)\">\n        <mat-error *ngIf=\"twitch.invalid && (twitch.dirty || twitch.touched)\">\n            Please enter a valid twitch link, Format: https://twitch.tv/[channel name]\n        </mat-error>\n    </mat-form-field>\n\n    <br>\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Prize Pool\" formControlName=\"prize\">\n    </mat-form-field>\n\n    <br>\n\n    <label class=\"card-text\">Tournament Info:</label> <br><br>\n    <ckeditor formControlName=\"info\" [config]=\"{ extraPlugins: ['colorbutton', 'iframe']}\"></ckeditor>\n\n    <br>\n    <input type=\"file\" (change)=\"onFileChanged($event)\" #fileInput accept=\"image/png, image/jpeg, image/gif, image/webp, image/svg+xml, image/tiff\">\n    <br>\n    <mat-checkbox formControlName=\"is_mini\">\n        Is mini tournament?\n    </mat-checkbox>\n    <br>\n\n    <div mat-dialog-actions>\n        <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"tournamentForm.invalid || isSubmitted\">Update Tournament</button>\n    </div>\n</form>","<h1>Tournament Settings</h1>\n<form [formGroup]=\"settingsForm\" novalidate (ngSubmit)=\"onSubmit()\">\n  <!-- Value: {{ settingsForm.value | json }} -->\n\n  <!-- <br>\n    <br>\n\n\n    <ng-container >\n\n    </ng-container>\n    <br><br> -->\n\n\n  <mat-tab-group dynamicHeight>\n    <mat-tab label=\"General\">\n      <br>\n      <mat-checkbox formControlName=\"public_signups\">\n        Public Signups?\n      </mat-checkbox>\n      <br>\n      <mat-checkbox formControlName=\"public\">\n        Is public?\n      </mat-checkbox>\n      <br>\n      <mat-checkbox formControlName=\"has_quals\">\n        Has qualifiers?\n      </mat-checkbox>\n      <br>\n      <mat-checkbox formControlName=\"has_bracket\">\n        Has Bracket?\n      </mat-checkbox>\n      <br>\n      <mat-checkbox formControlName=\"has_map_pool\">\n        Has Map Pool?\n      </mat-checkbox>\n    </mat-tab>\n\n    <mat-tab label=\"Tournament Staging\">\n      <br>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>State</mat-label>\n        <mat-select formControlName=\"state\">\n          <mat-option value=\"awaiting_start\">Awaiting Start</mat-option>\n          <mat-option value=\"qualifiers\" *ngIf=\"quals.value == true\">Qualifiers</mat-option>\n          <mat-option value=\"main_stage\">Main Stage</mat-option>\n          <mat-option value=\"archived\">Archived</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <br>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Type</mat-label>\n        <mat-select formControlName=\"type\">\n          <mat-option value=\"single_elim\">Single Elimination</mat-option>\n          <mat-option value=\"double_elim\">Double Elimination</mat-option>\n          <mat-option value=\"round_robin\">Round Robin</mat-option>\n          <mat-option value=\"battle_royale\">Battle Royale</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <br>\n      <ng-container *ngIf=\"type.value == 'battle_royale'\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Player sort order</mat-label>\n          <mat-select formControlName=\"sort_method\">\n            <mat-option value=\"globalRank\">Global Rank</mat-option>\n            <mat-option value=\"date\">Sign Up Order</mat-option>\n            <mat-option value=\"random\">Random</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <br>\n        <mat-form-field class=\"fill\">\n          <input matInput placeholder=\"Number of players in tournament\" formControlName=\"standard_cutoff\">\n        </mat-form-field>\n      </ng-container>\n\n    </mat-tab>\n\n    <mat-tab label=\"Signup\">\n      <br>\n      <mat-checkbox formControlName=\"show_signups\">\n        Publicly show signups?\n      </mat-checkbox>\n      <br>\n      <mat-checkbox formControlName=\"comment_required\">\n        Comment Required?\n      </mat-checkbox>\n      <br><br>\n      <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Sign up Comment Label\" formControlName=\"signup_comment\">\n      </mat-form-field>\n      <br>\n      <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Whitelisted countries (country code seperated by commas e.g. au, gb, us)\"\n          formControlName=\"countries\">\n      </mat-form-field>\n    </mat-tab>\n\n    <mat-tab label=\"Qualifiers\" *ngIf=\"quals.value == true\">\n      <br>\n      <h2>Qualifiers Method</h2>\n\n      <mat-radio-group aria-label=\"Qualifiers Method\" class=\"radio\" formControlName=\"quals_method\">\n        <mat-radio-button class=\"radio-button\" value=\"ta_quals\">TA Qualifiers</mat-radio-button>\n        <mat-radio-button class=\"radio-button\" value=\"live_quals\">Live Qualifiers</mat-radio-button>\n      </mat-radio-group>\n      <ng-container *ngIf=\"taConnected && qualsMethod == 'ta_quals'\">\n        <p>\n          Qualifiers will be run through the Qualifiers tab in Tournament Assistant. The name of the even will be\n          \"{{data.tournament.name}} Qualifiers\". <br> The event will only be available in TA while the tournament\n          stage is set to Qualifiers.\n          <br>\n          <ng-container *ngIf=\"!qualsPool\">Before setting up qualifiers ensure that you have created a map pool\n            marked as the qualifiers pool. (*Note: only one pool can be marked as the qualifiers pool)\n          </ng-container>\n        </p>\n        <ng-container *ngIf=\"qualsPool\">\n          <br>\n          <mat-form-field class=\"fill\">\n            <input matInput placeholder=\"Cut Off point for qualifiers\" formControlName=\"quals_cutoff\">\n          </mat-form-field>\n          <br>\n          <mat-checkbox formControlName=\"show_quals\">\n            Show Qualifiers\n          </mat-checkbox>\n          <br>\n          <mat-checkbox [checked]=\"showQualsLimit\" (change)=\"showQualsLimit = !showQualsLimit\">\n            Limit Attempts\n          </mat-checkbox>\n          <br>\n          <ng-container *ngIf=\"showQualsLimit\">\n            *Note: 0 attempts means there is no limit.\n            <mat-form-field>\n              <input matInput placeholder=\"Number of attempts allowed\" formControlName=\"qual_attempts\">\n            </mat-form-field>\n          </ng-container>\n          <div style=\"margin-top:15px\">\n            <h3>TA Settings</h3>\n            <br>\n            <p>\n              Base Settings:\n            </p>\n            <div class=\"checkboxes\">\n              <mat-checkbox *ngFor=\"let setting of baseTaSettings\" [checked]=\"setting.isSelected\"\n                (change)=\"setting.isSelected = !setting.isSelected\">\n                {{setting.name}}\n              </mat-checkbox>\n            </div>\n            <br>\n\n            <p>\n              Maps\n            </p>\n            <section>\n              <details *ngFor=\"let song of qualsPool.songs\">\n                <summary>\n                  <img class=\"songImg\" src=\"https://scoresaber.com/imports/images/songs/{{song.hash}}.png\">\n                  <div>\n                    <a href=\"{{song.ssLink}}\" target=\"_blank\">\n                      {{song.name}} - {{song.songAuthor}}\n                    </a>\n                    <span class=\"mapperName\">[{{song.levelAuthor}}]</span>\n                  </div>\n                </summary>\n                <div *ngIf=\"song.characteristics\">\n                  <mat-form-field>\n                    <mat-label>Characteristic</mat-label>\n                    <mat-select [(value)]=\"song.selectedCharacteristic\">\n                      <mat-option *ngFor=\"let characteristic of song.characteristics\"\n                        value=\"{{characteristic.SerializedName}}\">{{characteristic.SerializedName}}\n                      </mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                  <mat-form-field *ngIf=\"song.selectedCharacteristic\">\n                    <mat-label>Difficulty</mat-label>\n                    <mat-select [(value)]=\"song.difficulty\">\n                      <mat-option *ngFor=\"let diff of getSongDiffs(song)\" value=\"{{diff}}\">\n                        {{diffString(diff)}}</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                  <br>\n                  <div style=\"display: flex; flex-direction: row;\">\n                    <div class=\"checkboxes\">\n                      <mat-checkbox *ngFor=\"let setting of song.mapOptions\" [checked]=\"setting.isSelected\"\n                        (change)=\"setting.isSelected = !setting.isSelected\">\n                        {{setting.name}}\n                      </mat-checkbox>\n                    </div>\n                    <div class=\"checkboxes\">\n                      <mat-checkbox *ngFor=\"let setting of song.pOptions\" [checked]=\"setting.isSelected\"\n                        (change)=\"setting.isSelected = !setting.isSelected\">\n                        {{setting.name}}\n                      </mat-checkbox>\n                    </div>\n                  </div>\n                </div>\n              </details>\n            </section>\n          </div>\n        </ng-container>\n      </ng-container>\n      <ng-container *ngIf=\"!taConnected && qualsMethod == 'ta_quals'\">\n        <p>\n          This requires a TA connetion, please set it up under the \"Tournament Assistant\" tab.\n        </p>\n      </ng-container>\n      <ng-container *ngIf=\"qualsMethod == 'live_quals'\">\n        <p>\n          Upon signup players will have to select one of sessions. If this tournament is connected to a TA server then\n          it will automatically grab those players scores when a qualifier map is played through the \"Tournament\"\n          section of TA (Not \"Qualifiers\"). For this to work player must ensure that they have the correct Score Saber\n          account linked and the scores must be completed within two hours of the session start time, outside these\n          times scores will not be recorded.\n        </p>\n        <p>\n          Current Sessions:\n        </p>\n        <p *ngIf=\"qualSessions.length == 0\">\n          There currently aren't any sessions.\n        </p>\n        <div class=\"sessions\">\n          <div class=\"session\" *ngFor=\"let session of qualSessions\">\n            <span>\n              {{displayTime(session.time)}}\n            </span>\n            <span>\n              {{session.allocated}}/{{session.limit}}\n            </span>\n            <span>\n              <button mat-button color=\"warn\" type=\"button\" (click)=\"removeSession(session)\">Remove</button>\n            </span>\n          </div>\n        </div>\n        <!-- <ul>\n          <li *ngFor=\"let session of qualSessions\">\n            {{session.time}} - {{session.cap}}\n          </li>\n        </ul> -->\n        <br>\n        <p>Create Session</p>\n        <mat-form-field style=\"width: 60%;\">\n          <mat-label>Start Date (local)</mat-label>\n\n          <input matInput [ngxMatDatetimePicker]=\"picker\" readonly [formControl]=\"newQualsTime\" (focus)=\"picker.open()\"\n            (click)=\"picker.open()\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n          <ngx-mat-datetime-picker #picker [showSeconds]=\"false\" [defaultTime]=\"[12,0,0]\">\n          </ngx-mat-datetime-picker>\n        </mat-form-field>\n        &nbsp;\n        <mat-form-field style=\"width: 20%;\">\n          <input matInput placeholder=\"Player Limit\" [value]=\"newQualsCap\" (change)=\"newQualsCap=$event.target.value\">\n        </mat-form-field>\n        &nbsp;\n        <button mat-stroked-button color=\"primary\" type=\"button\" (click)=\"createSession()\"\n          [disabled]=\"!newQualsTime.value\">Add session</button>\n      </ng-container>\n    </mat-tab>\n\n    <mat-tab label=\"Bracket\" *ngIf=\"bracket.value == true\">\n      <br>\n      <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Number of players in bracket\" formControlName=\"bracket_limit\">\n        <mat-error *ngIf=\"limit.invalid && limit.touched\">\n          Must be a multiple of 8\n        </mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Player sort order</mat-label>\n        <mat-select formControlName=\"bracket_sort_method\">\n          <mat-option value=\"globalRank\">Global Rank</mat-option>\n          <mat-option value=\"tournamentRank\">Tournament Rank</mat-option>\n          <mat-option value=\"seed\" *ngIf=\"quals.value == true\">Qualifiers Seed</mat-option>\n          <mat-option value=\"random\">Random</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </mat-tab>\n\n    <mat-tab label=\"Tournament Assistant\">\n      <br>\n      <p>\n        This currently only works with compatable TA servers, <br> TA server must also be configured with a\n        valid password.\n        <br>\n        <br> Current Status:\n        <span *ngIf=\"taConnected\" style=\"color: #89C057\">Connected</span>\n        <span *ngIf=\"!taConnected\" style=\"color: #B33A3A\">Not Connected</span>\n      </p>\n      <br>\n      <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Tournament Assistant URL:PORT\" formControlName=\"ta_url\">\n      </mat-form-field>\n      <br>\n      <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Tournament Assistant Password\" formControlName=\"ta_password\">\n      </mat-form-field>\n      <label>Overlay SVG</label><br>\n      <input type=\"file\" (change)=\"onFileChanged($event)\" #fileInput accept=\"image/svg+xml\">\n    </mat-tab>\n  </mat-tab-group>\n\n  <div mat-dialog-actions>\n    <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n    <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"settingsForm.invalid\">Update\n      Settings</button>\n  </div>\n</form>\n","<h1>Sign up</h1>\n<div *ngIf=\"loading\">\n  <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 100px;\">\n</div>\n<form *ngIf=\"!loading\" [formGroup]=\"signUpForm\" (ngSubmit)=\"onSubmit()\">\n  <!-- Value: {{ signUpForm.value | json }} -->\n  <br>\n  <mat-form-field>\n    <mat-label>{{signUpComment}}</mat-label>\n    <textarea matInput formControlName=\"comment\"></textarea>\n    <mat-error *ngIf=\"comment.invalid && comment.touched\">\n      This tournament requires you to provide: {{signUpComment}} in order to sign up\n    </mat-error>\n  </mat-form-field>\n\n  <div class=\"sessions\" *ngIf=\"data.tournament.quals_method == 'live_quals'\">\n    <div class=\"session\" *ngFor=\"let session of qualSessions\">\n      <span>\n        {{displayTime(session.time)}}\n      </span>\n      <span>\n        {{session.allocated}}/{{session.limit}}\n      </span>\n      <span>\n        <button mat-button color=\"accent\" type=\"button\" (click)=\"selectSession(session)\"\n          [disabled]=\"selectedSession === session || session.allocated >= session.limit\">{{selectedSession === session ? 'Selected' : 'Select'}}</button>\n      </span>\n    </div>\n  </div>\n\n  <div mat-dialog-actions>\n    <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n    <button mat-raised-button color=\"primary\" type=\"submit\"\n      [disabled]=\"signUpForm.invalid || (data.tournament.quals_method == 'live_quals' && !selectedSession)\">Sign\n      Up</button>\n  </div>\n</form>\n","<h1>Add Player</h1>\n<form [formGroup]=\"addPlayerForm\" novalidate (ngSubmit)=\"onSubmit()\">\n    <!-- Value: {{ addPlayerForm.value | json }} -->\n    <br>\n    <mat-form-field *ngIf=\"users.length > 0\">\n        <mat-label>User</mat-label>\n        <input type=\"text\" matInput formControlName=\"userId\" [matAutocomplete]=\"auto\">\n        <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn.bind(this)\">\n            <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.discordId\">\n                {{option.name}}\n            </mat-option>\n        </mat-autocomplete>\n    </mat-form-field>\n    <br>\n    <mat-form-field>\n        <mat-label>{{signUpComment}}</mat-label>\n        <textarea matInput formControlName=\"comment\"></textarea>\n        <mat-error *ngIf=\"comment.invalid && comment.touched\">\n            This tournament requires you to provide: {{signUpComment}} in order to sign up\n        </mat-error>\n    </mat-form-field>\n\n    <div mat-dialog-actions>\n        <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"addPlayerForm.invalid\">Sign Up</button>\n    </div>\n</form>","import { Component, OnInit, Inject, ViewEncapsulation } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AppComponent } from '../app.component';\nimport { Observable } from 'rxjs';\nimport { ITournament } from '../interfaces/tournament';\nimport { FormGroup, FormBuilder, Validators, FormControl, ValidationErrors } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { NotificationService } from '../services/toast.service';\nimport { map, startWith } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'app-tournaments',\n    templateUrl: './tournaments.component.html',\n    styleUrls: ['./tournaments.component.scss'],\n})\nexport class TournamentsComponent extends AppComponent implements OnInit {\n\n    title = \"BeatKhana!\";\n    private url = '/api/tournaments';\n    public tournaments = [];\n    loading = true;\n\n    linkOptions = {\n        target: {\n            url: \"_blank\"\n        }\n    }\n\n\n    ngOnInit(): void {\n        this.getTournaments()\n            .subscribe(data => {\n                data.sort(function (a, b) {\n                    return <any>new Date(a.startDate) - <any>new Date(b.startDate);\n                });\n                this.tournaments = data;\n                this.loading = false;\n            });\n        this.setTitle(this.title);\n        this.metaTags.defineTags('/', 'BeatKhana!', 'The one stop spot for all Beat Saber tournament information!', 'assets/images/icon/BeatKhana Logo RGB.png')\n    }\n\n    public getTournaments(): Observable<ITournament[]> {\n        return this.http.get<ITournament[]>(this.url);\n    }\n\n    openDialog() {\n        const dialog = this.dialog.open(newTournamentDialog, {\n            minWidth: '60vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n        });\n\n        dialog.afterClosed()\n            .subscribe(data => {\n                if(data) {\n                    this.getTournaments()\n                        .subscribe(data => {\n                            data.sort(function (a, b) {\n                                return <any>new Date(a.startDate) - <any>new Date(b.startDate);\n                            });\n                            this.tournaments = data;\n                            this.loading = false;\n                        });\n                }\n            });\n    }\n\n    archive(id: number) {\n        this.dialog.open(archiveTournamentDialog, {\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: { id: id }\n        });\n    }\n\n    public archiveTournament(id: number): Observable<ITournament[]> {\n        return this.http.put<ITournament[]>('/api/archiveTournament', { 'id': id });\n    }\n\n}\n\n@Component({\n    selector: 'newTournamentDialog',\n    templateUrl: './newTournamentDialog.html',\n})\nexport class newTournamentDialog implements OnInit {\n    tournamentForm: FormGroup;\n\n    users = [];\n    isSubmitted = false;\n\n    filteredOptions: Observable<any>;\n\n    constructor(private fb: FormBuilder, public http: HttpClient, private router: Router, private dialogRef: MatDialogRef<newTournamentDialog>, private notif: NotificationService) {\n        this.getUsers()\n            .subscribe(data => {\n                this.users = data;\n                this.filteredOptions = this.tournamentForm.valueChanges\n                    .pipe(\n                        startWith(''),\n                        map(value => typeof value === 'string' ? value : value.owner),\n                        map(owner => owner ? this._filter(owner) : this.users.slice())\n                    );\n            });\n    }\n\n    ngOnInit() {\n        this.tournamentForm = this.fb.group({\n            name: ['', [\n                Validators.required\n            ]],\n            date: ['', [\n                Validators.required\n            ]],\n            endDate: ['', [\n                Validators.required\n            ]],\n            discord: ['', [\n                Validators.required,\n                Validators.pattern('^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$')\n            ]],\n            owner: ['', [\n                Validators.required, this.requireMatch.bind(this)\n            ]],\n            twitchLink: ['', [\n                Validators.required\n            ]],\n            prize: '',\n            info: '',\n            image: ['', [\n                Validators.required\n            ]],\n            imgName: ['', [\n                Validators.required\n            ]],\n            is_mini: false,\n        });\n    }\n\n    private _filter(name: string) {\n        const filterValue = name.toLowerCase();\n\n        return this.users.filter(option => option.name.toLowerCase().indexOf(filterValue) === 0);\n    }\n\n    displayFn(id): string {\n        let user = this.users.find(x => x.discordId == id);\n        return user && user.name ? user.name : '';\n    }\n\n    private requireMatch(control: FormControl): ValidationErrors | null {\n        const selection: any = control.value;\n        if (!this.users.some(x => x.discordId == selection)) {\n            return { requireMatch: true };\n        }\n        return null;\n    }\n\n    get discord() {\n        return this.tournamentForm.get('discord');\n    }\n\n    get twitch() {\n        return this.tournamentForm.get('twitchLink');\n    }\n\n    public formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth()),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n\n        if (month.length < 2)\n            month = '0' + month;\n        if (day.length < 2)\n            day = '0' + day;\n\n        // return [year, month, day].join('-');\n        return new Date(Date.UTC(year, parseInt(month), parseInt(day)))\n    }\n\n    onSubmit() {\n        this.isSubmitted = true\n        this.tournamentForm.value.is_mini = +this.tournamentForm.value.is_mini;\n        // this.tournamentForm.value.date = this.formatDate(this.tournamentForm.value.date.toString())\n        // this.tournamentForm.value.endDate = this.formatDate(this.tournamentForm.value.endDate.toString())\n        \n        this.addTournament(this.tournamentForm.value)\n            .subscribe(data => {\n                this.notif.showSuccess('', 'Successfully created tournament');\n                this.dialogRef.close(true);\n            }, error => {\n                this.notif.showError('', 'Error creating tournament');\n                console.error(\"Error: \", error);\n                this.dialogRef.close(false);\n            });\n    }\n\n    getUsers(): Observable<any> {\n        return this.http.get('/api/users');\n    }\n\n    addTournament(tournament: ITournament): Observable<any> {\n        return this.http.post<any>('/api/tournament', tournament);\n    }\n\n    selectedFile: File;\n    base64: string;\n\n    onFileChanged(event) {\n        this.selectedFile = event.target.files[0];\n        this.tournamentForm.patchValue({ imgName: this.selectedFile.name });\n\n        let reader = new FileReader();\n        reader.readAsDataURL(this.selectedFile);\n        reader.onload = () => {\n            this.tournamentForm.patchValue({ image: reader.result });\n        };\n    }\n}\n\n@Component({\n    selector: 'archiveTournamentDialog',\n    templateUrl: './archiveTournamentDialog.html',\n})\nexport class archiveTournamentDialog implements OnInit {\n    archiveForm: FormGroup;\n    tournamentId: number;\n\n    constructor(private fb: FormBuilder, public http: HttpClient, private router: Router, @Inject(MAT_DIALOG_DATA) public data: any, private notif: NotificationService) { }\n\n    ngOnInit() {\n        this.archiveForm = this.fb.group({\n            first: ['', [\n                Validators.required\n            ]],\n            second: ['', [\n                Validators.required\n            ]],\n            third: ['', [\n                Validators.required\n            ]],\n            id: this.data.id\n        })\n    }\n\n    async onSubmit() {\n        try {\n            await this.http.put<any>('/api/archiveTournament', this.archiveForm.value).toPromise();\n            this.notif.showSuccess('', 'Successfully archived tournament');\n            this.router.navigateByUrl('/archive', { skipLocationChange: true }).then(() => {\n                this.router.navigate(['']);\n            });\n        } catch (error) {\n            console.error(\"Error: \", error);\n            this.notif.showError('', 'Error archiving tournament');\n        }\n    }\n}\n","<div class=\"container grid\">\n    <div *ngIf=\"loading else loaded\">\n        <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 100px;\">\n    </div>\n\n    <ng-template #loaded>\n        <div class=\"card tournamentCard\" *ngFor=\"let tournament of tournaments\">\n            <a [title]=\"tournament.name\" [routerLink]=\"['/tournament',tournament.tournamentId]\">\n                <!-- <img src=\"https://beatkhanas3.s3.us-east-1.amazonaws.com/{{tournament.image}}\" class=\"card-img-top\"> -->\n                <img src=\"/assets/images/{{tournament.image}}\" class=\"card-img-top\">\n                <h5 class=\"card-title\">\n                    {{tournament.name}}\n                </h5>\n            </a>\n            <p class=\"card-text\">\n                Date: {{tournament.startDate | date: 'd/MM/yy, h:mm a'}} <br> Prize: <span [innerHTML]=\"tournament.prize | linkify: linkOptions\"></span> <br>\n                <a href=\"{{tournament.discord}}\">Discord</a><br>\n                <a href=\"{{tournament.twitchLink}}\">Twitch</a><br>\n                <span *ngIf=\"tournament.public == 0\" style=\"color:rgb(209, 23, 23);font-style: italic;\">*Private</span>\n            </p>\n            <p *ngIf=\"user && (user['roleIds'].includes('1') || user['roleIds'].includes('2'))\" class=\"card-text\">\n                <button mat-button color=\"primary\" (click)=\"archive(tournament.tournamentId)\">Archive Tournament</button>\n            </p>\n        </div>\n\n        <div *ngIf=\"user && (user['roleIds'].includes('1') || user['roleIds'].includes('3'))\" class=\"card\">\n            <a (click)=\"openDialog()\" style=\"cursor: pointer;\">\n                <i class=\"fas fa-plus-circle card-img-top\" style=\"font-size: 200px;border: 2px solid #c8825a; text-align: center;\"></i>\n                <h5 class=\"card-title\">\n                    Add new tournament\n                </h5>\n            </a>\n        </div>\n        <h4 *ngIf=\"tournaments.length == 0\">There are currently no active tournaments please check back later</h4>\n    </ng-template>\n</div>","<h1 mat-dialog-title>Create New Tournament</h1>\n<form [formGroup]=\"tournamentForm\" novalidate (ngSubmit)=\"onSubmit()\">\n    <!-- Value: {{ tournamentForm.value | json }} -->\n\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Tournament Name\" formControlName=\"name\">\n    </mat-form-field>\n    <br>\n    <mat-form-field>\n        <mat-label>Start Date (local)</mat-label>\n        <!-- <input matInput [matDatepicker]=\"dp3\" readonly formControlName=\"date\" (focus)=\"dp3.open()\" (click)=\"dp3.open()\">\n        <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\n        <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker> -->\n\n        <input matInput [ngxMatDatetimePicker]=\"picker\" readonly formControlName=\"date\" (focus)=\"picker.open()\" (click)=\"picker.open()\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <ngx-mat-datetime-picker #picker [showSeconds]=\"false\" [defaultTime]=\"[12,0,0]\">\n        </ngx-mat-datetime-picker>\n    </mat-form-field>\n    <br>\n    <mat-form-field>\n        <mat-label>End Date (local)</mat-label>\n        <!-- <input matInput [matDatepicker]=\"dp1\" readonly formControlName=\"endDate\" (focus)=\"dp1.open()\" (click)=\"dp1.open()\">\n        <mat-datepicker-toggle matSuffix [for]=\"dp1\"></mat-datepicker-toggle>\n        <mat-datepicker #dp1 disabled=\"false\"></mat-datepicker> -->\n        <input matInput [ngxMatDatetimePicker]=\"picker2\" readonly formControlName=\"endDate\" (focus)=\"picker2.open()\" (click)=\"picker2.open()\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n        <ngx-mat-datetime-picker #picker2 [showSeconds]=\"false\" [defaultTime]=\"[12,0,0]\">\n        </ngx-mat-datetime-picker>\n    </mat-form-field>\n    <br>\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Discord Link\" formControlName=\"discord\" pattern=\"^(?:https?:\\/\\/)?(?:www\\.)?discord\\.gg\\/([a-zA-Z0-9]+)($|\\?)\">\n        <mat-error *ngIf=\"discord.invalid && discord.touched\">\n            Please enter a valid link, Format: https://discord.gg/[code]\n        </mat-error>\n    </mat-form-field>\n\n    <br>\n    <!-- <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Owner\" formControlName=\"owner\">\n    </mat-form-field> -->\n    <!-- <mat-form-field>\n        <mat-label>Owner</mat-label>\n        <mat-select formControlName=\"owner\">\n            <mat-option *ngFor=\"let user of users\" [value]=\"user.discordId\">\n                {{user.name}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field> -->\n    <mat-form-field *ngIf=\"users.length > 0\">\n        <mat-label>Owner</mat-label>\n        <input type=\"text\" matInput formControlName=\"owner\" [matAutocomplete]=\"auto\">\n        <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn.bind(this)\">\n            <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.discordId\">\n                {{option.name}}\n            </mat-option>\n        </mat-autocomplete>\n    </mat-form-field>\n\n    <br>\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Twitch Link\" formControlName=\"twitchLink\" pattern=\"^(?:https?:\\/\\/)?(?:www\\.)?twitch\\.tv\\/([a-z0-9_]+)($|\\?)\">\n        <mat-error *ngIf=\"twitch.invalid && (twitch.dirty || twitch.touched)\">\n            Please enter a valid twitch link, Format: https://twitch.tv/[channel name]\n        </mat-error>\n    </mat-form-field>\n\n    <br>\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Prize Pool\" formControlName=\"prize\">\n    </mat-form-field>\n\n    <br>\n    <!-- <mat-form-field class=\"fill\">\n        <textarea matInput placeholder=\"Tournament Info\" formControlName=\"info\"></textarea>\n    </mat-form-field> -->\n    <label class=\"card-text\">Tournament Info:</label> <br><br>\n    <ckeditor placeholder=\"Tournament Info\" formControlName=\"info\" [config]=\"{ extraPlugins: ['colorbutton', 'iframe']}\"></ckeditor>\n\n    <br>\n    <!-- <mat-form-field class=\"fill\"> -->\n    <!-- <input matInput placeholder=\"Image (soonTM)\" formControlName=\"image\" [disabled]=\"true\"> -->\n    <input type=\"file\" (change)=\"onFileChanged($event)\" #fileInput accept=\"image/png, image/jpeg, image/gif, image/webp, image/svg+xml, image/tiff\">\n    <br>\n    <p class=\"card-text\" style=\"font-size: small;\">*Will be rescaled to 550px wide</p>\n    <br>\n    <mat-checkbox formControlName=\"is_mini\">\n        Is mini tournament?\n    </mat-checkbox>\n    <br>\n\n    <div mat-dialog-actions>\n        <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"tournamentForm.invalid || isSubmitted\">Add\n            Tournament</button>\n    </div>\n</form>","<h1 mat-dialog-title>Archive Tournament</h1>\n<form [formGroup]=\"archiveForm\" novalidate (ngSubmit)=\"onSubmit()\">\n    <!-- Value: {{ archiveForm.value | json }} -->\n\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"First\" formControlName=\"first\">\n    </mat-form-field>\n    <br>\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Second\" formControlName=\"second\">\n    </mat-form-field>\n    <br>\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Third\" formControlName=\"third\">\n    </mat-form-field>\n\n\n    <div mat-dialog-actions>\n        <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n        <button mat-raised-button color=\"primary\" type=\"submit\" mat-dialog-close [disabled]=\"archiveForm.invalid\">Archive\n            Tournament</button>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { AppComponent } from '../app.component';\nimport { Observable } from 'rxjs';\nimport { AssignBadgesComponent } from '../_modals/assign-badges/assign-badges.component';\nimport { userAPI } from '../_models/user.model';\n\n@Component({\n    selector: 'app-user',\n    templateUrl: './user.component.html',\n    styleUrls: ['./user.component.scss']\n})\nexport class UserComponent extends AppComponent implements OnInit {\n\n    title = \" | BeatKhana!\";\n    private url = '/api/user/';\n    userId: string;\n    public curUser: userAPI = null;\n    loading = true;\n\n    ngOnInit(): void {\n        this.route.paramMap.subscribe(params => {\n            this.userId = params.get('id');\n            this.url += this.userId;\n            this.getUser()\n                .subscribe( data => {\n                    this.curUser = data;\n                    this.setTitle(this.curUser.name+\"'s Profile\" + this.title);\n                    if(this.curUser.avatar.includes('api') || this.curUser.avatar.includes('oculus')) {\n                        this.curUser.avatar = \"https://new.scoresaber.com\" + this.curUser.avatar;\n                    } else {\n                        this.curUser.avatar = `/${this.curUser.avatar}` + (this.curUser.avatar.substring(0, 2) == 'a_' ? '.gif' : '.webp');\n                        this.curUser.avatar = `https://cdn.discordapp.com/avatars/${this.curUser.discordId}${ this.curUser.avatar }`\n                    }\n                });\n        });\n    }\n\n    getUser(): Observable<any> {\n        return this.http.get(this.url);\n    }\n\n    editBadges() {\n        const dialog = this.dialog.open(AssignBadgesComponent, {\n            minWidth: '60vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: {\n                user: this.curUser,\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(async data => {\n                if (data) {\n                    this.curUser = <userAPI>await this.http.get(this.url).toPromise();\n                }\n            });\n    }\n\n}\n","<div *ngIf=\"!curUser else loaded\">\n    <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 100px;\">\n</div>\n\n<ng-template #loaded>\n    <div class=\"container\">\n        <div class=\"card noHover\">\n            <div class=\"card-body\">\n                <div class=\"right-container\">\n                    <img class=\"profileImg\" src=\"{{ curUser.avatar }}\" />\n                    <ng-container *ngIf=\"user && (user['roleIds'].includes('1') || user['roleIds'].includes('2'))\">\n                        <div class=\"staff\">\n                            <button mat-stroked-button color=\"primary\" (click)=\"editBadges()\">Edit Badges</button>\n                        </div>\n                    </ng-container>\n                </div>\n                <h1>\n                    {{ curUser.name }}\n                    <img class=\"countryImg\" src=\"\\assets/flags/{{curUser.country | uppercase}}.png\" alt=\"\">\n                </h1>\n                <div *ngIf=\"curUser.badges.length > 0\" class=\"badges\">\n                    <img *ngFor=\"let badge of curUser.badges\" src=\"assets/badges/{{badge.image}}.png\"\n                        alt=\"{{badge.description}}\" title=\"{{badge.description}}\">\n                </div>\n                <p class=\"card-text\">\n                    <b>Global Rank:</b> #{{curUser.globalRank}} <br>\n                    <b>Regional Rank:</b> #{{curUser.localRank}} <br>\n                    <a *ngIf=\"user.ssId\" href=\"https://scoresaber.com/u/{{curUser.ssId}}\" target=\"_blank\">Scoresaber</a>\n                    <br>\n                    <a href=\"https://twitch.tv/{{curUser.twitchName}}\" target=\"_blank\">Twitch</a>\n                </p>\n                <div style=\"float: left;\">\n                    <h4>Previous Tournaments</h4>\n                    <ul class=\"card-text\" style=\"margin-left:10px\">\n                        <li *ngFor=\"let tournament of curUser.tournaments\">{{tournament}}</li>\n                    </ul>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</ng-template>","import { DataSource } from '@angular/cdk/table';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Observable } from 'rxjs';\nimport { AppComponent } from '../app.component';\nimport { NotificationService } from '../services/toast.service';\n\n@Component({\n    selector: 'app-users',\n    templateUrl: './users.component.html',\n    styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent extends AppComponent implements OnInit {\n\n    users = [];\n    loading = true;\n\n    columnsToDisplay = ['name', 'ssLink', 'twitch', 'globalRank', 'localRank', 'country', 'tourneyRank', 'TR', 'pronoun', 'roleNames', 'edit']\n    dataSource: MatTableDataSource<any>;\n\n    // @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n    // @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n    private paginator: MatPaginator;\n    private sort: MatSort;\n\n    @ViewChild(MatSort) set matSort(ms: MatSort) {\n        this.sort = ms;\n        this.setDataSourceAttributes();\n    }\n\n    @ViewChild(MatPaginator) set matPaginator(mp: MatPaginator) {\n        this.paginator = mp;\n        this.setDataSourceAttributes();\n    }\n\n    ngOnInit(): void {\n        // this.dataSource = new MatTableDataSource();\n        // this.setUsers();\n        this.getUsers()\n            .subscribe(data => {\n                this.loading = false;\n                this.users = data;\n                this.dataSource = new MatTableDataSource(this.users);\n                this.setDataSourceAttributes();\n            });\n        this.setTitle('All Users | BeatKhana!');\n    }\n\n    getUsers(): Observable<any> {\n        return this.http.get('/api/users');\n    }\n\n    editUser(id) {\n        const dialog = this.dialog.open(editUserDialog, {\n            // height: '400px',\n            minWidth: '60vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: {\n                selUser: this.users.find(x => x.discordId == id),\n                curUser: this.user\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(data => {\n                if (data) {\n                    let i = this.users.findIndex(x => x.discordId == data.discordId);\n                    this.users[i] = { ...this.users[i], ...data };\n                    this.dataSource.data = this.users;\n                }\n            });\n    }\n\n    setDataSourceAttributes() {\n        if (!this.loading) {\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n        }\n    }\n\n    applyFilter(event: Event) {\n        const filterValue = (event.target as HTMLInputElement).value;\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n\n        if (this.dataSource.paginator) {\n            this.dataSource.paginator.firstPage();\n        }\n    }\n}\n\n@Component({\n    selector: 'editUserDialog',\n    templateUrl: './editUserDialog.html',\n    styleUrls: ['./users.component.scss']\n})\nexport class editUserDialog implements OnInit {\n\n    userForm: FormGroup;\n\n    pronouns = ['He/Him', 'She/Her', 'They/Them'];\n\n    userRoles = [\n        {\n            id: 1,\n            name: 'Admin'\n        },\n        {\n            id: 2,\n            name: 'Staff'\n        },\n        {\n            id: 3,\n            name: 'Tournament Host'\n        },\n        {\n            id: 4,\n            name: 'Coordinator'\n        },\n        {\n            id: 5,\n            name: 'Competitor'\n        },\n        {\n            id: 6,\n            name: 'Mini Tournament Team'\n        },\n    ]\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private dialogRef: MatDialogRef<editUserDialog>,\n        private notif: NotificationService\n    ) { }\n\n    roleIds = [];\n    minRole = 999;\n\n    ngOnInit() {\n        this.userForm = this.fb.group({\n            discordId: [this.data.selUser.discordId, [\n                Validators.required\n            ]],\n            ssId: [this.data.selUser.ssId, [\n                // Validators.required\n            ]],\n            name: [this.data.selUser.name, [\n                Validators.required\n            ]],\n            twitchName: [this.data.selUser.twitchName, [\n                Validators.required\n            ]],\n            pronoun: [this.data.selUser.pronoun, [\n                Validators.required\n            ]],\n            roleIds: this.fb.array([])\n        });\n        this.userForm.value.roleIds = [];\n        this.roleIds = this.data.selUser.roleIds != null ? this.data.selUser.roleIds.split(', ').map(x => +x) : [];\n        this.minRole = Math.min(...this.data.curUser.roleIds.map(x => +x));\n    }\n\n    async onSubmit() {\n        try {\n            await this.http.put('/api/user/' + this.userForm.value.discordId, this.userForm.value).toPromise();\n            let returnData = this.userForm.value;\n            if (this.userForm.value.roleIds.length == 0) {\n                this.userForm.value.roleIds = this.data.selUser.roleIds;\n            } else {\n                let roleNames = this.userForm.value.roleIds.map(x => this.userRoles[this.userRoles.findIndex(y => y.id == x)].name).join(', ');\n                this.userForm.value.roleIds = this.userForm.value.roleIds.join(', ')\n                returnData = { ...this.userForm.value, ...{ roleNames: roleNames } };\n            }\n            this.notif.showSuccess('', 'Successfully updated user');\n            this.dialogRef.close(returnData);\n        } catch (error) {\n            this.notif.showError('', 'Error updating user');\n            console.error(\"Error: \", error);\n            this.dialogRef.close(this.userForm.value);\n        }\n    }\n\n    updateRoleId(roleId) {\n        roleId = parseInt(roleId)\n        var i = this.roleIds.indexOf(roleId);\n        if (i === -1) {\n            this.roleIds.push(roleId);\n        } else {\n            this.roleIds.splice(i, 1);\n        }\n        this.userForm.value.roleIds = this.roleIds;\n        // console.log(this.roleIds)\n    }\n\n    updateUser(): Observable<any> {\n        return this.http.put('/api/user/' + this.userForm.value.discordId, this.userForm.value);\n    }\n}","<div *ngIf=\"loading else loaded\">\n    <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 100px;\">\n</div>\n\n<ng-template #loaded>\n    <div class=\"container\">\n        <div class=\"card noHover\">\n            <div class=\"card-body\">\n                <h1>All Users</h1>\n                <p class=\"card-text\">\n                    <mat-form-field>\n                        <mat-label>Search</mat-label>\n                        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"off\">\n                    </mat-form-field>\n                </p>\n                <table mat-table [dataSource]=\"dataSource\" class=\"card-text\" matSort matSortActive=\"name\"\n                    matSortDirection=\"asc\">\n                    <ng-container matColumnDef=\"name\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n                        <td mat-cell *matCellDef=\"let user\">\n                            <a [routerLink]=\"['/user', user.discordId]\">\n                                {{user.name}}\n                            </a>\n                            <!-- {{user.name}} -->\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"ssLink\">\n                        <th mat-header-cell *matHeaderCellDef>SS Link</th>\n                        <td mat-cell *matCellDef=\"let user\">\n                            <a *ngIf=\"user.ssId\" href=\"https://scoresaber.com/u/{{user.ssId}}\" target=\"_blank\">Link</a>\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"twitch\">\n                        <th mat-header-cell *matHeaderCellDef>Twitch Link</th>\n                        <td mat-cell *matCellDef=\"let user\">\n                            <a href=\"https://twitch.tv/{{user.twitchName}}\" target=\"_blank\">{{user.twitchName}}</a>\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"globalRank\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Global Rank</th>\n                        <td mat-cell *matCellDef=\"let user\">\n                            {{user.globalRank}}\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"localRank\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Regional Rank</th>\n                        <td mat-cell *matCellDef=\"let user\">\n                            {{user.localRank}}\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"country\">\n                        <th mat-header-cell *matHeaderCellDef>Country</th>\n                        <td mat-cell *matCellDef=\"let user\">\n                            {{user.country}} <img src=\"\\assets/flags/{{user.country}}.png\" alt=\"{{user.country}} Flag\"\n                                style=\"height: 20px;border: none;\">\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"tourneyRank\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Tournament Rank</th>\n                        <td mat-cell *matCellDef=\"let user\">\n                            {{user.tourneyRank}}\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"TR\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>TR</th>\n                        <td mat-cell *matCellDef=\"let user\">\n                            {{user.TR}}\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"pronoun\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Pronoun</th>\n                        <td mat-cell *matCellDef=\"let user\">\n                            {{user.pronoun}}\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"roleNames\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Roles</th>\n                        <td mat-cell *matCellDef=\"let user\">\n                            {{user.roleNames}}\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"edit\">\n                        <th mat-header-cell *matHeaderCellDef></th>\n                        <td mat-cell *matCellDef=\"let user\">\n                            <button mat-button color=\"primary\" (click)=\"editUser(user.discordId)\">Edit</button>\n                        </td>\n                    </ng-container>\n\n                    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n                    <tr mat-row *matRowDef=\"let myRowData; columns: columnsToDisplay\"></tr>\n                </table>\n                <mat-paginator [pageSize]=\"25\" [pageSizeOptions]=\"[10, 25, 50, 100]\" showFirstLastButtons>\n                </mat-paginator>\n            </div>\n        </div>\n    </div>\n</ng-template>","<h1 mat-dialog-title>Edit {{data.selUser.name}}</h1>\n<form [formGroup]=\"userForm\" novalidate (ngSubmit)=\"onSubmit()\">\n    <!-- Value: {{ userForm.value | json }} -->\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Name\" formControlName=\"name\">\n    </mat-form-field>\n    <br>\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Score Saber ID\" formControlName=\"ssId\">\n    </mat-form-field>\n    <br>\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Twitch Name\" formControlName=\"twitchName\">\n    </mat-form-field>\n    <br>\n    <label id=\"pronounlabel\">Preferred Pronoun:</label>\n    <mat-radio-group aria-labelledby=\"pronounlabel\" formControlName=\"pronoun\" class=\"pronounRadio\">\n        <mat-radio-button *ngFor=\"let pronoun of pronouns\" class=\"radio-button\" value=\"{{pronoun}}\">{{pronoun}}\n        </mat-radio-button>\n        <mat-radio-button class=\"radio-button\" value=\"Other\">Other</mat-radio-button>\n        <mat-form-field style=\"margin-top: 5px;\" class=\"fill\" *ngIf=\"pronouns.indexOf(userForm.value.pronoun) == -1\">\n            <input matInput placeholder=\"Preferred Pronoun\" formControlName=\"pronoun\">\n        </mat-form-field>\n    </mat-radio-group>\n    <br>\n    <label>Roles:</label>\n    <div class=\"roles\">\n        <mat-checkbox *ngFor=\"let role of userRoles\" (change)=\"updateRoleId(role.id)\" [checked]=\"roleIds.includes(+role.id)\" [disabled]=\"role.id <= minRole\">\n            {{role.name}}\n        </mat-checkbox>\n    </div>\n\n    <div mat-dialog-actions>\n        <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"userForm.invalid\">Update user</button>\n    </div>\n</form>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}