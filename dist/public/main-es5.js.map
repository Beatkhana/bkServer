{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_modals/add-player/add-player.component.ts","webpack:///src/app/_modals/add-player/add-player.component.html","webpack:///src/app/_modals/assign-badges/assign-badges.component.html","webpack:///src/app/_modals/assign-badges/assign-badges.component.ts","webpack:///src/app/_modals/assign-session/assign-session.component.html","webpack:///src/app/_modals/assign-session/assign-session.component.ts","webpack:///src/app/_modals/create-badge/create-badge.component.ts","webpack:///src/app/_modals/create-badge/create-badge.component.html","webpack:///src/app/_modals/edit-bracket-match/edit-bracket-match.component.html","webpack:///src/app/_modals/edit-bracket-match/edit-bracket-match.component.ts","webpack:///src/app/_modals/edit-staff/edit-staff.component.html","webpack:///src/app/_modals/edit-staff/edit-staff.component.ts","webpack:///src/app/_models/ta/event.ts","webpack:///src/app/_models/ta/forwardingPacket.ts","webpack:///src/app/_models/ta/gameplayModifiers.ts","webpack:///src/app/_models/ta/match.ts","webpack:///src/app/_models/ta/playerSpecificSettnigs.ts","webpack:///src/app/_models/ta/qualifierEvent.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/archive/archive.component.html","webpack:///src/app/archive/archive.component.ts","webpack:///src/app/awards2020/awards2020.component.ts","webpack:///src/app/awards2020/awards2020.component.html","webpack:///src/app/badges/badges.component.html","webpack:///src/app/badges/badges.component.ts","webpack:///src/app/bracket/bracket.component.html","webpack:///src/app/bracket/updateMatchDialog.html","webpack:///src/app/bracket/generateBracketDialog.html","webpack:///src/app/bracket/bracket.component.ts","webpack:///src/app/calendar/calendar.component.html","webpack:///src/app/calendar/calendar.component.ts","webpack:///src/app/confirm-dialog/confirm-dialog.component.ts","webpack:///src/app/confirm-dialog/confirm-dialog.component.html","webpack:///src/app/guards/auth-guard.guard.ts","webpack:///src/app/logs/logs.component.ts","webpack:///src/app/logs/logs.component.html","webpack:///src/app/map-pool/map-pool.component.html","webpack:///src/app/map-pool/addSongDialog.html","webpack:///src/app/map-pool/map-pool.component.ts","webpack:///src/app/map-pool/createPoolDialog.html","webpack:///src/app/mini-tourneys/mini-tourneys.component.ts","webpack:///src/app/mini-tourneys/mini-tourneys.component.html","webpack:///src/app/overlay-controller/overlay-controller.component.ts","webpack:///src/app/overlay-controller/overlay-controller.component.html","webpack:///src/app/overlay/overlay.component.ts","webpack:///src/app/overlay/overlay.component.html","webpack:///src/app/participants/participants.component.html","webpack:///src/app/participants/editCommentDialog.html","webpack:///src/app/participants/participants.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/profile/editProfileDialog.html","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/qualifiers/qualifiers.component.html","webpack:///src/app/qualifiers/qualifiers.component.ts","webpack:///src/app/rankings/rankings.component.ts","webpack:///src/app/rankings/rankings.component.html","webpack:///src/app/rules/rules.component.ts","webpack:///src/app/rules/rules.component.html","webpack:///src/app/services/meta-tag.service.ts","webpack:///src/app/services/toast.service.ts","webpack:///src/app/services/user-auth.service.ts","webpack:///src/app/sessions/sessions.component.html","webpack:///src/app/sessions/sessions.component.ts","webpack:///src/app/sign-up/sign-up.component.html","webpack:///src/app/sign-up/sign-up.component.ts","webpack:///src/app/ta/ta.component.ts","webpack:///src/app/ta/ta.component.html","webpack:///src/app/team/team.component.ts","webpack:///src/app/team/team.component.html","webpack:///src/app/tournament-staff/tournament-staff.component.html","webpack:///src/app/tournament-staff/tournament-staff.component.ts","webpack:///src/app/tournament/tournament.component.html","webpack:///src/app/tournament/editTournament.html","webpack:///src/app/tournament/tournamentSettingsDialog.html","webpack:///src/app/tournament/signUpDialog.html","webpack:///src/app/tournament/addPlayerDialog.html","webpack:///src/app/tournament/tournament.component.ts","webpack:///src/app/tournaments/tournaments.component.html","webpack:///src/app/tournaments/newTournamentDialog.html","webpack:///src/app/tournaments/tournaments.component.ts","webpack:///src/app/tournaments/archiveTournamentDialog.html","webpack:///src/app/user/user.component.html","webpack:///src/app/user/user.component.ts","webpack:///src/app/users/users.component.html","webpack:///src/app/users/editUserDialog.html","webpack:///src/app/users/users.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddPlayerComponent","selector","templateUrl","styleUrls","AssignBadgesComponent","fb","http","data","dialogRef","notif","badgeIds","btnDisabled","get","toPromise","badges","user","map","x","index","indexOf","splice","push","put","discordId","showSuccess","close","showError","onSubmit","AssignSessionComponent","loading","selectedSession","session","tournament","tournamentId","qualSessions","console","log","post","sessionId","showInfo","error","dateString","Date","toLocaleString","update","CreateBadgeComponent","title","badgeId","badgeForm","group","image","description","required","imgName","value","event","selectedFile","target","files","patchValue","name","reader","FileReader","readAsDataURL","onload","result","onFileChanged","EditBracketMatchComponent","participants","player","option","$val","filteredOptions","_filter","filterValue","toLowerCase","filter","find","postData","matchId","p1","p2","updateFilter","updatePlayers","EditStaffComponent","roles","role","lastVal","users","staff","findIndex","roleId","includes","userIndex","roleIndex","userId","roleIds","usrIndex","tmp","updateLastEvent","TAEvent","EventType","PacketType","GameplayModifiers","GameOptions","BeatmapDifficulty","PlayerOptions","EventSettings","routes","path","component","children","canActivate","AppRoutingModule","forRoot","imports","AppComponent","titleService","route","router","dialog","sanitizer","metaTags","cd","userS","updatedUser","showDefault","burgerActive","events","subscribe","updateUser","forEach","url","defineTags","curUser","newTitle","setTitle","AppModule","maxOpened","autoDismiss","newestOnTop","preventDuplicates","countDuplicates","resetTimeoutOnDuplicate","declarations","providers","bootstrap","ArchiveComponent","tournaments","page","limit","secondLoading","allRecords","getTournaments","sort","a","b","startDate","window","pageYOffset","document","getElementsByClassName","scrollHeight","length","concat","Awards2020Component","el","scrollIntoView","behavior","scroll","BadgesComponent","displayedColumns","open","minWidth","maxHeight","maxWidth","afterClosed","badge","width","cancelText","confirmText","message","BracketComponent","ws","location","protocol","host","bracketData","isAuth","btnText","matches","winnersMatches","losersMatches","intervalIteration","initSettings","node","createElement","src","type","getElementsByTagName","appendChild","msg","bracketMatch","updateDrawnMatch","err","next","setTournament","clearInterval","interval","complete","matchesData","usr","owner","generateMatches","generateLabels","matchElements","i","element","addEventListener","updateMatch","getAttribute","generateBracketDialog","updateBracket","updateMatchDialog","panelClass","matchElem","getElementById","querySelector","innerHTML","status","style","display","score","classList","remove","add","toString","setAttribute","avatar","lineElem","querySelectorAll","round","matchNum","line","bye","bracketMatches","slider","isDown","startX","scrollLeft","startY","scrollDown","cursor","pageX","offsetLeft","pageY","offsetTop","scrollTop","preventDefault","walk","y","walk2","svgMain","singleMatchRound","iterator","Object","key","height","gRound","createElementNS","j","match","svgMatch","createSvgMatch","loserMatchCounter","gLines","gHeaders","multi","startPos","curY","curX","multi2","startPos2","nextY","Math","floor","nextX","xDist","yDist","matchLine","dataset","undefined","roundLabel","labelRect","labelText","outerHTML","elem","roundElem","losers","clip1","clip2","nameClip1","nameClip2","noAnim","p1Name","p2Name","p1Class","p2Class","firstRoundCount","maxRound","max","apply","minRound","min","matchCounter","elements","contains","curMatch","p1_prereq_identifier","prereqMatch","p1Loser","p2_prereq_identifier","p2Loser","isTheatre","theatreBtn","bestOf","best_of","scoreForm","p1Score","p2Score","setTimeout","options1","channel","twitch","theme","player1","Twitch","Player","setVolume","options2","player2","updateSize","updateScore","matchTime","theatre","hiddenUsers","userNameInput","getUsers","bracketGenForm","_parent","custom","manual","array","players","replace","split","customPlayers","bracketGen","CalendarComponent","monthNames","curDate","curMonth","curYear","days","startDay","dates","displayEvents","d","keyA","keyB","fillCalendar","updateDates","updateEvents","getDates","color","random","substr","date","eventStartDate","eventEndDate","endDate","monthStart","getFullYear","getMonth","margin","parseInt","eventDate","getTime","top","timeDiff","diff","start","getDate","end","row","finRow","curRow","dayDiff","ceil","numRows","getDaysInMonth","getYear","tempDate","getDay","todayDate","today","col","change","setMonth","month","year","n","Array","changeDate","ConfirmDialogComponent","mdDialogRef","cancel","confirm","AuthGuardGuard","state","pipe","providedIn","LogsComponent","logs","resultsLength","isLoadingResults","columnsToDisplay","getLogs","time","sortChange","paginator","pageIndex","total","MapPoolComponent","isAuthorised","curPoolId","curPoolLive","poolsLen","mapPools","poolValues","poolStaff","some","getPools","values","bypassSecurityTrustUrl","navigator","clipboard","writeText","songId","info","updatePools","createPoolDialog","edit","tab","live","curSongs","songs","hash","playlist","playlistTitle","poolName","playlistAuthor","playlistDescription","encodeURIComponent","JSON","stringify","dataStr","downloadAnchorNode","body","click","addSongDialog","mapPool","dialogTitle","buttonMessage","isSubmitted","newPoolForm","poolId","is_qualifiers","beatsaver","newSongForm","poolIds","minLength","ssLink","source","checked","updateVal","MiniTourneysComponent","OverlayControllerComponent","bkWS","play","pause","OverlayComponent","viewSeason","seasons","canvas","params","stage","tourneyId","getMatchData","initDisplaySettings","matchData","updateDisplayMatch","overlay","command","TA","handlePacket","fetch","r","text","bind","packet","Type","ForwardingPacket","forward","SpecificPacket","Event","PlayerUpdated","playerInfo","ChangedObject","UserId","ssId","curPlayer","animateValue","soreInfo","Score","Accuracy","Combo","property","duration","startTimestamp","step","timestamp","progress","scoreUpdate","requestAnimationFrame","scoreInfo","liveScore","liveAcc","liveCombo","Number","EPSILON","StreamDelayMs","settings","ta_url","draw","now","setAttributeNS","country","toUpperCase","pointIcons","point","stream1","href1","img1","con1","div1","insertAfter","newNode","referenceNode","parentNode","insertBefore","nextSibling","ParticipantsComponent","all","editMode","linkOptions","updateParticipants","substring","nonQualified","seed","sortParticipants","userSession","royaleSort","seedSort","sort_method","orderGlobal","dateSort","globalRank","participantId","position","editCommentDialog","getParticipants","detectChanges","every","previousContainer","container","currentIndex","previousIndex","item","signUpComment","signup_comment","signUpForm","comment","comment_required","controls","setValidators","updateValueAndValidity","ProfileComponent","editProfileDialog","selUser","pronouns","userForm","twitchName","pronoun","QualifiersComponent","qualsScores","pools","leaderboards","qualsPool","pool","getQuals","res","scores","songHash","numNotes","percentage","toFixed","leaderboard","sumA","sumProperty","sumAPer","avgPercentage","isNaN","scoreSum","sumB","sumBPer","quals_cutoff","cutoff","items","prop","reduce","RankingsComponent","getRanks","member","RulesComponent","MetaTagService","metaService","urlMeta","titleMeta","descriptionMeta","imageMeta","typeMeta","mainUrl","imageUrl","tags","MetaTag","setTags","siteTag","tag","isFacebook","getTag","updateTag","content","NotificationService","toastr","config","closeButton","timeOut","positionClass","tapToDismiss","success","warning","UserAuthService","request","getUser","SessionsComponent","SignUpComponent","scoreSaber","href","TaComponent","TeamComponent","team","displayRoles","label","getTeam","minRole","TournamentStaffComponent","join","TournamentComponent","isInfo","isMapPool","isBracket","isParticipants","canSignup","isQuals","isSignedUp","staffPage","sessions","isParticipant","participantData","countries","paramMap","main","val","public_signups","signedUp","safeInfo","bypassSecurityTrustHtml","editTournament","tournamentSettingsDialog","addPlayerDialog","navigate","signUpDialog","encapsulation","None","tournamentForm","discord","requireMatch","twitchLink","prize","is_mini","valueChanges","slice","toISOString","updateTournament","flag","parse","control","selection","taConnected","baseTaSettings","showQualsLimit","base64","newQualSessions","newQualsTime","newQualsCap","settingsForm","show_signups","has_bracket","has_map_pool","bracket_sort_method","bracket_limit","pattern","show_quals","has_quals","standard_cutoff","ta_password","qual_attempts","ta_event_flags","quals_method","Self","Name","modifier","trim","isSelected","song","mapOptions","flags","pOptions","playerOptions","songData","characteristics","curVersion","versions","createdAt","diffs","characteristic","curCharacteristic","SerializedName","titleCase","difficulty","Difficulties","str","splitStr","charAt","selectedCharacteristic","quals","settingsId","img","updateSettings","readAsText","allocated","addPlayerForm","TournamentsComponent","newTournamentDialog","archiveTournamentDialog","day","UTC","addTournament","archiveForm","first","second","third","navigateByUrl","skipLocationChange","UserComponent","UsersComponent","dataSource","setDataSourceAttributes","editUserDialog","firstPage","ms","mp","userRoles","returnData","roleNames","environment","production","bootstrapModule"],"mappings":"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;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAAI;;AAA6C;;AACjkC;;AACtC;;AACI;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAI;;AAAiB;;AACrB;;AACI;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAI;;AAAe;;AACnqC;;AACzgB;;AACpqC;;AACzgB;;AACpB;;AACI;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAI;;AAAyC;;AAC7C;;AACI;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAI;;AAAuB;;AAC3B;;AACI;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAI;;AAAqC;;AACzC;;AACI;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAI;;AAAwB;;AAC5B;;AACI;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAI;;AAAa;;AACjB;;AACI;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAI;;AAAW;;AACf;;AACI;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAI;;AAA4B;;AAChC;;AACI;;AACI;;AAEI;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAEI;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAEI;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAEI;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAEI;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAEI;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAEI;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAEI;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AAEI;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAI;;AAAoB;;AACxB;;AACI;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAI;;AAA2B;;AAC/B;;AACI;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAI;;AAAY;;AAChB;;AACI;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAI;;AAAe;;AACnB;;AACI;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAI;;AAAW;;AACf;;AACI;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAI;;AAAgB;;AACpB;;AACI;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAI;;AAAgB;;AACpB;;AACI;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAI;;AAAQ;;AACZ;;AACI;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAI;;AAAqB;;AACzB;;AACI;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAI;;AAAU;;AACd;;AACI;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AAAI;;AAAU;;AACd;;AACI;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AACJ;;AACJ;;AACJ;;AACA;;AAC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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add-player',\n  templateUrl: './add-player.component.html',\n  styleUrls: ['./add-player.component.scss']\n})\nexport class AddPlayerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>add-player works!</p>\n","<h1>Edit User Badges</h1>\n<label>Badges:</label>\n<div class=\"badges\">\n    <mat-checkbox *ngFor=\"let badge of badges\" [checked]=\"badgeIds.includes(badge.id)\" (change)=\"updateBadge(badge.id)\">\n        <img src=\"/assets/badges/{{badge.image}}.png\" alt=\"{{badge.description}}\" title=\"{{badge.description}}\">\n    </mat-checkbox>\n</div>\n\n<div mat-dialog-actions>\n    <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n    <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"btnDisabled\" (click)=\"onSubmit()\">Update Badges</button>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { NotificationService } from 'src/app/services/toast.service';\nimport { editUserDialog } from 'src/app/users/users.component';\nimport { badge } from 'src/app/_models/badge.model';\nimport { userAPI } from 'src/app/_models/user.model';\n\n@Component({\n    selector: 'app-assign-badges',\n    templateUrl: './assign-badges.component.html',\n    styleUrls: ['./assign-badges.component.scss']\n})\nexport class AssignBadgesComponent implements OnInit {\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        @Inject(MAT_DIALOG_DATA) public data: {user: userAPI},\n        private dialogRef: MatDialogRef<editUserDialog>,\n        private notif: NotificationService\n    ) { }\n\n    badges: badge[];\n    badgeIds = [];\n\n    btnDisabled = false;\n\n    async ngOnInit() {\n        this.badges = <badge[]>await this.http.get(`/api/badges`).toPromise();\n        this.badgeIds = this.data.user.badges.map(x => x.id);\n    }\n\n    updateBadge(id) {\n        let index = this.badgeIds.indexOf(id);\n        if (index > -1) {\n            this.badgeIds.splice(index, 1)\n        } else {\n            this.badgeIds.push(id);\n        }\n    }\n\n    async onSubmit() {\n        this.btnDisabled = true;\n        try {\n            await this.http.put(`/api/user/${this.data.user.discordId}/badges`, this.badgeIds).toPromise();\n            this.notif.showSuccess('', 'Successfully Updated Badges');\n            this.dialogRef.close(true);\n        } catch (error) {\n            this.notif.showError('', 'Error Updating Badges');\n            this.dialogRef.close(false);\n        }\n    }\n\n}\n","<h1>Qualifiers Session</h1>\n<div *ngIf=\"loading\">\n  <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n          margin-left: auto;\n          margin-right: auto;\n          width: 100px;\">\n</div>\n<div class=\"sessions\" *ngIf=\"!loading\">\n  <div class=\"session\" *ngFor=\"let session of qualSessions\">\n    <span>\n      {{displayTime(session.time)}}\n    </span>\n    <span>\n      {{session.allocated}}/{{session.limit}}\n    </span>\n    <span>\n      <button mat-button color=\"accent\" type=\"button\" (click)=\"selectSession(session)\"\n        [disabled]=\"selectedSession.id == session.id || session.allocated >= session.limit\">{{selectedSession.id == session.id ? 'Selected' : 'Select'}}</button>\n    </span>\n  </div>\n</div>\n<div mat-dialog-actions>\n  <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n  <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"update()\"\n    [disabled]=\"!selectedSession\">Update</button>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { NotificationService } from 'src/app/services/toast.service';\nimport { qualifierSession } from 'src/app/_models/qualifiers';\n\n@Component({\n    selector: 'app-assign-session',\n    templateUrl: './assign-session.component.html',\n    styleUrls: ['./assign-session.component.scss']\n})\nexport class AssignSessionComponent implements OnInit {\n\n    constructor(\n        public http: HttpClient,\n        private dialogRef: MatDialogRef<AssignSessionComponent>,\n        private notif: NotificationService,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n    ) {\n\n    }\n\n    qualSessions: qualifierSession[];\n    selectedSession: qualifierSession;\n\n    loading = false;\n\n    async ngOnInit(): Promise<void> {\n        this.loading = true;\n        this.selectedSession = this.data.session;\n        this.qualSessions = await this.http.get<qualifierSession[]>(`/api/tournament/${this.data.tournament.tournamentId}/qualifiers/sessions`).toPromise();\n        console.log(this.selectedSession);\n        this.loading = false;\n    }\n\n    async update() {\n        this.loading = true;\n        try {\n            await this.http.post(`/api/tournament/${this.data.tournament.tournamentId}/qualifiers/sessions/assign`, { sessionId: this.selectedSession.id }).toPromise();\n            this.notif.showInfo('', 'Successfully Updated Session');\n            this.dialogRef.close(true);\n        } catch (error) {\n            console.error('Error', error)\n            this.notif.showError('', 'Error Updating Session');\n            this.dialogRef.close(false);\n        }\n    }\n\n    selectSession(session: qualifierSession) {\n        this.selectedSession = session;\n    }\n\n    displayTime(dateString: string) {\n        return new Date(dateString).toLocaleString();\n    }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { NotificationService } from 'src/app/services/toast.service';\nimport { editUserDialog } from 'src/app/users/users.component';\n\n@Component({\n    selector: 'app-create-badge',\n    templateUrl: './create-badge.component.html',\n    styleUrls: ['./create-badge.component.scss']\n})\nexport class CreateBadgeComponent implements OnInit {\n\n    badgeForm: FormGroup;\n\n    loading = false;\n\n    badgeId;\n\n    title = 'Create Badge';\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private dialogRef: MatDialogRef<editUserDialog>,\n        private notif: NotificationService\n    ) { }\n\n    ngOnInit(): void {\n        if(this.data) {\n            this.title = 'Update Badge';\n            this.badgeId = this.data.id;\n            this.badgeForm = this.fb.group({\n                image: '',\n                description: [this.data.description, [\n                    Validators.required\n                ]],\n                imgName: [this.data.image, [\n                    Validators.required\n                ]]\n            });\n        } else {\n            this.badgeForm = this.fb.group({\n                image: ['', [\n                    Validators.required\n                ]],\n                description: ['', [\n                    Validators.required\n                ]],\n                imgName: ['', [\n                    Validators.required\n                ]]\n            });\n        }\n    }\n\n    async onSubmit() {\n        this.loading = true;\n        try {\n            if(this.badgeId) {\n                await this.http.put(`/api/badge/${this.badgeId}`, this.badgeForm.value).toPromise();\n                this.notif.showSuccess('', 'Successfully created badge');\n                this.dialogRef.close(false);\n            } else {\n                await this.http.post(`/api/badge`, this.badgeForm.value).toPromise();\n                this.notif.showSuccess('', 'Successfully created badge');\n                this.dialogRef.close(false);\n            }\n        } catch (error) {\n            console.error(\"Error: \", error);\n            this.notif.showError('', 'Error creating badge');\n            this.dialogRef.close(false);\n        }\n    }\n\n    onFileChanged(event) {\n        let selectedFile = event.target.files[0];\n        this.badgeForm.patchValue({ imgName: selectedFile.name });\n\n        let reader = new FileReader();\n        reader.readAsDataURL(selectedFile);\n        reader.onload = () => {\n            this.badgeForm.patchValue({ image: reader.result });\n        };\n    }\n\n}\n","<h3>{{title}}</h3>\n<form [formGroup]=\"badgeForm\" (ngSubmit)=\"onSubmit()\">\n    <!-- Value: {{ userForm.value | json }} -->\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Description\" formControlName=\"description\">\n    </mat-form-field>\n    <br>\n    <input type=\"file\" (change)=\"onFileChanged($event)\" #fileInput accept=\"image/png, image/jpeg, image/gif, image/webp, image/svg+xml, image/tiff\">\n    <br>\n    <p class=\"card-text\" style=\"font-size: small;\">*Will be rescaled to 80px by 30px</p>\n\n    <div mat-dialog-actions>\n        <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"badgeForm.invalid || loading\">{{title}}</button>\n    </div>\n</form>","<h3>Update Bracket Match Players</h3>\n\n<div class=\"addUser\">\n  <mat-form-field>\n    <mat-label>Player 1</mat-label>\n    <input type=\"text\" (input)=\"updateFilter($event.target.value)\" matInput [matAutocomplete]=\"auto\"\n      [value]=\"data.p1.id\">\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"updatePlayers($event, 'p1')\"\n      [displayWith]=\"displayFn.bind(this)\">\n      <mat-option *ngFor=\"let option of filteredOptions\" [value]=\"option.discordId\">\n        {{option.name}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>Player 2</mat-label>\n    <input type=\"text\" (input)=\"updateFilter($event.target.value)\" matInput [matAutocomplete]=\"auto2\"\n      [value]=\"data.p2.id\">\n    <mat-autocomplete #auto2=\"matAutocomplete\" (optionSelected)=\"updatePlayers($event, 'p2')\"\n      [displayWith]=\"displayFn.bind(this)\">\n      <mat-option *ngFor=\"let option of filteredOptions\" [value]=\"option.discordId\">\n        {{option.name}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <!-- <button mat-stroked-button color=\"accent\">Add User</button> &nbsp; -->\n</div>\n<br>\n<hr>\n<br>\n<button mat-raised-button color=\"warn\" mat-dialog-close>Close</button> &nbsp;\n<button mat-raised-button color=\"primary\" (click)=\"update()\">Save Changes</button> &nbsp;\n","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { NotificationService } from 'src/app/services/toast.service';\nimport { editUserDialog } from 'src/app/users/users.component';\n\n@Component({\n    selector: 'app-edit-bracket-match',\n    templateUrl: './edit-bracket-match.component.html',\n    styleUrls: ['./edit-bracket-match.component.scss']\n})\nexport class EditBracketMatchComponent implements OnInit {\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private http: HttpClient,\n        private dialogRef: MatDialogRef<editUserDialog>,\n        private notif: NotificationService\n    ) { }\n\n    participants: any[];\n\n    async ngOnInit(): Promise<void> {\n        console.log(this.data);\n        this.participants = await this.http.get<any[]>(`/api/tournament/${this.data.tournamentId}/allParticipants`).toPromise();\n        console.log(this.participants);\n    }\n\n    filteredOptions: any;\n    filteredOptions2: any;\n\n    updatePlayers(event, player: string) {\n        console.log(event.option.value, player);\n        this.data[player].id = event.option.value;\n        // let usrIndex = this.participants.findIndex(x => x.discordId == event.option.value);\n        // if (usrIndex > -1) {\n        //     let tmp = <any>this.participants[usrIndex];\n        //     tmp.roles = [];\n        //     console.log(tmp);\n        //     // this.data[player].id = tmp\n        //     // this.data.staff.push(tmp);\n        //     this.participants.splice(usrIndex, 1);\n        //     this.filteredOptions = this.participants;\n        // }\n    }\n\n    updateFilter($val) {\n        this.filteredOptions = this._filter($val);\n    }\n\n    private _filter(name: string) {\n        const filterValue = name.toLowerCase();\n        return this.participants.filter(option => option.name.toLowerCase().indexOf(filterValue) === 0);\n    }\n\n    displayFn(id): string {\n        let user = this.participants.find(x => x.discordId == id);\n        return user && user.name ? user.name : '';\n    }\n\n    async update() {\n        console.log(this.data);\n        let postData = {\n            matchId: this.data.id,\n            p1: this.data.p1.id,\n            p2: this.data.p2.id\n        }\n        try {\n            await this.http.put(`/api/tournament/${this.data.tournamentId}/bracket/update/${this.data.id}`, postData).toPromise();\n            this.notif.showSuccess(\"\", \"Successfully Updated Staff\");\n            this.dialogRef.close(true);\n        } catch (error) {\n            console.error(error);\n            this.notif.showError(\"\", \"Error Updating Staff\");\n            this.dialogRef.close(false);\n        }\n    }\n\n}\n","<h2>Edit Staff</h2>\n<p style=\"font-size: smaller;\">\n    *Note: removing all roles will remove user from staff. <br> *Note 2: Haha jokes on you, roles don't do anything by look pretty for now.\n</p>\n<div class=\"staffGrid\">\n    <div>\n        <span></span>\n        <span *ngFor=\"let role of roles\">\n            {{role.role}}\n        </span>\n    </div>\n    <div *ngFor=\"let user of data.staff\">\n        <span>\n            {{user.name}}\n        </span>\n        <mat-checkbox *ngFor=\"let role of roles\" [checked]=\"checkRole(role.id,user.roles)\" (change)=\"updateRoles(user, role)\">\n        </mat-checkbox>\n    </div>\n</div>\n<div class=\"addUser\">\n    <mat-form-field>\n        <mat-label>Add User</mat-label>\n        <input type=\"text\" (focus)=\"updateLastEvent($event.target.value)\" (input)=\"updateFilter($event.target.value)\" matInput [matAutocomplete]=\"auto\">\n        <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"updatePlayers($event)\" [displayWith]=\"displayFn.bind(this)\">\n            <mat-option *ngFor=\"let option of filteredOptions\" [value]=\"option.discordId\">\n                {{option.name}}\n            </mat-option>\n        </mat-autocomplete>\n    </mat-form-field>\n    <!-- <button mat-stroked-button color=\"accent\">Add User</button> &nbsp; -->\n</div>\n<br>\n<hr>\n<br>\n<button mat-raised-button color=\"warn\" mat-dialog-close>Close</button> &nbsp;\n<button mat-raised-button color=\"primary\" (click)=\"update()\">Save Changes</button> &nbsp;","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { NotificationService } from 'src/app/services/toast.service';\nimport { editUserDialog } from 'src/app/users/users.component';\nimport { role, staff } from 'src/app/_models/tournamentApi.model';\nimport { userAPI } from 'src/app/_models/user.model';\n\n@Component({\n    selector: 'app-edit-staff',\n    templateUrl: './edit-staff.component.html',\n    styleUrls: ['./edit-staff.component.scss']\n})\nexport class EditStaffComponent implements OnInit {\n\n    roles: role[] = [{\n        id: 1,\n        role: \"Admin\"\n    }, {\n        id: 2,\n        role: \"Map Pool\"\n    }, {\n        id: 3,\n        role: \"Coordinator\"\n    }];\n\n    users: userAPI[];\n\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        @Inject(MAT_DIALOG_DATA) public data: { tournament: any, staff: staff[] },\n        private dialogRef: MatDialogRef<editUserDialog>,\n        private notif: NotificationService\n    ) { }\n\n    async ngOnInit(): Promise<void> {\n        this.users = await this.http.get<userAPI[]>('/api/users').toPromise();\n        for (const staff of this.data.staff) {\n            this.users.splice(this.users.findIndex(x => x.discordId == staff.discordId), 1);\n        }\n    }\n\n    checkRole(roleId: number, roles: role[]) {\n        return roles.map(x => x.id).includes(roleId);\n    }\n\n    updateRoles(user: staff, role: role) {\n        let userIndex = this.data.staff.findIndex(x => x.discordId == user.discordId);\n        let roleIndex = this.data.staff[userIndex].roles.findIndex(x => x.id == role.id);\n        if (roleIndex > -1) {\n            this.data.staff[userIndex].roles.splice(roleIndex, 1);\n        } else {\n            this.data.staff[userIndex].roles.push(role);\n        }\n    }\n\n    async update() {\n        let postData = this.data.staff.map(x => {\n            return {\n                userId: x.discordId,\n                roleIds: x.roles.map(x => x.id)\n            }\n        });\n        try {\n            await this.http.post(`/api/tournament/${this.data.tournament.tournamentId}/staff`, { users: postData}).toPromise();\n            this.notif.showSuccess(\"\", \"Successfully Updated Staff\");\n            this.dialogRef.close(true);\n        } catch (error) {\n            this.notif.showError(\"\", \"Error Updating Staff\");\n            this.dialogRef.close(false);\n        }\n    }\n\n    filteredOptions: any;\n\n    updatePlayers(event) {\n        let usrIndex = this.users.findIndex(x => x.discordId == event.option.value);\n        if (usrIndex > -1) {\n            let tmp = <any>this.users[usrIndex];\n            tmp.roles = [];\n            this.data.staff.push(tmp);\n            this.users.splice(usrIndex, 1);\n            this.filteredOptions = this.users;\n        }\n    }\n\n    lastVal = \"\";\n\n    updateLastEvent(event) {\n        this.lastVal = event;\n    }\n\n    updateFilter($val) {\n        this.filteredOptions = this._filter($val);\n    }\n\n    private _filter(name: string) {\n        const filterValue = name.toLowerCase();\n        return this.users.filter(option => option.name.toLowerCase().indexOf(filterValue) === 0);\n    }\n\n    displayFn(id): string {\n        let user = this.users.find(x => x.discordId == id);\n        return user && user.name ? user.name : '';\n    }\n\n}\n","export class TAEvent {\n    Type: EventType;\n    ChangedObject: any;\n}\n\nexport enum EventType {\n    PlayerAdded,\n    PlayerUpdated,\n    PlayerLeft,\n    CoordinatorAdded,\n    CoordinatorLeft,\n    MatchCreated,\n    MatchUpdated,\n    MatchDeleted,\n    QualifierEventCreated,\n    QualifierEventUpdated,\n    QualifierEventDeleted,\n    HostAdded,\n    HostRemoved\n}","\nexport interface ForwardingPacket {\n    ForwardTo: string[];\n    Type: PacketType;\n    SpecificPacket: any;\n}\n\nexport enum PacketType {\n    Acknowledgement,\n    Command,\n    Connect,\n    ConnectResponse,\n    Event,\n    File,\n    ForwardingPacket,\n    LoadedSong,\n    LoadSong,\n    PlaySong,\n    Response,\n    ScoreRequest,\n    ScoreRequestResponse,\n    SongFinished,\n    SongList,\n    SubmitScore\n}","export class GameplayModifiers {\n    Options: GameOptions;\n}\n\nexport enum GameOptions {\n    None = 0,\n\n    //Negative modifiers\n    NoFail = 1,\n    NoBombs = 2,\n    NoArrows = 4,\n    NoObstacles = 8,\n    SlowSong = 16,\n\n    //Positive Modifiers\n    InstaFail = 32,\n    FailOnClash = 64,\n    BatteryEnergy = 128,\n    FastNotes = 256,\n    FastSong = 512,\n    DisappearingArrows = 1024,\n    GhostNotes = 2048,\n\n    //1.12.2 Additions\n    DemoNoFail = 4096,\n    DemoNoObstacles = 8192,\n    StrictAngles = 16384\n}","import type { Characteristic } from \"./characteristic\";\nimport type { Player } from \"./player\";\nimport type { PreviewBeatmapLevel } from \"./previewBeatmapLevel\";\nimport type { User } from \"./User\";\n\nexport interface Match {\n    Guid: string;\n    Players: Player[];\n    Leader: User;\n    SelectedLevel?: PreviewBeatmapLevel;\n    SelectedCharacteristic?: Characteristic;\n    SelectedDifficulty: BeatmapDifficulty;\n}\n\nexport enum BeatmapDifficulty {\n    Easy,\n    Normal,\n    Hard,\n    Expert,\n    ExpertPlus\n}","export interface PlayerSpecificSettings {\n    Options?: PlayerOptions;\n}\n\nexport enum PlayerOptions {\n    None = 0,\n    LeftHanded = 1,\n    StaticLights = 2,\n    NoHud = 4,\n    AdvancedHud = 8,\n    ReduceDebris = 16\n}","import type { GameplayParameters } from \"./gameplayParameters\";\n\nexport interface QualifierEvent {\n    eventId: string;\n    name: string;\n    // guild: Guild;\n    // infoChannel: Channel;\n    qualifierMaps: GameplayParameters[];\n    sendScoresToInfoChannel: boolean;\n    flags: number;\n}\n\nexport enum EventSettings {\n    None = 0,\n    HideScoreFromPlayers = 1,\n    DisableScoresaberSubmission = 2\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TournamentsComponent } from './tournaments/tournaments.component';\nimport { TournamentComponent } from './tournament/tournament.component';\nimport { ArchiveComponent } from './archive/archive.component';\nimport { RankingsComponent } from './rankings/rankings.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { UserComponent } from './user/user.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { MapPoolComponent } from './map-pool/map-pool.component';\nimport { BracketComponent } from './bracket/bracket.component';\nimport { TeamComponent } from './team/team.component';\nimport { UsersComponent } from './users/users.component';\nimport { AuthGuardGuard } from './guards/auth-guard.guard';\nimport { ParticipantsComponent } from './participants/participants.component';\nimport { LogsComponent } from './logs/logs.component';\nimport { QualifiersComponent } from './qualifiers/qualifiers.component';\nimport { MiniTourneysComponent } from './mini-tourneys/mini-tourneys.component';\nimport { RulesComponent } from './rules/rules.component';\nimport { OverlayComponent } from './overlay/overlay.component';\nimport { TaComponent } from './ta/ta.component';\nimport { BadgesComponent } from './badges/badges.component';\nimport { Awards2020Component } from './awards2020/awards2020.component';\nimport { TournamentStaffComponent } from './tournament-staff/tournament-staff.component';\nimport { OverlayControllerComponent } from './overlay-controller/overlay-controller.component';\nimport { SessionsComponent } from './sessions/sessions.component';\n\n\nconst routes: Routes = [\n    { path: '', component: TournamentsComponent },\n    { path: 'mini-tournaments', component: MiniTourneysComponent },\n    { path: 'archive', component: ArchiveComponent },\n    { path: 'rules', component: RulesComponent },\n    // {path: 'ranking', component: RankingsComponent },\n    {\n        path: 'tournament/:id', component: TournamentComponent, children: [\n            { path: 'map-pool', component: MapPoolComponent },\n            { path: 'bracket', component: BracketComponent },\n            { path: 'participants', component: ParticipantsComponent },\n            { path: 'allParticipants', component: ParticipantsComponent },\n            { path: 'qualifiers', component: QualifiersComponent },\n            { path: 'sessions', component: SessionsComponent },\n            { path: 'staff', component: TournamentStaffComponent },\n        ]\n    },\n    { path: 'profile', component: ProfileComponent },\n    { path: 'user/:id', component: UserComponent },\n    { path: 'sign-up', component: SignUpComponent },\n    { path: 'calendar', component: CalendarComponent },\n    { path: 'team', component: TeamComponent },\n    { path: 'users', component: UsersComponent, canActivate: [AuthGuardGuard] },\n    { path: 'logs', component: LogsComponent, canActivate: [AuthGuardGuard] },\n    { path: 'overlay/:tourneyId/:stage/:matchId', component: OverlayComponent },\n    { path: 'overlay/:tourneyId', component: OverlayControllerComponent },\n    { path: 'ta', component: TaComponent },\n    { path: 'badges', component: BadgesComponent },\n    { path: 'awards/2020', component: Awards2020Component },\n    // { path: 'badges', component: BadgesComponent, canActivate: [AuthGuardGuard] },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<header *ngIf=\"showDefault\">\n    <nav>\n        <div class=\"container\">\n            <div>\n                <a routerLink=\"/\">\n                    <img src=\"/assets\\svg\\BeatKhana Logo Text RGB2.svg\" alt=\"BeatKhana! Logo\" height=\"50\">\n                </a>\n            </div>\n            <div class=\"nav-main\">\n                <ul class=\"navbar-nav\">\n                    <li><a routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact:true}\" class=\"nav-item\">Home</a></li>\n                    <li><a routerLink=\"/mini-tournaments\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact:true}\" class=\"nav-item\">Mini Tournaments</a></li>\n                    <li><a routerLink=\"/archive\" routerLinkActive=\"active\" class=\"nav-item\">Archive</a></li>\n                    <li class=\"nav-item hover-dropdown\">\n                        More\n                        <i></i>\n                        <!-- <button class=\"nav-item dropdown-toggle\">\n                        </button> -->\n                        <!-- More -->\n                        <ul class=\"dropdown\">\n                            <li class=\"dropdown-item\">\n                                <a routerLink=\"/awards/2020\" routerLinkActive=\"active\">2020 Awards</a>\n                            </li>\n                            <li class=\"dropdown-item\">\n                                <a routerLink=\"/rules\" routerLinkActive=\"active\">Rules</a>\n                            </li>\n                            <li class=\"dropdown-item\">\n                                <a routerLink=\"/calendar\" routerLinkActive=\"active\">Calendar</a>\n                            </li>\n                            <li class=\"dropdown-item\">\n                                <a routerLink=\"/ta\" routerLinkActive=\"active\">TA Client</a>\n                            </li>\n                        </ul>\n                    </li>\n                    <!-- <li><a routerLink=\"/ranking\" routerLinkActive=\"active\" class=\"nav-item\">Rankings</a></li> -->\n                    <li><a routerLink=\"/team\" routerLinkActive=\"active\" class=\"nav-item\">Team</a></li>\n                </ul>\n            </div>\n            <div style=\"float: right;\" class=\"nav-main\">\n                <ul class=\"navbar-nav\">\n                    <li>\n                        <a href=\"https://discord.gg/5NjfSAC\" target=\"_blank\" class=\"nav-item noHover icon\">\n                            <i class=\"fab fa-discord\"></i>\n                        </a>\n                    </li>\n                    <li>\n                        <a href=\"https://www.twitch.tv/beatkhana\" target=\"_blank\" class=\"nav-item noHover icon\">\n                            <i class=\"fab fa-twitch\"></i>\n                        </a>\n                    </li>\n                    <li *ngIf=\"user\" class=\"nav-item has-dropdown noHover\">\n                        <button class=\"nav-link dropdown-toggle\">\n                            <img class=\"userImg\" src=\"{{ user.avatar }}\"\n                                style=\"display: inline;\" height=\"64\" width=\"64\">\n\n                        </button>\n                        <ul class=\"dropdown\">\n                            <li class=\"dropdown-item\">\n                                <a routerLink=\"/profile\">View Profile</a>\n                            </li>\n                            <li class=\"dropdown-item\">\n                                <a href=\"/api/logout\">Logout</a>\n                            </li>\n                        </ul>\n                    </li>\n                    <li *ngIf=\"!user\" style=\"margin-left: 5px;\">\n                        <a href=\"/api/login?url={{this.router.url}}\" class=\"nav-item\">Login/Register</a>\n                    </li>\n                </ul>\n            </div>\n\n\n            <!-- Mobile nav-->\n            <div class=\"nav-mobile\">\n\n            </div>\n            <div class=\"nav-mobile\">\n                <div class=\"hamburger hamburger--spin js-hamburger\" (click)=\"burgerClick()\" [ngClass]=\"burgerActive ? 'is-active' : ''\">\n                    <div class=\" hamburger-box \">\n                        <div class=\"hamburger-inner \"></div>\n                    </div>\n                </div>\n            </div>\n\n            <div [ngClass]=\"burgerActive ? 'mobile-show' : ''\" class=\"mobile-nav-content\" style=\"grid-column: span 3;\">\n                <div>\n                    <ul class=\"navbar-nav mobile\">\n                        <li><a routerLink=\"/\" routerLinkActive=\"active \" [routerLinkActiveOptions]=\"{exact:true} \" class=\"nav-item \">Home</a></li>\n                        <li><a routerLink=\"/mini-tournaments\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact:true}\" class=\"nav-item\">Mini Tournaments</a></li>\n                        <li><a routerLink=\"/archive\" routerLinkActive=\"active \" class=\"nav-item \">Archive</a></li>\n                        <li><a routerLink=\"/awards/2020\" routerLinkActive=\"active\" class=\"nav-item \">2020 Awards</a></li>\n                        <li><a routerLink=\"/rules\" routerLinkActive=\"active\" class=\"nav-item\">Rules</a></li>\n                        <!-- <li><a routerLink=\"/ranking\" routerLinkActive=\"active \" class=\"nav-item \">Rankings</a></li> -->\n                        <li><a routerLink=\"/calendar\" routerLinkActive=\"active\" class=\"nav-item\">Calendar</a></li>\n                        <li><a routerLink=\"/team\" routerLinkActive=\"active \" class=\"nav-item \">Team</a></li>\n                    </ul>\n                </div>\n                <div>\n                    <hr>\n                    <ul class=\"navbar-nav mobile\">\n                        <li *ngIf=\"user\">\n                            <img class=\"userImg\" src=\"{{ user.avatar }} \" style=\"display: inline-box;\" height=\"64\" width=\"64\">\n                        </li>\n                        <li *ngIf=\"user\">\n                            <a routerLink=\"/profile\" class=\"nav-item \">View Profile</a>\n                        </li>\n                        <li *ngIf=\"user\">\n                            <a href=\"/api/logout\" class=\"nav-item \">Logout</a>\n                        </li>\n                        <li *ngIf=\"!user \">\n                            <a href=\"/api/login?url={{this.router.url}}\" class=\"nav-item \">Login/Register</a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </nav>\n</header>\n<router-outlet></router-outlet>\n<footer *ngIf=\"showDefault\">\n    <p>\n        <strong>BeatKhana!</strong>\n        <br><br>\n        <a title=\"Join the Discord!\" href=\"https://discord.gg/5NjfSAC\" target=\"_blank\"><i class=\"fab fa-discord\"></i></a>\n        <a title=\"Join the Discord!\" href=\"https://discord.gg/5NjfSAC\" target=\"_blank\" [innerHTML]=\"discordSvg\" class=\"icon2\"><i class=\"icon2 discord\"></i></a>\n        <a title=\"Follow us on twitch!\" href=\"https://www.twitch.tv/beatkhana\" target=\"_blank\"><i class=\"fab fa-twitch\"></i></a>\n        <a title=\"Get Saber-O's Merch\" href=\"http://teespring.com/en/stores/saber-os\" target=\"_blank\"><i class=\"fas fa-tshirt\"></i></a>\n    </p>\n</footer>","import { Component, OnInit, HostListener, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Title, DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { ActivatedRoute, NavigationStart, Router } from '@angular/router';\n\nimport { User } from './models/user.model'\nimport { Observable } from 'rxjs';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { NotificationService } from './services/toast.service';\nimport { MetaTagService } from './services/meta-tag.service';\nimport { UserAuthService } from './services/user-auth.service';\nimport { TournamentsComponent } from './tournaments/tournaments.component';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n    title = 'BeatKhana!';\n\n    user: User = null;\n    updatedUser = false;\n\n    discordSvg: SafeHtml;\n\n    showDefault = true;\n\n    public constructor(\n        public titleService: Title,\n        public http: HttpClient,\n        public route: ActivatedRoute,\n        public router: Router,\n        public dialog: MatDialog,\n        public sanitizer: DomSanitizer,\n        public notif: NotificationService,\n        public metaTags: MetaTagService,\n        public cd: ChangeDetectorRef,\n        public userS: UserAuthService\n    ) {\n        router.events.subscribe(() => {\n            this.burgerActive = false;\n        });\n\n        // if (this.constructor == AppComponent) {\n        //     this.updateUser(); \n        // }\n        if (!this.user) this.updateUser();\n\n        router.events.forEach((event) => {\n            if (event instanceof NavigationStart) {\n                this.showDefault = !(event.url.includes('overlay') || event.url.includes('coordinator') || event.url.includes('/ta'));\n            }\n        });\n    }\n\n    ngOnInit(): void {\n        this.metaTags.defineTags('/', 'BeatKhana!', 'The one stop spot for all Beat Saber tournament information', 'assets/images/icon/BeatKhana Logo RGB.png');\n    }\n\n    public async updateUser() {\n        this.user = await this.userS.curUser();\n    }\n\n    public setTitle(newTitle: string) {\n        this.titleService.setTitle(newTitle);\n    }\n\n    burgerActive = false;\n\n    burgerClick() {\n        this.burgerActive = !this.burgerActive;\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TournamentsComponent, newTournamentDialog, archiveTournamentDialog } from './tournaments/tournaments.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { TournamentComponent, editTournament, tournamentSettingsDialog, signUpDialog, addPlayerDialog } from './tournament/tournament.component';\nimport { ArchiveComponent } from './archive/archive.component';\nimport { RankingsComponent } from './rankings/rankings.component';\nimport { editProfileDialog, ProfileComponent } from './profile/profile.component';\nimport { UserComponent } from './user/user.component';\n\n\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\nimport { CKEditorModule } from 'ckeditor4-angular';\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { CalendarComponent } from './calendar/calendar.component';\n\nimport { ToastrModule } from 'ngx-toastr';\nimport { BracketComponent, generateBracketDialog, updateMatchDialog } from './bracket/bracket.component';\nimport { addSongDialog, createPoolDialog, MapPoolComponent } from './map-pool/map-pool.component';\nimport { TeamComponent } from './team/team.component';\nimport { editUserDialog, UsersComponent } from './users/users.component';\nimport { editCommentDialog, ParticipantsComponent } from './participants/participants.component';\n\nimport { NgxLinkifyjsModule } from 'ngx-linkifyjs';\nimport { LogsComponent } from './logs/logs.component';\nimport { QualifiersComponent } from './qualifiers/qualifiers.component';\nimport { MiniTourneysComponent } from './mini-tourneys/mini-tourneys.component';\nimport { RulesComponent } from './rules/rules.component';\n\nimport {\n    NgxMatDatetimePickerModule,\n    NgxMatNativeDateModule,\n    NgxMatTimepickerModule\n} from '@angular-material-components/datetime-picker';\nimport { OverlayComponent } from './overlay/overlay.component';\nimport { TaComponent } from './ta/ta.component';\nimport { BadgesComponent } from './badges/badges.component';\nimport { CreateBadgeComponent } from './_modals/create-badge/create-badge.component';\nimport { Awards2020Component } from './awards2020/awards2020.component';\nimport { AssignBadgesComponent } from './_modals/assign-badges/assign-badges.component';\nimport { TournamentStaffComponent } from './tournament-staff/tournament-staff.component';\nimport { EditStaffComponent } from './_modals/edit-staff/edit-staff.component';\nimport { OverlayControllerComponent } from './overlay-controller/overlay-controller.component';\nimport { AddPlayerComponent } from './_modals/add-player/add-player.component';\nimport { AssignSessionComponent } from './_modals/assign-session/assign-session.component';\nimport { SessionsComponent } from './sessions/sessions.component';\nimport { EditBracketMatchComponent } from './_modals/edit-bracket-match/edit-bracket-match.component';\n\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        TournamentsComponent,\n        TournamentComponent,\n        ArchiveComponent,\n        newTournamentDialog,\n        archiveTournamentDialog,\n        editTournament,\n        RankingsComponent,\n        ProfileComponent,\n        editProfileDialog,\n        UserComponent,\n        ConfirmDialogComponent,\n        SignUpComponent,\n        addPlayerDialog,\n        editCommentDialog,\n        CalendarComponent,\n        BracketComponent,\n        updateMatchDialog,\n        generateBracketDialog,\n        MapPoolComponent,\n        createPoolDialog,\n        addSongDialog,\n        TeamComponent,\n        UsersComponent,\n        editUserDialog,\n        tournamentSettingsDialog,\n        signUpDialog,\n        ParticipantsComponent,\n        LogsComponent,\n        QualifiersComponent,\n        MiniTourneysComponent,\n        RulesComponent,\n        OverlayComponent,\n        TaComponent,\n        BadgesComponent,\n        CreateBadgeComponent,\n        Awards2020Component,\n        AssignBadgesComponent,\n        TournamentStaffComponent,\n        EditStaffComponent,\n        OverlayControllerComponent,\n        AddPlayerComponent,\n        AssignSessionComponent,\n        SessionsComponent,\n        EditBracketMatchComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        HttpClientModule,\n        BrowserAnimationsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatButtonModule,\n        MatCheckboxModule,\n        MatDialogModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatAutocompleteModule,\n        MatTabsModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatRadioModule,\n        MatExpansionModule,\n        MatSliderModule,\n        DragDropModule,\n        CKEditorModule,\n        ToastrModule.forRoot({\n            maxOpened: 3,\n            autoDismiss: true,\n            newestOnTop: false,\n            preventDuplicates: true,\n            countDuplicates: true,\n            resetTimeoutOnDuplicate: true\n        }),\n        NgxLinkifyjsModule.forRoot(),\n        NgxMatDatetimePickerModule,\n        NgxMatTimepickerModule,\n        NgxMatNativeDateModule,\n        FormsModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"container gridArchive\">\n    <div *ngIf=\"loading else loaded\">\n        <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 100px;\">\n    </div>\n    <ng-template #loaded>\n        <div class=\"card archiveCard\" *ngFor=\"let tournament of tournaments\">\n            <a [title]=\"tournament.name\" [routerLink]=\"['/tournament',tournament.tournamentId]\">\n                <div>\n                    <!-- <img src=\"https://beatkhanas3.s3.us-east-1.amazonaws.com/{{tournament.image}}\" class=\"card-img\"> -->\n                    <img src=\"/assets/images/{{tournament.image}}\" class=\"card-img\">\n                </div>\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\">\n                        {{tournament.name}}\n                    </h5>\n                    <p class=\"card-text\">\n                        1# {{tournament.first}} | #2 {{tournament.second}} | #3 {{tournament.third}}\n                    </p>\n                </div>\n                <div class=\"card-body cardLeft\">\n                    <p class=\"card-text\">{{tournament.startDate | date: 'dd/MM/yyyy'}}</p>\n                </div>\n            </a>\n        </div>\n    </ng-template>\n\n\n    <ng-template #noArchive>\n        <a>\n            <div>\n            </div>\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">\n                    No Archived Tournaments\n                </h5>\n            </div>\n            <div class=\"card-body cardLeft\">\n            </div>\n        </a>\n    </ng-template>\n</div>","import { Component, HostListener, OnInit } from '@angular/core';\nimport { ITournament } from '../interfaces/tournament';\nimport { Observable } from 'rxjs';\nimport { AppComponent } from '../app.component';\n\n@Component({\n    selector: 'app-archive',\n    templateUrl: './archive.component.html',\n    styleUrls: ['./archive.component.scss']\n})\nexport class ArchiveComponent extends AppComponent implements OnInit {\n\n    title = \"Archive | BeatKhana!\";\n    private url = '/api/tournament/archived';\n    public tournaments = [];\n    public loading = true;\n    private tourneyId: string;\n\n    page = 0;\n    limit = 25;\n\n    secondLoading = false;\n    allRecords = false;\n\n    async ngOnInit(): Promise<void> {\n        this.getTournaments()\n            .subscribe(data => {\n                this.page++;\n                data.sort(function (a, b) {\n                    return <any>new Date(b.startDate) - <any>new Date(a.startDate);\n                });\n                this.tournaments = data;\n                this.loading = false;\n            });\n        this.setTitle(this.title);\n    }\n\n    public getTournaments(): Observable<ITournament[]> {\n        return this.http.get<ITournament[]>(this.url + `?page=${this.page}&limit=${this.limit}`);\n    }\n\n    @HostListener('window:scroll', ['$event'])\n    doSomething(event) {\n        if (window.pageYOffset - document.getElementsByClassName(\"gridArchive\")[0].scrollHeight > -1000 && !this.secondLoading && !this.allRecords) {\n            this.secondLoading = true\n            this.getTournaments()\n                .subscribe(data => {\n                    if (data.length > 0) {\n                        this.page += 1;\n                        this.tournaments = this.tournaments.concat(data);\n                        this.secondLoading = false;\n                    }\n                    //     this.secondLoading = false;\n                    //     this.allRecords = true;\n                    // }\n                });\n        }\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-awards2020',\n    templateUrl: './awards2020.component.html',\n    styleUrls: ['./awards2020.component.scss']\n})\nexport class Awards2020Component implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    scroll(el: HTMLElement) {\n        el.scrollIntoView({\n            behavior: 'smooth'\n        });\n    }\n\n}\n","<section class=\"awards-title\">\n    <h1>Beat Saber Awards 2020</h1>\n    <h4>Hosted by BeatKhana</h4>\n</section>\n<section class=\"awards-container\">\n    <div class=\"awards-nav\">\n        <ul>\n            <li (click)=\"scroll(bestCoord)\">Best Coordinator</li>\n            <li (click)=\"scroll(bestStream)\">Best Stream Host</li>\n            <li (click)=\"scroll(bestEmote)\">Best Emote</li>\n            <li (click)=\"scroll(mapImpact)\">Most Impactfull Map</li>\n            <li (click)=\"scroll(mapKill)\">Map That Could Kill</li>\n            <li (click)=\"scroll(shitpostMap)\">Best Shitpost Map</li>\n            <li (click)=\"scroll(boomerMap)\">Best Boomer Map</li>\n            <li (click)=\"scroll(boomerMapper)\">Best Boomer Mapper</li>\n            <li (click)=\"scroll(mapper2019)\">Best 2019 Mapper</li>\n            <li (click)=\"scroll(mapper2020)\">Best Zoomer Mapper</li>\n            <li (click)=\"scroll(techMapper)\">Best Tech Mapper</li>\n            <li (click)=\"scroll(shitpostMapper)\">Best Shitpost Mapper</li>\n            <li (click)=\"scroll(streamer)\">Best Streamer</li>\n            <li (click)=\"scroll(mixedRealityStreamer)\">Best Mixed Reality Streamer</li>\n            <li (click)=\"scroll(bestYoutuber)\">Best Youtuber</li>\n            <li (click)=\"scroll(accAndy)\">Best Acc Andy</li>\n            <li (click)=\"scroll(bestBoomer)\">Best Boomer</li>\n            <li (click)=\"scroll(bsMeme)\">Best Meme</li>\n            <li (click)=\"scroll(leaderboardGod)\">Leaderboard God</li>\n            <li (click)=\"scroll(bestCaster)\">Best Caster</li>\n            <li (click)=\"scroll(bestLighter)\">Best Lighter</li>\n            <li (click)=\"scroll(bestTournament)\">Best Tournament</li>\n            <li (click)=\"scroll(bestMascot)\">Best Mascot</li>\n            <li (click)=\"scroll(bestSaberMaker)\">Best Saber Maker</li>\n            <li (click)=\"scroll(bestBlockMaker)\">Best Block Maker</li>\n            <li (click)=\"scroll(bestMod)\">Best Mod</li>\n            <li (click)=\"scroll(worstMenu)\">Worst Menu</li>\n            <li (click)=\"scroll(bestFurry)\">Best Furry</li>\n            <li (click)=\"scroll(bestVoice)\">Best Voice</li>\n            <li (click)=\"scroll(bestClan)\">Best Clan</li>\n            <li (click)=\"scroll(bestModder)\">Best Modder</li>\n        </ul>\n    </div>\n    <div class=\"awards-section\">\n        <div #bestCoord>\n            <h2>Best Coordiantor for Tournaments</h2>\n            <div class=\"nominees\">\n                <div class=\"nominee\" routerLink='/user/464070190498447361'>\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://new.scoresaber.com/api/static/avatars/76561198130607154.jpg);\"></div>\n                    <p>\n                        Samiixd\n                    </p>\n                </div>\n                <div class=\"nominee winner\" routerLink='/user/158560971101569024'>\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://new.scoresaber.com/api/static/avatars/76561198046397592.jpg);\"></div>\n                    <p>\n                        Incanium\n                    </p>\n                </div>\n                <div class=\"nominee\" routerLink='/user/226507204495278080'>\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://cdn.discordapp.com/avatars/226507204495278080/a_32da3c59988a15988b5880c63ba97c4b.webp?size=256);\"></div>\n                    <p>\n                        Gregi\n                    </p>\n                </div>\n                <div class=\"nominee\" routerLink='/user/102133026196029440'>\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://new.scoresaber.com/api/static/avatars/76561198271377161.jpg);\"></div>\n                    <p>\n                        Beno (nee)\n                    </p>\n                </div>\n                <div class=\"nominee\" routerLink='/user/108207141315170304'>\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://new.scoresaber.com/api/static/avatars/76561198039493984.jpg);\"></div>\n                    <p>\n                        IcyNoobsGamer\n                    </p>\n                </div>\n                <div class=\"nominee\" routerLink='/user/450365431707074591'>\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://new.scoresaber.com/api/static/avatars/76561198970517156.jpg);\"></div>\n                    <p>\n                        Eradawn\n                    </p>\n                </div>\n                <div class=\"nominee\" routerLink='/user/277542487596466176'>\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://new.scoresaber.com/api/static/avatars/76561198245321138.jpg);\"></div>\n                    <p>\n                        ShadowPixel\n                    </p>\n                </div>\n                <div class=\"nominee\" routerLink='/user/580425653325791272'>\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://new.scoresaber.com/api/static/avatars/76561198272266872.jpg);\"></div>\n                    <p>\n                        Aso\n                    </p>\n                </div>\n            </div>\n        </div>\n        <div #bestStream>\n            <h2>Best Stream Host for Tournaments</h2>\n            <div class=\"nominees\">\n                <div class=\"nominee\" routerLink='/user/553576678186680340'>\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://new.scoresaber.com/api/static/avatars/76561198040830896.jpg);\"></div>\n                    <p>\n                        Ryeera\n                    </p>\n                </div>\n                <div class=\"nominee\" routerLink='/user/311273905094656001'>\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://new.scoresaber.com/api/static/avatars/76561198056313463.jpg);\"></div>\n                    <p>\n                        BakedaDough\n                    </p>\n                </div>\n                <div class=\"nominee\" routerLink='/user/226507204495278080'>\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://cdn.discordapp.com/avatars/226507204495278080/a_32da3c59988a15988b5880c63ba97c4b.webp?size=256);\"></div>\n                    <p>\n                        Gregi\n                    </p>\n                </div>\n                <div class=\"nominee winner\" routerLink='/user/145838716877930496'>\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://new.scoresaber.com/api/static/avatars/76561197978021272.jpg);\"></div>\n                    <p>\n                        Amanatsu\n                    </p>\n                </div>\n            </div>\n        </div>\n        <div #bestEmote>\n            <h2>Best Beat Saber Related Emote</h2>\n            <div class=\"nominees\">\n                <div class=\"nominee emote\">\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://lh5.googleusercontent.com/A4VO4QDjXvFam7aQS3Wh7Kh0JGeR1-T1yX-_T4aTChP_jE42Tl3uuVr1j41oeTyYjkCeTOpocmaRdklZ-a9swLhHctEK9DtYE6q6ae1SylShMQsTfHzOVTj3smv0qQ=w260);\"></div>\n                    <p>\n                        Wide Golfuh\n                    </p>\n                </div>\n                <div class=\"nominee emote\">\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://lh6.googleusercontent.com/S1v4lSw9Vi-4ZY4mOrerleCtAKOhBufXeLcdB3ysfKVG5U0_yembxZp_YUy1Zsr46yxMfDl2r6rIPUvdOPWbhNxJ8FoXRgm3uvVe4IH_e-dScXS0oMY7Y4JIL8BUxQ=w128);\"></div>\n                    <p>\n                        PepoSabers\n                    </p>\n                </div>\n                <div class=\"nominee emote\">\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://lh4.googleusercontent.com/ugnuXWF7DeLsBSsM0WvIySL_D3bvSzS7R0M1VJtwIoZE355Vn-ljKBT0NI6CjbhyUwNHi03droL3qsd4hRozKD4Nuc63_MGy6VKWfbRs-ggtfdPy8sUoXbBKiA6wkQ=w80);\"></div>\n                    <p>\n                        MonolithJaack\n                    </p>\n                </div>\n                <div class=\"nominee emote winner\">\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://lh3.googleusercontent.com/Yj_49k3R3L4q-RwDZzU71YyEbmb8ZfvW6XyCDcgI3zN8dQSJOt9Oo8FCesxmO9kzMTWr1U3ky08654Rd6pu-Vf1jmZ_UBLqjt5tlW7pVaSysPTmWavofxElVMTrr7Q=w260);\"></div>\n                    <p>\n                        SadTracking\n                    </p>\n                </div>\n                <div class=\"nominee emote\">\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://lh5.googleusercontent.com/K1t4qs9w-F4nHFn_hd_cpno_BTiOSx9hrWzUOk_-eUeACDYKCgJdMnYQ6rgNvv8hEKisAtYL9aZazIVq-6z0g3DpZ2w_C5BGxWCfm2isRSS5DLdcgmW3nkRULhSkfQ=w45);\"></div>\n                    <p>\n                        Ninja\n                    </p>\n                </div>\n                <div class=\"nominee emote\">\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://lh5.googleusercontent.com/asY7o_WuhqumW_rbSFiiHlfRMDQonL7isVWtiL-5iqhhOFGHvMNbIYYJqPD8P67VbeixZOYlCd-Ydy_ziMEFJKWYrrwY5xPtkOfZTlIIsDD9HL9puhhYcyPIcVKl3A=w128);\"></div>\n                    <p>\n                        Peepoacc\n                    </p>\n                </div>\n                <div class=\"nominee emote\">\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://lh4.googleusercontent.com/sHLJtHETjtQBWE9oFsdTcY5HuuCEmE83jQ06A5DI8EOt09QDpdBLkZm12oI4XwRE7TueYyHM5j8uqF_o90YK4XqPWqR2_ASvcmWkxkDT2IcNXXgVlx3GRHMEmh9fZg=w56);\"></div>\n                    <p>\n                        HahaBall\n                    </p>\n                </div>\n                <div class=\"nominee emote\">\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://lh5.googleusercontent.com/KoK1zOBi4jiaxxqBpd37jhux8RiA1XL4NiKOB8TO09vnpu8lzZQm5f5ZRzpYcW6UjebipVy0HUSVFIht4haxNXAiv2hf9eHPKgjknHcKOL-eP9ZWweca-eH_4viXEg=w128);\"></div>\n                    <p>\n                        WHAT HOW\n                    </p>\n                </div>\n                <div class=\"nominee emote\">\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://lh5.googleusercontent.com/QMrCV-kEOz090BzF2lf_Z5FatCn6uPcpZquIhRo_FNz6wO2aiyW0msgT7ZXtqHdcmf0ejDTQCwYAa4nPc3Jc0vnhkjTrOEbr8Zamd_iiwfFpzcVkY_8K_zn7_kv8pQ=w96);\"></div>\n                    <p>\n                        First Dreams\n                    </p>\n                </div>\n                <div class=\"nominee emote\">\n                    <div class=\"imgWrapper\" style=\"background-image: url(https://lh5.googleusercontent.com/nJ0mBuV9jSGFdMHlDmQEY67h0N6flTl_W3_oM-VrMDvYrHENV71knM1Vyydk-WVy14dhiri-fGu_PNrCClOAjmQQuQEyhqE7Ui58TlVGTMoNFgUAvDexov5p4i8Q_A=w112);\"></div>\n                    <p>\n                        InterzW\n                    </p>\n                </div>\n            </div>\n        </div>\n        <div #mapImpact>\n            <h2>Map that has made the MOST impact on the game</h2>\n            <div class=\"mapNominees\">\n                <a href=\"https://beatsaver.com/beatmap/1f90\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/1f90/2fddb136bda7f9e29b4cb6621d6d8e0f8a43b126.jpg);\"></div>\n                        <p>\n                            Overkill - Nuketime\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/d0f6\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/d0f6/75ccd1def27021c38b58246f650802d9702bc70e.jpg);\"></div>\n                        <p>\n                            Bassline Yatteru? - Uninstaller\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/76cb\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/76cb/898504255edd45a740490d831545e6d1330c1d72.jpg);\"></div>\n                        <p>\n                            Goodbye - Puds\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/3036\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/songs/6C5B1FC2C75AA2ED3EBD69810A6456171D97703E.png);\"></div>\n                        <p>\n                            Milk Crown - Hexagonial\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/25f\" target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/25f/ad6c9f88d63259a95e39397c31be2981c4beb744.jpg);\"></div>\n                        <p>\n                            Reality Check Through TYhe Skull - Rickput\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/3a\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/3a/9b0881baab8b72f33424ecf0d9ad247ea10afbb2.jpg);\"></div>\n                        <p>\n                            TTFAF - Freek\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/e55\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/e55/8c51d94e3e247df86a4c7113e9fdbcc434a56f4b.jpg);\"></div>\n                        <p>\n                            Cycle Hit - Various Mappers\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/b\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/b/19f2879d11a91b51a5c090d63471c3e8d9b7aee3.jpg);\"></div>\n                        <p>\n                            Believer - Rustic\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/86a\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/86a/4692c6c200bc92364c268a518e9dee89146e4391.jpg);\"></div>\n                        <p>\n                            Freedom Dive - Roffle\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/6136\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/songs/55F500A96EEFB234864A441DEB6754065E8ACA9F.png);\"></div>\n                        <p>\n                            Ghos7 - DankruptMemer x Moriik\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/1a15\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/1a15/c1489448cce99d8dcf5b18c70223618284193408.jpg);\"></div>\n                        <p>\n                            Nisemono - Hexagonial\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #mapKill>\n            <h2>Ranked Map That Could Kill Someone</h2>\n            <div class=\"mapNominees\">\n                <a href=\"https://beatsaver.com/beatmap/2200\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/2200/4867e299296a5b965edc4dcd930c07703b06b96e.jpg);\"></div>\n                        <p>\n                            Daisuki - Hexagonial\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/78ca\" target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/78ca/9f783ce7f810062852795f4cbdf8335245fd044a.jpg);\"></div>\n                        <p>\n                            Tinnitus - Souk & Oddloop\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/76cb\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/songs/B506526ABA9AE3BC8C6DE045326D4F083607776B.png);\"></div>\n                        <p>\n                            Psychology - Scrappy\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/4479\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/4479/e80adf683aed066f94bbba3e49162d7d0d7247b4.jpg);\"></div>\n                        <p>\n                            Louder Than Steel - Electrostats\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/6b5f\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/6b5f/6a5aea3ce9a7a9f120ebd4deea377b4a54640bfb.jpg);\"></div>\n                        <p>\n                            Break Expert Diff - Souk & Oddloop\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/2eea\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/2eea/9dc600ee749197f16ec4f75f5d5bf2ab38f8e4f8.jpg);\"></div>\n                        <p>\n                            Labyrinth - Splake & Moriik\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/17b1\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/17b1/65f78118110793e75b81422d01e67b0c7623cff1.jpg);\"></div>\n                        <p>\n                            sleepparalysis//////////////\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #shitpostMap>\n            <h2>Best Shitpost Map</h2>\n            <div class=\"mapNominees\">\n                <a href=\"https://beatsaver.com/beatmap/ff9\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/ff9/cb9f1581ff6c09130c991db8823c5953c660688f.jpg);\"></div>\n                        <p>\n                            Smooth Criminal - Atlasik\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/6bf9\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/6bf9/77792ce1f1d03d9089a81c09f3affab6d488229f.jpg);\"></div>\n                        <p>\n                            Armed and Ready - Jonothan Mullins\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/5851\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/5851/31138c054d7ca6b318c8d628015a5ccb996416e0.jpg);\"></div>\n                        <p>\n                            Till I Collapse - Loloppe\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/86e\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/86e/280be3d96970f0222c75e9ddcffa8880418c8796.jpg);\"></div>\n                        <p>\n                            Delfino Plaza - speederman5553\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/53d9\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/53d9/d8cd049712c82d272a2a6643e44cdcfdae040ce0.jpg);\"></div>\n                        <p>\n                            The Office Main Theme - Anotymous\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/2c2\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/2c2/ddb478a5ea54861c7059c6dbf8c073ee37b31d65.jpg);\"></div>\n                        <p>\n                            My Name is Jonas - diink\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://gonewiththetwins.com/new/wp-content/uploads/2015/08/shrek.jpg);\"></div>\n                        <p>\n                            The Shrek Movie - KingPeucheYT\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/7580\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/7580/627ae49b391a5a935eb29c4b9e321effc3900d9e.jpg);\"></div>\n                        <p>\n                            Lolmao plays Louder Than Steel - FatBeanzoop\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/946c\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/songs/DC13CAE8586AA80AD4241BECDA91C24C842340CE.png);\"></div>\n                        <p>\n                            Minecraft in Beat Saber - sboys3.com\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #boomerMap>\n            <h2>Best Boomer Map</h2>\n            <div class=\"mapNominees\">\n                <a href=\"https://beatsaver.com/beatmap/1db6\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/1db6/196d1061eac3cd4bc586e5afcaea07c35f1d69d0.jpg);\"></div>\n                        <p>\n                            Setsuna Imitation - saut\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/250\" target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/250/ad64505817b3e2ab6cc5c7007fcfa07f2c34d1f4.jpg);\"></div>\n                        <p>\n                            Freedom Dive - Roffle\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/e27\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/e27/d3a0de31ebe3b61d3328d03a0e82c4152a9be5a8.jpg);\"></div>\n                        <p>\n                            Blue Zenith - bananentropfen\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/2f94\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/2f94/200549108bb22752112c62d102bf69ee0c47fd7a.png);\"></div>\n                        <p>\n                            DeltaMax - Yun0\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/27d8\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/27d8/d60ca1e3b6175d57dac7463d532989f83c257efb.jpg);\"></div>\n                        <p>\n                            Monochrome Butterfly - fraies\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/17f9\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/17f9/108c239db3c0596f1ba7426353af1b4cc4fd8b08.jpg);\"></div>\n                        <p>\n                            Tower of Heaven V2 - Zorowo\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/1a15/c1489448cce99d8dcf5b18c70223618284193408.jpg);\"></div>\n                        <p>\n                            Nisemono - Hexagonial\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/7580\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/145c/87ecc58926a76c51a0719806e24f69e4c56c1d09.jpg);\"></div>\n                        <p>\n                            Speed of Link (Hexagonial Diff)\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/songs/FF8C748A683122BAE2D2796B7290EC47EADC45CE.png);\"></div>\n                        <p>\n                            Burnt Rice - Hexagonial\n                        </p>\n                    </div>\n                </a>\n                <a href=\"https://beatsaver.com/beatmap/14f8\" target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/14f8/37650cf3a4da781b16fe47cff63df0df2e3e8a43.jpg);\"></div>\n                        <p>\n                            Your Voice So - roeek\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #boomerMapper>\n            <h2>Best Boomer Mapper (Best 2018 Mapper)</h2>\n            <div class=\"mapNominees\">\n                <a arget=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Saut\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198220149073.jpg);\"></div>\n                        <p>\n                            Hexagonial\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/d4/d41f15a0beaee5e70131d68b92522b59c2e40964_full.jpg);\"></div>\n                        <p>\n                            Freeek\n                        </p>\n                    </div>\n                </a>\n                <a arget=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Rustic\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198041191427.jpg);\"></div>\n                        <p>\n                            Mystikmol\n                        </p>\n                    </div>\n                </a>\n                <a arget=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Krydar\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            GreatYazer\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Squeaksies\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            BlackBlazon\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198057326967.jpg);\"></div>\n                        <p>\n                            Pug\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198056413446.jpg);\"></div>\n                        <p>\n                            Iraky\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198011570317.jpg);\"></div>\n                        <p>\n                            OrangeW\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Yun0\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561197965444209.jpg);\"></div>\n                        <p>\n                            RedMagi\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #mapper2019>\n            <h2>Best 2019 Mapper</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198051924392.jpg);\"></div>\n                        <p>\n                            Light Ai\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198126979074.jpg);\"></div>\n                        <p>\n                            puds\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            DE125\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198063141432.jpg);\"></div>\n                        <p>\n                            Hoppaw\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198163862964.jpg);\"></div>\n                        <p>\n                            Fern\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198061865957.jpg);\"></div>\n                        <p>\n                            Fraies\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198165926393.jpg);\"></div>\n                        <p>\n                            Jez\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198082354639.jpg);\"></div>\n                        <p>\n                            Nuketime\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198114011987.jpg);\"></div>\n                        <p>\n                            Oddloop\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198043801246.jpg);\"></div>\n                        <p>\n                            Joetastic\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198079502428.jpg);\"></div>\n                        <p>\n                            Scrappy\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #mapper2020>\n            <h2>Best Zoomer Mapper (Best 2020 Mapper)</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198150732193.jpg);\"></div>\n                        <p>\n                            Rogdude\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198045559635.jpg);\"></div>\n                        <p>\n                            FatBeanzoop\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198333869741.jpg);\"></div>\n                        <p>\n                            Cerret\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198082797048.jpg);\"></div>\n                        <p>\n                            Nolanimations\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198032879786.jpg);\"></div>\n                        <p>\n                            Teuflum\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198154857191.jpg);\"></div>\n                        <p>\n                            Vilawes\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561197987180921.jpg);\"></div>\n                        <p>\n                            CheckthePan\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198095106486.jpg);\"></div>\n                        <p>\n                            muffin\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198281878350.jpg);\"></div>\n                        <p>\n                            That_Narwhal\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198285246326.jpg);\"></div>\n                        <p>\n                            ComplexFrequency\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #techMapper>\n            <h2>Best Tech Mapper</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198180044686.jpg);\"></div>\n                        <p>\n                            Cooling Closet\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198042919271.jpg);\"></div>\n                        <p>\n                            Cheesydream\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Saut\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198065813548.jpg);\"></div>\n                        <p>\n                            Uninstaller\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/af/afa2ff0e6e96e3603dfa715be825962225a39f15_full.jpg);\"></div>\n                        <p>\n                            MaNaB\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            kizuflux\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198151324194.jpg);\"></div>\n                        <p>\n                            Halcyon\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198362923485.jpg);\"></div>\n                        <p>\n                            Tseska\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198122376182.jpg);\"></div>\n                        <p>\n                            Schwank\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #shitpostMapper>\n            <h2>Best Shitpost/Insane/Crack-Cocaine Mapper</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Sniffyz\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            BBBear\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198165735792.jpg);\"></div>\n                        <p>\n                            bannanentropfen\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198073989976.jpg);\"></div>\n                        <p>\n                            Loloppe\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198082394568.jpg);\"></div>\n                        <p>\n                            CriminalCannoli\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198301082541.jpg);\"></div>\n                        <p>\n                            miitchel\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/oculus.png);\"></div>\n                        <p>\n                            WDG_Mid\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #streamer>\n            <h2>Best Streamer on Twitch</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198005985428.jpg);\"></div>\n                        <p>\n                            Ejiejidayo\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198009689541.jpg);\"></div>\n                        <p>\n                            Bandoot\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198075009026.jpg);\"></div>\n                        <p>\n                            Tempex\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198064659288.jpg);\"></div>\n                        <p>\n                            Denyah\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198187936410.jpg);\"></div>\n                        <p>\n                            Garsh\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/oculus.png);\"></div>\n                        <p>\n                            TheJumpingSheep\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198045386379.jpg);\"></div>\n                        <p>\n                            Duh Hello\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198362923485.jpg);\"></div>\n                        <p>\n                            Tseska\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198089492236.jpg);\"></div>\n                        <p>\n                            ezkills_\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #mixedRealityStreamer>\n            <h2>Best Mixed Reality Streamer on Twitch</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198035698451.jpg);\"></div>\n                        <p>\n                            Mawntee\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198167393974.jpg);\"></div>\n                        <p>\n                            LSToast\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198005025810.jpg);\"></div>\n                        <p>\n                            Krayn\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198178407566.jpg);\"></div>\n                        <p>\n                            Acetari\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198076378031.jpg);\"></div>\n                        <p>\n                            ForeheadFox\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198033166451.jpg);\"></div>\n                        <p>\n                            Silverhaze\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Lyfesaver74\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198101888037.jpg);\"></div>\n                        <p>\n                            WulfgarinDnD\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198031152210.jpg);\"></div>\n                        <p>\n                            Sehria_K\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bestYoutuber>\n            <h2>Best Beat Saber Youtuber</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198009689541.jpg);\"></div>\n                        <p>\n                            Bandoot\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198075009026.jpg);\"></div>\n                        <p>\n                            Tempex\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198005985428.jpg);\"></div>\n                        <p>\n                            Ejejidayo\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198082797048.jpg);\"></div>\n                        <p>\n                            Nolanimations\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Naluluna\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198153055189.jpg);\"></div>\n                        <p>\n                            makeUmove\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://yt3.ggpht.com/ytc/AAUvwngv2ljR_MGhvaMM1nZaXbdz88IQFc9N4D170wcQpw=s88-c-k-c0x00ffffff-no-rj);\"></div>\n                        <p>\n                            omotea\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://www.pcgamesn.com/wp-content/uploads/2019/04/beat-saber-jimmy-fallon.jpg);\"></div>\n                        <p>\n                            Jimmy Fallon from the Tonight Show\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #accAndy>\n            <h2>Best Acc Andy</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198166289091.jpg);\"></div>\n                        <p>\n                            Rocker\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198186151129.jpg);\"></div>\n                        <p>\n                            Pandita\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/oculus.png);\"></div>\n                        <p>\n                            SFK\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198167588802.jpg);\"></div>\n                        <p>\n                            Brylanbbab\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198844720141.jpg);\"></div>\n                        <p>\n                            Vinabby\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198999385463.jpg);\"></div>\n                        <p>\n                            WoltixO\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198138161802.jpg);\"></div>\n                        <p>\n                            Joshabi\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198110018904.jpg);\"></div>\n                        <p>\n                            Whiisper\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bestBoomer>\n            <h2>Best Boomer</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561197978021272.jpg);\"></div>\n                        <p>\n                            Amanatsu\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198077062414.jpg);\"></div>\n                        <p>\n                            Woops\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198011570317.jpg);\"></div>\n                        <p>\n                            OrangeW\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198217008717.jpg);\"></div>\n                        <p>\n                            Magician\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198150732193.jpg);\"></div>\n                        <p>\n                            Rogdude\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198070511128.jpg);\"></div>\n                        <p>\n                            AtomicX\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198156937943.jpg);\"></div>\n                        <p>\n                            Yoshi\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198180044686.jpg);\"></div>\n                        <p>\n                            CoolingCloset\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198040649885.jpg);\"></div>\n                        <p>\n                            RandomKenny\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bsMeme>\n            <h2>Best Beat Saber Related Meme</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg winner\">\n                        <!-- <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/ff9/cb9f1581ff6c09130c991db8823c5953c660688f.jpg);\"></div> -->\n                        <p>\n                            Beat Saber Songs taken literally\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <!-- <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/6bf9/77792ce1f1d03d9089a81c09f3affab6d488229f.jpg);\"></div> -->\n                        <p>\n                            Tom Scott tracking loss\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <!-- <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/5851/31138c054d7ca6b318c8d628015a5ccb996416e0.jpg);\"></div> -->\n                        <p>\n                            Multiplayer (85% done)\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <!-- <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/86e/280be3d96970f0222c75e9ddcffa8880418c8796.jpg);\"></div> -->\n                        <p>\n                            Logan Rank 5\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <!-- <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/53d9/d8cd049712c82d272a2a6643e44cdcfdae040ce0.jpg);\"></div> -->\n                        <p>\n                            BTS release video\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <!-- <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/2c2/ddb478a5ea54861c7059c6dbf8c073ee37b31d65.jpg);\"></div> -->\n                        <p>\n                            World Cup Memes\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <!-- <div class=\"imgWrapper\" style=\"background-image: url(https://gonewiththetwins.com/new/wp-content/uploads/2015/08/shrek.jpg);\"></div> -->\n                        <p>\n                            ppV3 coming out anytime soon\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <!-- <div class=\"imgWrapper\" style=\"background-image: url(https://beatsaver.com/cdn/7580/627ae49b391a5a935eb29c4b9e321effc3900d9e.jpg);\"></div> -->\n                        <p>\n                            LinusTechTips\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <!-- <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/songs/DC13CAE8586AA80AD4241BECDA91C24C842340CE.png);\"></div> -->\n                        <p>\n                            RCTTS, TTFAF, RAP GOD\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #leaderboardGod>\n            <h2>Best LeaderBoard God</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/oculus.png);\"></div>\n                        <p>\n                            Taichi\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198180044686.jpg);\"></div>\n                        <p>\n                            CoolingCloset\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/oculus.png);\"></div>\n                        <p>\n                            Astrella\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198333869741.jpg);\"></div>\n                        <p>\n                            Cerret\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198011570317.jpg);\"></div>\n                        <p>\n                            OrangeW\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198070511128.jpg);\"></div>\n                        <p>\n                            AtomicX\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198154714707.jpg);\"></div>\n                        <p>\n                            bckill\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bestCaster>\n            <h2>Best Caster for Tournaments</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198179181242.jpg);\"></div>\n                        <p>\n                            Bantalope\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198175606462.jpg);\"></div>\n                        <p>\n                            Wolven\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198217008717.jpg);\"></div>\n                        <p>\n                            Magician\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198041191427.jpg);\"></div>\n                        <p>\n                            Mystikmol\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198168188490.jpg);\"></div>\n                        <p>\n                            Kosmos\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198043520886.jpg);\"></div>\n                        <p>\n                            Zander\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198049906407.jpg);\"></div>\n                        <p>\n                            Teapot\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561197992904475.jpg);\"></div>\n                        <p>\n                            Ingorum\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bestLighter>\n            <h2>Best Lighter</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198036226075.jpg);\"></div>\n                        <p>\n                            Aaltopah\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561197999988423.jpg);\"></div>\n                        <p>\n                            ExUnreal\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198094952732.jpg);\"></div>\n                        <p>\n                            TheRealZeroz\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198067735340.jpg);\"></div>\n                        <p>\n                            Skeelie\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Aeroluna\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198114011987.jpg);\"></div>\n                        <p>\n                            Oddloop\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198976682243.jpg);\"></div>\n                        <p>\n                            Pixelguy\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Loloppe (Lolighter)\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bestTournament>\n            <h2>Best Tournament</h2>\n            <div class=\"tourneyNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://cdn.discordapp.com/icons/634814324405305392/7dfeb4a698ba86d708d38c67743c99d5.webp?size=128);\"></div>\n                        <p>\n                            Beat Saber World Cup\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(/assets/images/2147484041.webp);\"></div>\n                        <p>\n                            BeatKhana!'s Rumble Royale\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(/assets/images/2147484171.webp);\"></div>\n                        <p>\n                            BeatKhana!'s Random Song Tournament\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(/assets/images/2147484184.webp);\"></div>\n                        <p>\n                            The Beat Saber League\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(/assets/images/2147484071.webp);\"></div>\n                        <p>\n                            Shitmiss City\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(/assets/images/2147484131.webp);\"></div>\n                        <p>\n                            The Accuracy League\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(/assets/images/2147484182.webp);\"></div>\n                        <p>\n                            Vision Block\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(/assets/images/2147484187.webp);\"></div>\n                        <p>\n                            Hidden Sabers\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://media.discordapp.net/attachments/441807344591044619/582061239061184522/SSS_Orange_Wide.png?width=641&height=198);\"></div>\n                        <p>\n                            Summer Saber Stars\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bestMascot>\n            <h2>Best Mascot</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://cdn.discordapp.com/emojis/606610063641280522.png?v=1);\"></div>\n                        <p>\n                            Akane\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://cdn.discordapp.com/emojis/606610948580573186.png?v=1);\"></div>\n                        <p>\n                            Kanade\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://cdn.discordapp.com/emojis/627577894125699082.png?v=1);\"></div>\n                        <p>\n                            Bill\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://cdn.discordapp.com/emojis/627577877982085120.png?v=1);\"></div>\n                        <p>\n                            Paul\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://cdn.discordapp.com/emojis/638440635103182869.png?v=1);\"></div>\n                        <p>\n                            CMB\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bestSaberMaker>\n            <h2>Best Saber Maker</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198257978632.jpg);\"></div>\n                        <p>\n                            Mdot\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198084359108.jpg);\"></div>\n                        <p>\n                            Altair\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198146373924.jpg);\"></div>\n                        <p>\n                            Okachamie\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198335894744.jpg);\"></div>\n                        <p>\n                            Parapass\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/oculus.png);\"></div>\n                        <p>\n                            Raphpower\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198006074656.jpg);\"></div>\n                        <p>\n                            Hooi\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Thot Dog\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bestBlockMaker>\n            <h2>Best Block Maker</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198076664624.jpg);\"></div>\n                        <p>\n                            Bobbie\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/404.jpg);\"></div>\n                        <p>\n                            Headassbtw\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/oculus.png);\"></div>\n                        <p>\n                            Raphpower\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198335894744.jpg);\"></div>\n                        <p>\n                            Parapass\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bestMod>\n            <h2>Best Mod</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Camera+\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            SaberTailor\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            ScoreSaber\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            HitScoreVisualizer\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            SongBrowser\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Intro Skip\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Noodle Extensions\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Mapping Extensions\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Custom Avatars\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Particle Overdrive\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #worstMenu>\n            <h2>Worst Beat Saber Menu</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Beta Menu (Pre 0.13.0)\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Full Release Menu (Post 0.13.0)\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Post Multiplayer Menu (1.12.1)\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bestFurry>\n            <h2>Best Furry</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198019856958.jpg);\"></div>\n                        <p>\n                            Cyansnow\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198063268251.jpg);\"></div>\n                        <p>\n                            Moon\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198041649354.jpg);\"></div>\n                        <p>\n                            Interz\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198070511128.jpg);\"></div>\n                        <p>\n                            AtomicX\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bestVoice>\n            <h2>Best Voice</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/oculus.png);\"></div>\n                        <p>\n                            Astrella\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198374798540.jpg);\"></div>\n                        <p>\n                            Ptopa\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198045386379.jpg);\"></div>\n                        <p>\n                            Duh Hello (dikke bmw)\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198044562405.jpg);\"></div>\n                        <p>\n                            Flee\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198175606462.jpg);\"></div>\n                        <p>\n                            Wolven\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bestClan>\n            <h2>Best Clan</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            FOAA\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            WDG\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            ACC\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Ball Sack Gaming\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            YEP\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            PWTFAATC Clan\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            FNAF Gaming\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            -VGN-\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            TN\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n        <div #bestModder>\n            <h2>Best Modder</h2>\n            <div class=\"mapNominees\">\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg winner\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Kyle1413\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198076664624.jpg);\"></div>\n                        <p>\n                            Bobbie\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198088728803.jpg);\"></div>\n                        <p>\n                            AurosVR\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198183820433.jpg);\"></div>\n                        <p>\n                            Pink\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198036338094.jpg);\"></div>\n                        <p>\n                            Shadnix\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Toni Macaroni\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Caeden117\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee noImg\">\n                        <div class=\"imgWrapper\" style=\"background-image: url();\"></div>\n                        <p>\n                            Megalon\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198063268251.jpg);\"></div>\n                        <p>\n                            Moon\n                        </p>\n                    </div>\n                </a>\n                <a target=\"_blank\">\n                    <div class=\"nominee\">\n                        <div class=\"imgWrapper\" style=\"background-image: url(https://scoresaber.com/imports/images/usr-avatars/76561198337126899.jpg);\"></div>\n                        <p>\n                            Lillie\n                        </p>\n                    </div>\n                </a>\n            </div>\n        </div>\n\n    </div>\n</section>","<div *ngIf=\"loading else loaded\">\n    <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 100px;\">\n</div>\n\n<ng-template #loaded>\n    <div class=\"container\">\n        <div class=\"card noHover\">\n            <div class=\"card-body\">\n                <h1>Badges</h1>\n                <table mat-table [dataSource]=\"badges\" class=\"card-text\">\n                    <ng-container matColumnDef=\"image\">\n                        <th mat-header-cell *matHeaderCellDef> </th>\n                        <td mat-cell *matCellDef=\"let badge\">\n                            <img src=\"/assets/badges/{{badge.image}}.png\" alt=\"\" srcset=\"\">\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"description\">\n                        <th mat-header-cell *matHeaderCellDef> Description </th>\n                        <td mat-cell *matCellDef=\"let badge\"> {{badge.description}} </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"edit\">\n                        <th mat-header-cell *matHeaderCellDef> </th>\n                        <td mat-cell *matCellDef=\"let badge\">\n                            <button mat-button color=\"primary\" (click)=\"editBadge(badge)\">Edit</button>\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"delete\">\n                        <th mat-header-cell *matHeaderCellDef> </th>\n                        <td mat-cell *matCellDef=\"let badge\">\n                            <button mat-button color=\"warn\" (click)=\"delteBadge(badge)\">Delete</button>\n                        </td>\n                    </ng-container>\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                </table>\n\n                <button mat-stroked-button color=\"primary\" (click)=\"createBadge()\">Create Badge</button>\n            </div>\n        </div>\n    </div>\n</ng-template>","import { Component, OnInit } from '@angular/core';\nimport { AppComponent } from '../app.component';\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport { CreateBadgeComponent } from '../_modals/create-badge/create-badge.component';\n\n@Component({\n    selector: 'app-badges',\n    templateUrl: './badges.component.html',\n    styleUrls: ['./badges.component.scss']\n})\nexport class BadgesComponent extends AppComponent implements OnInit {\n\n    loading = true;\n\n    badges: any = [];\n\n    displayedColumns: string[] = ['image', 'description', 'edit', 'delete'];\n\n    async ngOnInit(): Promise<void> {\n        this.badges = await this.http.get(`/api/badges`).toPromise();\n        this.loading = false;\n    }\n\n    createBadge() {\n        const dialog = this.dialog.open(CreateBadgeComponent, {\n            minWidth: '50vw',\n            // width: '50vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw'\n        });\n\n        dialog.afterClosed()\n            .subscribe(async data => {\n                this.badges = await this.http.get(`/api/badges`).toPromise();\n            });\n    }\n\n    editBadge(badge) {\n        const dialog = this.dialog.open(CreateBadgeComponent, {\n            minWidth: '50vw',\n            // width: '50vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: badge\n        });\n\n        dialog.afterClosed()\n            .subscribe(async data => {\n                this.badges = await this.http.get(`/api/badges`).toPromise();\n            });\n    }\n\n    delteBadge(badge) {\n        const dialog = this.dialog.open(ConfirmDialogComponent, {\n            // height: '400px',\n            width: '400px',\n            data: {\n                cancelText: 'Cancel',\n                confirmText: 'Delete',\n                message: 'Are you sure you want to delete, this cannot be undone',\n                title: 'Delete Badge?'\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(async data => {\n                if (data) {\n                    try {\n                        await this.http.delete(`/api/badge/${badge.id}`).toPromise();\n                        this.notif.showSuccess('', 'Successfully deleted badge');\n                        this.badges = await this.http.get(`/api/badges`).toPromise();\n                    } catch (error) {\n                        console.error(\"Error: \", error);\n                        this.notif.showError('', 'Error deleting badge');\n                    }\n                }\n            });\n    }\n\n}\n","<div class=\"card-body\">\n    <h1>{{tournament.name}}</h1>\n    <h3>Bracket</h3>\n    <br>\n    <div *ngIf=\"loading\">\n        <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n            margin-left: auto;\n            margin-right: auto;\n            width: 70px;\n            border: none;\">\n    </div>\n\n    <div id=\"svgContainer\" [hidden]=\"loading || bracketData.length == 0\">\n        <svg id=\"bracket-svg\" class=\"bracket-svg\" width=\"1985\" height=\"1042\" viewBox=\"0 0 1985 1042\"> </svg>\n    </div>\n    <h5 [hidden]=\"bracketData.length != 0 || loading\">This tournament currently does not have a bracket</h5>\n    <button mat-stroked-button color=\"primary\" *ngIf=\"isAuth\" (click)=\"genBracket()\">{{btnText}}</button>\n</div>","<h1>Match Info</h1>\n<div class=\"matchInfo\" *ngIf=\"data.p1.name != null\">\n  <div>\n    <img class=\"userImg\" src=\"https://cdn.discordapp.com/avatars/{{data.p1.id}}{{data.p1.avatar}}\" style=\"float: left;\">\n    <p class=\"playerText\" style=\"float: left;\">\n      <a routerLink=\"/user/{{data.p1.id}}\" class=\"playerName\"\n        [ngClass]=\"{'winner' : (data.status == 'complete' && data.p1.score > data.p2.score), 'loser': (data.status == 'complete' && data.p1.score < data.p2.score)}\"\n        mat-dialog-close>{{data.p1.name || data.p1.id}} </a>\n      <span class=\"playerName\"\n        [ngClass]=\"{'winner' : (data.status == 'complete' && data.p1.score > data.p2.score), 'loser': (data.status == 'complete' && data.p1.score < data.p2.score)}\">&nbsp;\n        [{{data.p1.score}}]</span>\n      <br> <b>Global Rank:</b> {{data.p1.rank}}\n      <br> <b>Seed:</b> {{data.p1.seed}}\n      <br> <b>Country:</b> {{data.p1.country | uppercase}}\n      <img class=\"participantFlag\" src=\"\\assets/flags/{{data.p1.country}}.png\" alt=\"{{data.p1.country}} Flag\"\n        style=\"height: 20px;border: none;\"><br>\n    </p>\n    <div class=\"twitch\" id='P1twitch'></div>\n  </div>\n  <div>\n    <img class=\"userImg\" src=\"https://cdn.discordapp.com/avatars/{{data.p2.id}}{{data.p2.avatar}}\"\n      style=\"float: right;\">\n    <p class=\"playerText\" style=\"float: right;text-align: right;\">\n      <a routerLink=\"/user/{{data.p2.id}}\" class=\"playerName\" style=\"float: right\"\n        [ngClass]=\"{'winner' : (data.status == 'complete' && data.p1.score < data.p2.score), 'loser': (data.status == 'complete' && data.p1.score > data.p2.score)}\"\n        mat-dialog-close> {{data.p2.name || data.p2.id}}</a>\n      <span class=\"playerName\"\n        [ngClass]=\"{'winner' : (data.status == 'complete' && data.p1.score < data.p2.score), 'loser': (data.status == 'complete' && data.p1.score > data.p2.score)}\">[{{data.p2.score}}]\n        &nbsp;</span>\n      <br> <b>Global Rank:</b> {{data.p2.rank}}\n      <br> <b>Seed:</b> {{data.p2.seed}}\n      <br> <b>Country:</b> {{data.p2.country | uppercase}}\n      <img class=\"participantFlag\" src=\"\\assets/flags/{{data.p2.country}}.png\" alt=\"{{data.p2.country}} Flag\"\n        style=\"height: 20px;border: none;\"><br>\n    </p>\n    <div class=\"twitch\" id='P2twitch'>\n      <!-- <iframe frameborder=\"0\" scrolling=\"no\" [src]=\"sanitize('https://player.twitch.tv/?channel='+data.p2Twitch+'&autoplay=true')\" height=\"100%\" width=\"100%\">\n            </iframe> -->\n    </div>\n  </div>\n</div>\n<div class=\"matchInfo\" *ngIf=\"data.p1.name == null && data.p1 != null\">\n  <div>\n    <p class=\"playerText\" style=\"float: left;\">\n      <span class=\"playerName\"\n        [ngClass]=\"{'winner' : (data.status == 'complete' && data.p1.score > data.p2.score), 'loser': (data.status == 'complete' && data.p1.score < data.p2.score)}\">{{data.p1.id}}\n        [{{data.p1.score}}] &nbsp;</span>\n    </p>\n  </div>\n  <div>\n    <p class=\"playerText\" style=\"float: right;text-align: right;\">\n      <span class=\"playerName\"\n        [ngClass]=\"{'winner' : (data.status == 'complete' && data.p1.score < data.p2.score), 'loser': (data.status == 'complete' && data.p1.score > data.p2.score)}\">{{data.p2.id}}\n        [{{data.p2.score}}] &nbsp;</span>\n    </p>\n  </div>\n</div>\n<p class=\"card-text\">\n  <ng-container *ngIf=\"data.time != null\">\n    <br>\n    <b>Scheduled Time:</b> {{data.time | date: 'd/MM/yy, h:mm a (zz)'}}\n  </ng-container>\n</p>\n\n<form [formGroup]=\"scoreForm\" novalidate *ngIf=\"data.isAuth\">\n  <!-- Value: {{ signUpForm.value | json }} -->\n  <br>\n  <mat-form-field class=\"fill\" style=\"width: 49%; float: left;\">\n    <mat-label *ngIf=\"data.p1.name || data.p1.id != null\">{{data.p1.name || data.p1.id}}'s Score</mat-label>\n    <!-- <mat-label *ngIf=\"data.p1 != null && data.p1.name || data.p1.id == null\">{{data.p1}}'s Score</mat-label> -->\n    <input matInput formControlName=\"p1Score\" autocomplete=\"off\">\n  </mat-form-field>\n  <!-- <br> -->\n  <mat-form-field class=\"fill\" style=\"width: 49%; float: right;\">\n    <mat-label *ngIf=\"data.p2.name || data.p2.id != null\">{{data.p2.name || data.p2.id}}'s Score</mat-label>\n    <!-- <mat-label *ngIf=\"data.p2 != null && data.p2.name || data.p2.id == null\">{{data.p2}}'s Score</mat-label> -->\n    <input matInput formControlName=\"p2Score\" autocomplete=\"off\">\n  </mat-form-field>\n  <br>\n  <div mat-dialog-actions style=\"display: block;\">\n    <!-- <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button> -->\n    <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"scoreForm.invalid\"\n      (click)=\"onSubmit('update')\">Update Match</button>\n    <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"scoreForm.invalid\"\n      (click)=\"onSubmit('complete')\">Complete Match</button>\n  </div>\n  <br>\n</form>\n<ng-container *ngIf=\"data.isAuth\">\n  <mat-form-field style=\"width:30%\">\n    <input matInput [ngxMatDatetimePicker]=\"picker\" id=\"matchTime\" placeholder=\"Choose a date\" (focus)=\"picker.open()\"\n      (click)=\"picker.open()\" readonly>\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n    <ngx-mat-datetime-picker #picker [defaultTime]=\"[12,0,0]\">\n    </ngx-mat-datetime-picker>\n  </mat-form-field> &nbsp;\n  <button mat-stroked-button color=\"primary\" type=\"button\" (click)=\"scheduleMatch()\">Update Time</button> &nbsp;\n  <br><br>\n  <mat-form-field class=\"fill\" style=\"width: 10%\">\n    <mat-label>Best of</mat-label>\n    <input matInput [value]=\"bestOf\" (input)=\"bestOf = $event.target.value\" autocomplete=\"off\">\n  </mat-form-field> &nbsp;\n  <button mat-stroked-button color=\"primary\" type=\"button\" (click)=\"updateBestOf()\">Update</button> &nbsp;\n  <br>\n  <button mat-stroked-button color=\"primary\" type=\"button\" (click)=\"close()\"\n    routerLink=\"/overlay/{{data.tournamentId}}/bracket/{{data.id}}\">Overlay</button> &nbsp;\n  <button mat-stroked-button color=\"primary\" type=\"button\" (click)=\"editMatch()\">Edit Match</button> &nbsp;\n  <br>\n  <br>\n  <hr>\n  <br>\n</ng-container>\n<br>\n<button mat-stroked-button color=\"primary\" type=\"submit\" (click)=\"theatre()\">{{theatreBtn}}</button> &nbsp; <button\n  mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n","<h1>Generate Bracket</h1>\n<form [formGroup]=\"bracketGenForm\" novalidate (ngSubmit)=\"onSubmit()\">\n    <!-- Value: {{ bracketGenForm.value | json }} -->\n    <p class=\"card-text\">\n        By generating a bracket you will completely wipe the existing bracket (if there is one).\n    </p>\n    <br>\n    <mat-checkbox formControlName=\"custom\" [disabled]=\"bracketGenForm.value.manual\">\n        Custom Users\n    </mat-checkbox>\n    <br>\n    <mat-checkbox formControlName=\"manual\" [disabled]=\"bracketGenForm.value.custom\">\n        Manually Select Users\n    </mat-checkbox>\n    <br><br>\n\n    <p class=\"card-text\" *ngIf=\"bracketGenForm.value.custom\">\n        By selecting custom users you overwrite any signed up users and users will not have their progress recorded.\n        <br> Other tournament bracket settings will also apply here such as the player limit and random sort\n        <br> If this is your intention then continue by adding each seperate player name on a new line below.\n    </p>\n    <mat-form-field *ngIf=\"bracketGenForm.value.custom\">\n        <mat-label>Enter each user on a new line</mat-label>\n        <textarea matInput rows=\"8\" formControlName=\"players\"></textarea>\n    </mat-form-field>\n\n    <ng-container *ngIf=\"bracketGenForm.value.manual\">\n        <mat-form-field *ngFor=\"let item of [].constructor(bracketGenForm.value.users?.length + 1); let i = index;\">\n            <mat-label>Seed {{i+1}}</mat-label>\n            <input type=\"text\" (focus)=\"updateLastEvent($event.target.value)\" (input)=\"updateFilter($event.target.value)\" matInput [matAutocomplete]=\"auto\">\n            <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"updatePlayers($event)\" [displayWith]=\"displayFn.bind(this)\">\n                <mat-option *ngFor=\"let option of filteredOptions\" [value]=\"option.discordId\">\n                    {{option.name}}\n                </mat-option>\n            </mat-autocomplete>\n        </mat-form-field>\n    </ng-container>\n\n    <div mat-dialog-actions>\n        <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"bracketGenForm.invalid\">Generate</button>\n    </div>\n</form>","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Observable } from 'rxjs';\nimport { AppComponent } from '../app.component';\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport { NotificationService } from '../services/toast.service';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\nimport { bracketMatch } from '../_models/bracket.model';\nimport { map, startWith } from 'rxjs/operators';\nimport { EditBracketMatchComponent } from '../_modals/edit-bracket-match/edit-bracket-match.component';\n\n@Component({\n    selector: 'app-bracket',\n    templateUrl: './bracket.component.html',\n    styleUrls: ['./bracket.component.scss']\n})\nexport class BracketComponent extends AppComponent implements OnInit {\n\n    private url = '/api/tournament';\n    @Input() tournament;\n    public tourneyId: string;\n\n    ws: WebSocketSubject<any> = webSocket(`${location.protocol == 'http:' ? 'ws' : 'wss'}://` + location.host + '/api/ws');\n\n    bracketData = [];\n    loading = true;\n\n    isAuth = false;\n    btnText = 'Generate Bracket';\n\n    interval;\n\n    ngOnInit(): void {\n        this.initSettings();\n        let node = document.createElement('script');\n        node.src = 'https://embed.twitch.tv/embed/v1.js';\n        node.type = 'text/javascript';\n        document.getElementsByTagName('head')[0].appendChild(node);\n        this.ws.subscribe(\n            msg => {\n                if (msg.bracketMatch) this.updateDrawnMatch(msg.bracketMatch);\n            },\n            err => console.log(err)\n        );\n        this.ws.next({ setTournament: this.tournament.tournamentId });\n    }\n\n    ngOnDestroy() {\n        clearInterval(this.interval);\n        this.ws.complete();\n    }\n\n    async initSettings() {\n        // const matchesData: any = await this.http.get(`/api/tournament/${this.tournament.tournamentId}/bracketTest`).toPromise();\n        const matchesData: any = await this.http.get(`/api/tournament/${this.tournament.tournamentId}/bracket`).toPromise();\n        this.bracketData = matchesData;\n        if (matchesData.length > 0) {\n            this.btnText = 'Regenerate Bracket';\n        }\n        // const usr: any = await this.http.get(`/api/user`).toPromise();\n        const usr: any = await this.userS.curUser();\n        this.user = usr != null ? usr : null;\n        // console.log(this.user);\n        if (this.user != null && (this.user.roleIds.includes(\"1\") || this.tournament.owner == this.user.discordId)) {\n            this.isAuth = true;\n        }\n\n        if (matchesData.length > 0) BracketComponent.generateMatches(this.bracketData, this.intervalIteration);\n        BracketComponent.generateLabels(this.bracketData);\n        this.intervalIteration = 1;\n        // console.log(matchesData.filter(x => x.round == 0).length);\n        // console.log(matchesData)\n        let matchElements = document.getElementsByClassName('match');\n        for (let i = 0; i < matchElements.length; i++) {\n            const element = matchElements[i];\n            element.addEventListener(\"click\", () => this.updateMatch(element.getAttribute('data-matchid')))\n        }\n        this.loading = false;\n    }\n\n    async updateBracket() {\n        // const matchesData: any = await this.http.get(`/api/tournament/${this.tournament.tournamentId}/bracketTest`).toPromise();\n        const matchesData: any = await this.http.get(`/api/tournament/${this.tournament.tournamentId}/bracket`).toPromise();\n        this.bracketData = matchesData;\n\n        if (matchesData.length > 0) BracketComponent.generateMatches(this.bracketData, this.intervalIteration);\n        BracketComponent.generateLabels(this.bracketData);\n\n        let matchElements = document.getElementsByClassName('match');\n        for (let i = 0; i < matchElements.length; i++) {\n            const element = matchElements[i];\n            element.addEventListener(\"click\", () => this.updateMatch(element.getAttribute('data-matchid')))\n        }\n\n        this.loading = false;\n    }\n\n    async genBracket() {\n        const dialog = this.dialog.open(generateBracketDialog, {\n            minWidth: '50vw',\n            // width: '50vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: this.tournament\n        });\n\n        dialog.afterClosed()\n            .subscribe(async data => {\n                this.updateBracket();\n            });\n    }\n\n    updateMatch(id) {\n        const dialog = this.dialog.open(updateMatchDialog, {\n            minWidth: '60vw',\n            width: '60vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            panelClass: 'matchPanel',\n            data: { ...this.bracketData.find(x => x.id == id), isAuth: this.isAuth }\n        });\n\n        dialog.afterClosed()\n            .subscribe(data => {\n                if (data) {\n                    this.initSettings();\n                }\n            })\n    }\n\n    updateDrawnMatch(data: bracketMatch) {\n        let matchElem = document.getElementById(data.id);\n        let index = this.bracketData.findIndex(x => x.id == data.id);\n        this.bracketData[index] = { ...this.bracketData[index], ...data };\n        matchElem.querySelector('.pName.p1').innerHTML = data.p1.name || data.p1.id;\n        matchElem.querySelector('.pName.p2').innerHTML = data.p2.name || data.p2.id;\n        BracketComponent.generateLabels(this.bracketData);\n        if (data.status == 'in_progress') {\n            (<SVGPathElement>matchElem.querySelector('.in_progress')).style.display = 'inline';\n        } else {\n            (<SVGPathElement>matchElem.querySelector('.in_progress')).style.display = 'none';\n        }\n        if (data.p1.score != data.p2.score && data.status == 'complete') {\n            matchElem.querySelector('.pScore.p1')?.classList.remove('winner');\n            matchElem.querySelector('.pScore.p1')?.classList.remove('loser');\n            matchElem.querySelector('.pScore.p2')?.classList.remove('winner');\n            matchElem.querySelector('.pScore.p2')?.classList.remove('loser');\n            if (data.p1.score > data.p2.score) {\n                matchElem.querySelector('.pScore.p1')?.classList.add('winner');\n                matchElem.querySelector('.pScore.p2')?.classList.add('loser');\n            } else {\n                matchElem.querySelector('.pScore.p1')?.classList.add('loser');\n                matchElem.querySelector('.pScore.p2')?.classList.add('winner');\n            }\n        }\n\n        if (data.p1.score != 0 || (data.status == 'in_progress' || data.status == 'complete')) matchElem.querySelector('.pScore.p1').innerHTML = data.p1.score.toString();\n        if (data.p2.score != 0 || (data.status == 'in_progress' || data.status == 'complete')) matchElem.querySelector('.pScore.p2').innerHTML = data.p2.score.toString();\n\n        matchElem.querySelector('.img.p1')?.setAttribute('href', data.p1.avatar ? `href=\"https://cdn.discordapp.com/avatars/${data.p1.id}${data.p1.avatar}\"` : '');\n        matchElem.querySelector('.img.p2')?.setAttribute('href', data.p2.avatar ? `href=\"https://cdn.discordapp.com/avatars/${data.p2.id}${data.p2.avatar}\"` : '');\n        matchElem.classList.remove('hidden');\n        let lineElem = document.querySelectorAll(`[data-round=\"${data.round}\"][data-match=\"${data.matchNum}\"]`);\n        for (const line of lineElem) line.classList.remove('hidden');\n        if (data.bye) {\n            matchElem.classList.add('hidden');\n            for (const line of lineElem) line.classList.add('hidden');\n        }\n    }\n\n    matches = [];\n    winnersMatches = [];\n    losersMatches = [];\n\n    intervalIteration = 0;\n\n    static generateMatches(bracketMatches, intervalIteration) {\n        const slider: any = document.querySelector('#svgContainer');\n        let isDown = false;\n        let startX;\n        let scrollLeft;\n        let startY;\n        let scrollDown;\n\n        slider.addEventListener('mousedown', (e: any) => {\n            isDown = true;\n            document.getElementById(\"bracket-svg\").style.cursor = \"grabbing\";\n            slider.classList.add('active');\n            startX = e.pageX - slider.offsetLeft;\n            startY = e.pageY - slider.offsetTop;\n            scrollLeft = slider.scrollLeft;\n            scrollDown = slider.scrollTop;\n        });\n        slider.addEventListener('mouseleave', () => {\n            isDown = false;\n            slider.classList.remove('active');\n        });\n        slider.addEventListener('mouseup', () => {\n            isDown = false;\n            document.getElementById(\"bracket-svg\").style.cursor = \"grab\";\n            slider.classList.remove('active');\n        });\n        slider.addEventListener('mousemove', (e) => {\n            if (!isDown) return;\n            e.preventDefault();\n            const x = e.pageX - slider.offsetLeft;\n            const walk = (x - startX); //scroll-fast\n            const y = e.pageY - slider.offsetTop;\n            const walk2 = (y - startY);\n            slider.scrollLeft = scrollLeft - walk;\n            slider.scrollTop = scrollDown - walk2;\n            // console.log(walk);\n        });\n\n        // this.firstId = data[0].id;\n\n        const svgMain = document.createElement('svg');\n        svgMain.setAttribute('id', \"bracket-svg\");\n        svgMain.classList.add('\"bracket-svg\"');\n\n        var matches = {};\n\n        for (let i = 0; i < bracketMatches.length; i++) {\n            const element = bracketMatches[i];\n            // console.log(element);\n            // matches\n            if (!matches[element['round']]) {\n                matches[element['round']] = [];\n            }\n\n            matches[element['round']].push(element);\n            // this.gMatches.push(element);\n        }\n\n        // console.log(matches);\n\n\n        var singleMatchRound;\n\n        const winnersMatches = [];\n        const iterator = Object.keys(matches);\n        for (const key of iterator) {\n            if (+key >= 0) {\n                winnersMatches.push(matches[key]);\n            }\n        }\n\n        const losersMatches = [];\n        for (const key of iterator) {\n            if (+key < 0) {\n                losersMatches.push(matches[key]);\n            }\n        }\n\n        const height = losersMatches.length > 0 ? winnersMatches[0].length * 60 + losersMatches[0].length * 60 + 200 : winnersMatches[0].length * 60 + 200;\n        const width = losersMatches.length > 0 ? losersMatches.length * 200 + 150 : winnersMatches.length * 200 + 150;\n\n        svgMain.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n        svgMain.setAttribute(\"width\", `${width}`);\n        svgMain.setAttribute(\"height\", `${height}`);\n        svgMain.style.minWidth = width + 220 + 'px';\n\n        document.getElementById('svgContainer').setAttribute(\"style\", `height:${height}px`);\n\n        // console.log(winnersMatches);\n        // console.log(losersMatches);\n\n        for (let i = 0; i < Object.keys(matches).length; i++) {\n            const round = matches[i];\n            if (round.length == 1) {\n                singleMatchRound = i;\n                break;\n            }\n        }\n\n        for (let i = 0; i < winnersMatches.length; i++) {\n            const round = matches[i];\n            const gRound = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n            gRound.setAttribute(\"transform\", \"translate(\" + (i * 220 - 100) + \", 30)\");\n            // gRound.setAttribute(\"data-matchId\", match['id']);\n            gRound.classList.add('round-' + i);\n\n            for (let j = 0; j < round.length; j++) {\n                const match = round[j];\n                let svgMatch = BracketComponent.createSvgMatch(j, match, bracketMatches, round, singleMatchRound, intervalIteration, false);\n                gRound.appendChild(svgMatch);\n            }\n            svgMain.appendChild(gRound);\n        }\n\n        let loserMatchCounter = 0;\n        for (let i = 0; i < losersMatches.length; i++) {\n            const round = losersMatches[i];\n            if (round.filter(x => !x.bye).length == 0) continue;\n            const gRound = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n            gRound.setAttribute(\"transform\", \"translate(\" + (loserMatchCounter * 220 - 100) + \", \" + (winnersMatches[0].length * 60 + 150) + \")\");\n            gRound.classList.add('round-' + loserMatchCounter);\n            gRound.classList.add('losers');\n            for (let j = 0; j < round.length; j++) {\n                const match: bracketMatch = round[j];\n                let svgMatch = BracketComponent.createSvgMatch(j, match, bracketMatches, round, singleMatchRound, intervalIteration, true);\n                gRound.appendChild(svgMatch);\n            }\n            svgMain.appendChild(gRound);\n            loserMatchCounter++;\n        }\n\n        const gLines = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n        gLines.classList.add('lines');\n        const gHeaders = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n        gHeaders.classList.add('headers');\n        // console.log(bracketMatches)\n        for (let i = 0; i < winnersMatches.length - 1; i++) {\n            const round = matches[i];\n\n            for (let j = 0; j < round.length; j++) {\n                const match = round[j];\n                var multi = i != 0 ? (60 * (2 ** i)) : 60;\n                // var startPos = 0.5 * (2 ** i) * 60;\n                var startPos = round.length != 1 ? 0.5 * (2 ** i) * 60 + 30 : 0.5 * (2 ** singleMatchRound) * 60 + 30;\n\n                let curY = (multi * j) + startPos + 10;\n                let curX = (i * 220 - 100) + 184;\n\n                var multi2 = (i + 1) != 0 ? (60 * (2 ** (i + 1))) : 60;\n                var startPos2 = round.length != 1 ? 0.5 * (2 ** (i + 1)) * 60 + 30 : 0.5 * (2 ** singleMatchRound) * 60 + 30;\n\n                let nextY = (multi2 * Math.floor(j / 2)) + startPos2 + 10;\n                let nextX = ((i + 1) * 220 - 100);\n\n                let xDist = nextX - curX;\n                let yDist = nextY - curY;\n                let matchLine = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n                matchLine.setAttribute('d', `M${curX} ${curY} l${xDist / 4} 0 l${xDist / 2} ${yDist} l${xDist / 4} 0`);\n                matchLine.setAttribute('stroke-width', \"1px\");\n                matchLine.classList.add(\"matchLine\");\n                // matchLine.setAttribute(\"data\", `round: '${i + 1}', match: '${Math.floor(j / 2)}'`);\n                matchLine.dataset.round = (i + 1).toString();\n                matchLine.dataset.match = Math.floor(j / 2).toString();\n                if (match['bye'] || (winnersMatches[i + 1][Math.floor(j / 2)] != undefined && winnersMatches[i + 1][Math.floor(j / 2)]['bye'])) {\n                    matchLine.classList.add(\"hidden\");\n                }\n                if (intervalIteration > 0) {\n                    matchLine.classList.add('noAnim');\n                }\n                gLines.appendChild(matchLine);\n            }\n\n            const roundLabel = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n            roundLabel.setAttribute(\"transform\", \"translate(\" + (i * 220 - 100) + \", 0)\");\n            const labelRect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n            labelRect.setAttribute(\"width\", '184');\n            labelRect.setAttribute(\"height\", '30');\n            labelRect.classList.add('labelBox');\n            labelRect.classList.add('matchPath');\n            if (intervalIteration > 0) {\n                labelRect.classList.add('noAnim');\n            }\n            roundLabel.appendChild(labelRect);\n            const labelText = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n            labelText.classList.add('labelText');\n            labelText.setAttribute(\"x\", '95');\n            labelText.setAttribute(\"y\", '21');\n            labelText.setAttribute(\"height\", '15');\n            labelText.setAttribute(\"width\", '190');\n            labelText.setAttribute(\"text-anchor\", \"middle\");\n            labelText.innerHTML = \"Round \" + (i + 1);\n            roundLabel.appendChild(labelText);\n            gHeaders.appendChild(roundLabel);\n\n        }\n\n        let i = 0;\n        for (let loserMatchCounter = 0; loserMatchCounter < losersMatches.length - 1; loserMatchCounter++) {\n            const round = losersMatches[loserMatchCounter];\n            if (round.filter(x => !x.bye).length <= 0) continue;\n            for (let j = 0; j < round.length; j++) {\n                const match: bracketMatch = round[j];\n                var multi = i != 0 ? (60 * (2 ** Math.floor(loserMatchCounter / 2))) : 60;\n                // var startPos = 0.5 * (2 ** i) * 60;\n                var startPos = round.length != 1 ? 0.5 * (2 ** Math.floor(loserMatchCounter / 2)) * 60 + (winnersMatches[0].length * 60 + 150) : 0.5 * (2 ** (Math.floor(singleMatchRound / 2) + 1)) * 60 + (winnersMatches[0].length * 60 + 150);\n\n                let curY = (multi * j) + startPos + 10;\n                let curX = (i * 220 - 100) + 184;\n\n                var multi2 = (i + 1) != 0 ? (60 * (2 ** (Math.floor(i / 2) + 1))) : 60;\n                var startPos2 = round.length != 1 ? 0.5 * (2 ** (Math.floor(i / 2) + 1)) * 60 + (winnersMatches[0].length * 60 + 150) : 0.5 * (2 ** (Math.floor(singleMatchRound / 2) + 1)) * 60 + (winnersMatches[0].length * 60 + 150);\n\n                let nextY = (multi2 * Math.floor(j / 2)) + startPos2 + 10;\n                let nextX = ((i + 1) * 220 - 100);\n\n                let xDist = nextX - curX;\n                let yDist = nextY - curY;\n                let matchLine = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n                if (loserMatchCounter % 2 == 1) {\n                    matchLine.setAttribute('d', `M${curX} ${curY} l${xDist / 4} 0 l${xDist / 2} ${yDist} l${xDist / 4} 0`);\n                } else {\n                    matchLine.setAttribute('d', `M${curX} ${curY} l${xDist} 0`);\n                }\n                matchLine.setAttribute('stroke-width', \"1px\");\n                matchLine.classList.add(\"matchLine\");\n                matchLine.dataset.round = (i + 1).toString();\n                matchLine.dataset.match = Math.floor(j / 2).toString();\n                if (match['bye'] || (losersMatches[loserMatchCounter + 1][Math.floor(j / 2)] != undefined && losersMatches[loserMatchCounter + 1][Math.floor(j / 2)]['bye'])) {\n                    matchLine.classList.add(\"hidden\");\n                }\n                if (intervalIteration > 0) {\n                    matchLine.classList.add('noAnim');\n                }\n                gLines.appendChild(matchLine);\n            }\n\n            const roundLabel = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n            roundLabel.setAttribute(\"transform\", \"translate(\" + (i * 220 - 100) + \", \" + (winnersMatches[0].length * 60 + 120) + \")\");\n            const labelRect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n            labelRect.setAttribute(\"width\", '184');\n            labelRect.setAttribute(\"height\", '30');\n            labelRect.classList.add('labelBox');\n            labelRect.classList.add('matchPath');\n            if (intervalIteration > 0) {\n                labelRect.classList.add('noAnim');\n            }\n            roundLabel.appendChild(labelRect);\n            const labelText = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n            labelText.classList.add('labelText');\n            labelText.setAttribute(\"x\", '95');\n            labelText.setAttribute(\"y\", '21');\n            labelText.setAttribute(\"height\", '15');\n            labelText.setAttribute(\"width\", '190');\n            labelText.setAttribute(\"text-anchor\", \"middle\");\n            labelText.innerHTML = \"Losers Round \" + (i + 1);\n            roundLabel.appendChild(labelText);\n            gHeaders.appendChild(roundLabel);\n            i++;\n        }\n        svgMain.appendChild(gHeaders);\n        svgMain.appendChild(gLines);\n\n        document.getElementById('svgContainer').innerHTML = svgMain.outerHTML;\n\n        document.querySelectorAll('.pName').forEach(elem => {\n            elem.addEventListener('mouseover', function () {\n                document.querySelectorAll(`.pName`).forEach((name) => {\n                    if (name.innerHTML == elem.innerHTML) name.classList.add('highlight');\n                });\n            });\n            elem.addEventListener('mouseout', function () {\n                document.querySelectorAll(`.pName`).forEach((name) => {\n                    if (name.innerHTML == elem.innerHTML) name.classList.remove('highlight');\n                });\n            });\n        });\n    }\n\n    static createSvgMatch(i, bracketMatch: bracketMatch, bracketData: bracketMatch[], roundElem, singleMatchRound: number, intervalIteration = 0, losers = false) {\n        const group = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\n        let round = bracketMatch.round;\n        if (losers) round = bracketMatch.round * -1 - 1;\n\n        var multi = round != 0 ? (60 * (2 ** round)) : 60;\n        var startPos = roundElem.length != 1 ? 0.5 * (2 ** round) * 60 : 0.5 * (2 ** singleMatchRound) * 60;\n        if (losers) {\n            var multi = round != 0 ? (60 * (2 ** Math.floor(round / 2))) : 60;\n            var startPos = roundElem.length != 1 ? 0.5 * (2 ** Math.floor(round / 2)) * 60 : 0.5 * (2 ** (Math.floor(singleMatchRound / 2) + 1)) * 60;\n        }\n        group.setAttribute(\"transform\", \"translate(0, \" + ((multi * i) + startPos) + \") scale(0.8)\");\n        group.setAttribute(\"data-matchId\", bracketMatch.id);\n        group.id = bracketMatch.id;\n        group.classList.add('match');\n        if (bracketMatch.bye) {\n            group.classList.add('hidden');\n        }\n        if (bracketMatch.p1.id && bracketMatch.p2.id) {\n            group.classList.add('matchReady');\n        }\n\n        const clip1 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n        clip1.setAttribute(\"id\", 'clipPath-' + bracketMatch.id + '-1');\n        clip1.innerHTML = ' <circle r=\"8\" cx=\"25\" cy=\"-2\" />';\n        group.appendChild(clip1);\n\n        const clip2 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n        clip2.setAttribute(\"id\", 'clipPath-' + bracketMatch.id + '-2');\n        clip2.innerHTML = ' <circle r=\"8\" cx=\"25\" cy=\"26\" />';\n        group.appendChild(clip2);\n\n        const nameClip1 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n        nameClip1.setAttribute(\"id\", 'nameClip-' + bracketMatch.id + '-1');\n        nameClip1.innerHTML = '<rect x=\"37\" y=\"-10\" width=\"160\" height=\"20\"/>';\n        group.appendChild(nameClip1);\n\n        const nameClip2 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n        nameClip2.setAttribute(\"id\", 'nameClip-' + bracketMatch.id + '-2');\n        nameClip2.innerHTML = '<rect x=\"37\" y=\"20\" width=\"160\" height=\"20\"/>';\n        group.appendChild(nameClip2);\n\n        var noAnim = \"\";\n        if (intervalIteration > 0) {\n            noAnim = \"noAnim\";\n        }\n\n        group.innerHTML += `\n            <path class=\"matchPath ${noAnim}\" d=\"m 0 12.25 l 0 -12.5 l 15 -15 h 200 l 15 15 l 0 12.5 M 0 12.25 l 0 12.5 l 15 15 h 200 l 15 -15 l 0 -12.5\" />\n            <path class=\"matchPath in_progress\" ${bracketMatch.status != 'in_progress' ? 'style=\"display:none;\"' : ''} id=\"livePath-${i}\" d=\"m 0 12.25 l 0 -12.5 l 15 -15 h 200 l 15 15 l 0 12.5 M 0 12.25 l 0 12.5 l 15 15 h 200 l 15 -15 l 0 -12.5\" />\n            <path class=\"matchPath ${noAnim} matchSplit\" d=\"m 0 12.25 l 230 0\" />`;\n\n        let p1Name: string = bracketMatch.p1.name;\n        if (bracketMatch.p1.name == null && bracketMatch.p1.id != null) p1Name = bracketMatch.p1.id;\n\n        group.innerHTML += `\n            <image x=\"17\" y=\"-10\"\n            ${bracketMatch.p1.avatar ? `href=\"https://cdn.discordapp.com/avatars/${bracketMatch.p1.id}${bracketMatch.p1.avatar}\"` : ''}            \n            class=\"img p1\" height=\"16\" width=\"16\" clip-path=\"url(#clipPath-${bracketMatch.id}-1)\" />\n            <text x=\"37\" y=\"5\" width=\"147\" height=\"12\" class=\"pName p1\" clip-path=\"url(#nameClip-${bracketMatch.id}-1)\">${p1Name || ''}</text>\n            `;\n        if (bracketMatch.p1.name == null && bracketMatch.p1.id != null) bracketMatch.p1.name = null;\n        let p2Name: string = bracketMatch.p2.name;\n        if (bracketMatch.p2.name == null && bracketMatch.p2.id != null) p2Name = bracketMatch.p2.id;\n\n        group.innerHTML += `\n            <image x=\"17\" y=\"18\"\n            ${bracketMatch.p2.avatar ? `href=\"https://cdn.discordapp.com/avatars/${bracketMatch.p2.id}${bracketMatch.p2.avatar}\"` : ''}            \n            class=\"img p2\" height=\"16\" width=\"16\" clip-path=\"url(#clipPath-${bracketMatch.id}-2)\" />\n            <text x=\"37\" y=\"33\" width=\"147\" height=\"12\" class=\"pName p2\" clip-path=\"url(#nameClip-${bracketMatch.id}-2)\">${p2Name || ''}</text>\n            `;\n        if (bracketMatch.p2.name == null && bracketMatch.p2.id != null) bracketMatch.p2.name = null;\n        if (bracketMatch.p1.score != 0 || bracketMatch.p2.score != 0) {\n            let p1Class = \"\", p2Class = \"\";\n            if (bracketMatch.status == 'complete') {\n                p1Class = bracketMatch.p1.score > bracketMatch.p2.score ? 'winner' : 'loser';\n                p2Class = bracketMatch.p1.score < bracketMatch.p2.score ? 'winner' : 'loser';\n            }\n            group.innerHTML += `\n            <text x=\"200\" y=\"5\" width=\"147\" height=\"12\" class=\"pName pScore p1 ${p1Class}\">${bracketMatch.p1.score}</text>\n            <text x=\"200\" y=\"33\" width=\"147\" height=\"12\" class=\"pName pScore p2 ${p2Class}\">${bracketMatch.p2.score}</text>\n            `;\n        } else {\n            group.innerHTML += `\n            <text x=\"200\" y=\"5\" width=\"147\" height=\"12\" class=\"pName pScore p1\"></text>\n            <text x=\"200\" y=\"33\" width=\"147\" height=\"12\" class=\"pName pScore p2\"></text>\n            `;\n        }\n\n        let firstRoundCount = bracketData.filter(x => x.round == 0).length;\n\n        let maxRound = Math.max.apply(Math, bracketData.map(x => x.round));\n        let minRound = Math.min.apply(Math, bracketData.map(x => x.round));\n\n        if (losers) {\n            group.innerHTML += `<text x=\"37\" y=\"5\" width=\"147\" height=\"12\" class=\"loserPlaceHolder top\"> </text>`;\n            group.innerHTML += `<text x=\"37\" y=\"33\" width=\"147\" height=\"12\" class=\"loserPlaceHolder bottom\"> </text>`;\n        }\n        if (round == maxRound && !losers && minRound < 0) {\n            group.innerHTML += `<text x=\"37\" y=\"33\" width=\"147\" height=\"12\" class=\"loserPlaceHolder\" style=\"font-size: 12px;\"></text>`;\n        }\n\n        if (round == maxRound - 1 && !losers && minRound < 0) {\n            // group.innerHTML += `<text x=\"37\" y=\"33\" width=\"147\" height=\"12\" class=\"loserPlaceHolder\" style=\"font-size: 12px;\">Winner of Losers Bracket</text>`;\n            group.innerHTML += `<text x=\"37\" y=\"33\" width=\"147\" height=\"12\" class=\"loserPlaceHolder\" style=\"font-size: 12px;\"></text>`;\n        }\n\n        group.innerHTML += `<text x=\"3\" y=\"16\" width=\"147\" height=\"12\" class=\"matchLabel\"></text>`;\n        return group;\n    }\n\n    static generateLabels(bracketData: bracketMatch[]) {\n        let maxRound = Math.max.apply(Math, bracketData.map(x => x.round));\n        let matchCounter = 1;\n        let matchElements = [];\n        for (let i = 0; i <= maxRound; i++) {\n            let elements = document.getElementsByClassName(`round-${i}`);\n            for (let j = 0; j < elements.length; j++) {\n                matchElements = [...matchElements, ...elements[j].children];\n            }\n        }\n        for (let j = 0; j < matchElements.length; j++) {\n            const element = matchElements[j];\n            if (!element.classList.contains('hidden')) {\n                element.querySelector('.matchLabel').innerHTML = matchCounter;\n                matchCounter++;\n            }\n        }\n        for (const match of matchElements) {\n            let curMatch = bracketData.find(x => x.id == match.id);\n            if (curMatch.p1_prereq_identifier) {\n                let prereqMatch = document.getElementById(curMatch.p1_prereq_identifier.toString());\n                let p1Loser = prereqMatch.querySelector(`.matchLabel`)?.innerHTML;\n                match.querySelector('.loserPlaceHolder.top').innerHTML = \"\";\n                if (match.querySelector(`.pName.p1`)?.innerHTML == \"\" && !prereqMatch.classList.contains('hidden')) match.querySelector('.loserPlaceHolder.top').innerHTML = `Loser of ${p1Loser}`;\n            }\n            if (curMatch.p2_prereq_identifier) {\n                let prereqMatch = document.getElementById(curMatch.p2_prereq_identifier.toString());\n                let p2Loser = prereqMatch.querySelector(`.matchLabel`)?.innerHTML;\n                match.querySelector('.loserPlaceHolder.bottom').innerHTML = \"\";\n                if (match.querySelector(`.pName.p2`)?.innerHTML == \"\" && !prereqMatch.classList.contains('hidden')) match.querySelector('.loserPlaceHolder.bottom').innerHTML = `Loser of ${p2Loser}`;\n            }\n            if (curMatch.round == maxRound - 1 && match.querySelector('.loserPlaceHolder')) {\n                match.querySelector('.loserPlaceHolder').innerHTML = \"\";\n                if (curMatch.p2.id == null) match.querySelector('.loserPlaceHolder').innerHTML = `Winner of Losers Bracket`;\n            }\n            if (curMatch.round == maxRound && match.querySelector('.loserPlaceHolder')) {\n                if (curMatch.p2.id == null) match.querySelector('.loserPlaceHolder').innerHTML = `Loser of ${matchCounter - 4} (If neccessary)`;\n            }\n        }\n\n    }\n}\n\ndeclare let Twitch: any;\n@Component({\n    selector: 'updateMatchDialog',\n    templateUrl: './updateMatchDialog.html',\n    styleUrls: ['./bracket.component.scss']\n})\nexport class updateMatchDialog implements OnInit {\n\n    scoreForm: FormGroup;\n\n    filteredOptions: Observable<any>;\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private dialogRef: MatDialogRef<updateMatchDialog>,\n        private notif: NotificationService,\n        public dialog: MatDialog,\n    ) {\n\n    }\n\n    status = 'update';\n\n\n    async ngOnInit() {\n        console.log(this.data);\n        this.scoreForm = this.fb.group({\n            p1Score: this.data.p1.score,\n            p2Score: this.data.p2.score,\n            status: 'update',\n            matchId: this.data.id\n        });\n\n        setTimeout(() => {\n            if (this.data.p1.name || this.data.p2.name) {\n                var options1 = {\n                    channel: this.data.p1.twitch,\n                    theme: 'dark',\n\n                };\n                var player1 = new Twitch.Player(\"P1twitch\", options1);\n                player1.setVolume(0.5);\n\n                var options2 = {\n                    channel: this.data.p2.twitch,\n                    theme: 'dark',\n\n                };\n                var player2 = new Twitch.Player(\"P2twitch\", options2);\n                player2.setVolume(0);\n            }\n        }, 1000);\n    }\n\n    isTheatre = false;\n    theatreBtn = 'Theatre Mode';\n\n    theatre() {\n        if (!this.isTheatre) this.dialogRef.updateSize(\"95vw\");\n        if (this.isTheatre) this.dialogRef.updateSize(\"60vw\");\n        this.isTheatre = !this.isTheatre;\n        this.theatreBtn = this.isTheatre ? 'Regular Mode' : 'Theatre Mode';\n    }\n\n    onSubmit(status) {\n        this.scoreForm.value.status = status;\n        this.updateScore(this.scoreForm.value)\n            .subscribe(data => {\n                this.notif.showInfo('', 'Successfully updated score');\n            }, error => {\n                this.notif.showError('', 'Error updaing score');\n                console.error(\"Error: \", error);\n            });\n        if (status == 'complete') this.dialogRef.close(false);\n    }\n\n    editMatch() {\n        const dialog = this.dialog.open(EditBracketMatchComponent, {\n            minWidth: '60vw',\n            width: '60vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            panelClass: 'matchPanel',\n            data: this.data\n        });\n\n        dialog.afterClosed()\n            .subscribe(data => {\n                if (data) {\n                    this.dialogRef.close(true);\n                }\n            })\n    }\n\n    updateScore(data: any): Observable<any> {\n        return this.http.put(`/api/tournament/${this.data.tournamentId}/bracket/${this.data.id}`, data);\n    }\n\n    close() {\n        this.dialogRef.close(false);\n    }\n\n    async scheduleMatch() {\n        try {\n            await this.http.put(`/api/tournament/${this.data.tournamentId}/bracket/schedule/${this.data.id}`, { matchTime: new Date((<HTMLInputElement>document.getElementById(\"matchTime\")).value) }).toPromise();\n            this.notif.showSuccess('', 'Successfully Scheduled Match');\n            this.dialogRef.close(false);\n        } catch (error) {\n            this.notif.showError('', 'Error Scheduling Match');\n            this.dialogRef.close(false);\n        }\n    }\n\n    bestOf = this.data.best_of || 3;\n\n    async updateBestOf() {\n        console.log(this.bestOf);\n        try {\n            await this.http.put(`/api/tournament/${this.data.tournamentId}/bracket/setBestOf/${this.data.id}`, { best_of: this.bestOf }).toPromise();\n            this.notif.showSuccess('', 'Successfully Scheduled Match');\n            this.dialogRef.close(false);\n        } catch (error) {\n            this.notif.showError('', 'Error Scheduling Match');\n            this.dialogRef.close(false);\n        }\n    }\n}\n\n@Component({\n    selector: 'generateBracketDialog',\n    templateUrl: './generateBracketDialog.html',\n    styleUrls: ['./bracket.component.scss']\n})\nexport class generateBracketDialog implements OnInit {\n\n    bracketGenForm: FormGroup;\n\n    filteredOptions: any;\n\n    users = [];\n    hiddenUsers = [];\n    userNameInput: FormControl = new FormControl();\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private dialogRef: MatDialogRef<generateBracketDialog>,\n        private notif: NotificationService,\n        private sanitizer: DomSanitizer\n    ) {\n        this.getUsers()\n            .subscribe(data => {\n                data.sort((a, b) => {\n                    return a.name > b.name\n                });\n                this.users = data;\n                this.filteredOptions = this.users;\n                // this.filteredOptions = this.userNameInput.valueChanges\n                //     .pipe(\n                //         startWith(''),\n                //         map(val => this._filter(val))\n                //     );\n            });\n    }\n\n    updatePlayers(event) {\n        let option = this.bracketGenForm.value.users.findIndex(x => x.id == event.option._parent.id);\n        if (option > -1) {\n            this.users.push(this.hiddenUsers.find(x => x.discordId == this.bracketGenForm.value.users[option].userId));\n            this.hiddenUsers.splice(this.hiddenUsers.findIndex(x => x.discordId == this.bracketGenForm.value.users[option].userId))\n            this.bracketGenForm.value.users[option].userId = event.option.value;\n        } else {\n            this.bracketGenForm.value.users.push({ userId: event.option.value, id: event.option._parent.id });\n        }\n\n        let usrIndex = this.users.findIndex(x => x.discordId == event.option.value);\n        if (usrIndex > -1) {\n            this.hiddenUsers.push(this.users[usrIndex]);\n            this.users.splice(usrIndex, 1);\n            this.filteredOptions = this.users;\n        }\n    }\n\n    lastVal = \"\";\n\n    updateLastEvent(event) {\n        this.lastVal = event;\n    }\n\n    updateFilter($val) {\n        this.filteredOptions = this._filter($val);\n    }\n\n\n    ngOnInit() {\n        this.bracketGenForm = this.fb.group({\n            custom: false,\n            manual: false,\n            users: this.fb.array([]),\n            players: null\n        });\n    }\n\n    async onSubmit() {\n        let players = this.bracketGenForm.value.players != null ? this.bracketGenForm.value.players.replace(' ', '').split('\\n') : null;\n        let users = this.bracketGenForm.value.users.length > 0 ? this.bracketGenForm.value.users.map(x => x.userId) : null;\n        try {\n            const bracketGen: any = await this.http.post(`/api/tournament/${this.data.tournamentId}/generateBracket`, { tournamentId: this.data.tournamentId, customPlayers: players, players: users }).toPromise();\n            this.notif.showSuccess('', 'Successfully created bracket');\n            this.dialogRef.close(false);\n        } catch (error) {\n            console.error(\"Error: \", error);\n            this.notif.showError('', 'Error creating bracket');\n            this.dialogRef.close(false);\n        }\n    }\n\n    updateScore(data: any): Observable<any> {\n        return this.http.put(`/api/tournament/${this.data.tournamentId}/bracket/${this.data.id}`, data);\n    }\n\n    private _filter(name: string) {\n        const filterValue = name.toLowerCase();\n        return this.users.filter(option => option.name.toLowerCase().indexOf(filterValue) === 0);\n    }\n\n    getUsers(): Observable<any> {\n        return this.http.get('/api/users');\n    }\n\n    displayFn(id): string {\n        let user = this.users.find(x => x.discordId == id);\n        return user && user.name ? user.name : '';\n    }\n\n}\n\n","<div class=\"container\">\n    <div class=\"card noHover\">\n        <div class=\"card-body\">\n            <h1 style=\"text-align: center;\"><i class='fas fa-angle-left' style=\"float: left;\" (click)=\"changeDate(-1)\"></i> {{curMonth}} {{curYear}} <i class='fas fa-angle-right' style=\"float: right;\" (click)=\"changeDate(1)\"></i></h1>\n            <div class=\"calendar\">\n                <div class=\"headers\">\n                    <span>Monday</span>\n                    <span>Tuesday</span>\n                    <span>Wednesday</span>\n                    <span>Thursday</span>\n                    <span>Friday</span>\n                    <span>Saturday</span>\n                    <span>Sunday</span>\n                </div>\n                <div class=\"dates\">\n                    <div *ngFor=\"let date of dates\" class=\"date\" [ngClass]=\"{'today': date.today}\" style=\"grid-column: {{date.col + 1}}; grid-row: {{date.row + 1}};\">\n                        <span *ngIf=\"date.date != 0\" class=\"dateNum\">{{date.date}}</span>\n                    </div>\n                    <!-- <div style=\"grid-area: 4 / 7 / auto / span 2; z-index: 10;\n                    background: rgba(255, 255, 255, 0.465); height: 10px;\">\n                        event :)\n                    </div> -->\n                    <!-- <div *ngFor=\"let n of numSequence(6); let i = index;\" class=\"row\" style=\"grid-row: {{i + 1}}\">\n\n                    </div> -->\n\n                    <div *ngFor=\"let event of displayEvents\" class=\"event\" [routerLink]=\"['/tournament',event.id]\" style=\"grid-area: {{event.row + 1}} / {{event.start}} / auto / {{event.end}}; z-index: 10;\n                    background: {{event.color}}80; margin-top: {{event.top}}px\">\n                        <p>\n                            {{event.name}}\n                        </p>\n                        <!-- {{event | json}} -->\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n    selector: 'app-calendar',\n    templateUrl: './calendar.component.html',\n    styleUrls: ['./calendar.component.scss']\n})\nexport class CalendarComponent implements OnInit {\n\n    constructor(\n        public http: HttpClient,\n        public titleService: Title,\n    ) { }\n\n    monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n\n    curDate = null;\n\n    curMonth = \"\";\n    curYear = 0;\n    days = 31;\n    startDay = 0;\n\n    dates = [];\n\n    events: any = [\n        //     { \"id\": 3, \"name\": \"Is a tourney :)\", \"startDate\": \"2020-03-08\", \"endDate\": \"2020-03-08\", \"color\": \"#02943d\" },\n        //     { \"id\": 2147483647, \"name\": \"gfdsgdfs\", \"startDate\": \"2020-03-14\", \"endDate\": \"2020-03-14\", \"color\": \"#6a687b\" },\n        //     { \"id\": 4, \"name\": \"Another tourney :))\", \"startDate\": \"2020-03-18\", \"endDate\": \"2020-03-18\", \"color\": \"#8b3ef7\" },\n        //     { \"id\": 2147483651, \"name\": \"OMEGALUL\", \"startDate\": \"2020-11-11\", \"endDate\": \"2020-12-12\", \"color\": \"#0cb099\" },\n        //     // { \"id\": 2147483921, \"name\": \"dannys gay\", \"startDate\": \"2020-07-13\", \"endDate\": \"2020-07-27\", \"color\": \"#99fb24\" }\n    ]\n\n\n    ngOnInit() {\n        const d = new Date();\n\n        this.events.sort(function (a, b) {\n            var keyA = new Date(a.startDate),\n                keyB = new Date(b.startDate);\n            if (keyA < keyB) return -1;\n            if (keyA > keyB) return 1;\n            return 0;\n        });\n\n        this.fillCalendar();\n\n        this.updateDates(d);\n        this.updateEvents(d);\n        this.titleService.setTitle('Calendar | BeatKhana!');\n    }\n\n    async fillCalendar(): Promise<void> {\n        const d = new Date();\n        this.events = await this.getDates().toPromise();\n        // console.log(this.events)\n        for (let event of this.events) {\n            event.color = '#' + (0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6);\n        }\n        // console.log(this.events);\n        this.updateDates(d);\n        this.updateEvents(d);\n        // console.log(this.displayEvents);\n    }\n\n    displayEvents = [];\n\n    updateEvents(date: Date) {\n        this.displayEvents = [];\n        if (this.events.length > 0) {\n            for (let i in this.events) {\n                const event = this.events[i];\n\n                let eventStartDate = new Date(event.startDate);\n                let eventEndDate = new Date(event.endDate);\n                let monthStart = new Date(date.getFullYear(), date.getMonth(), 1);\n\n                let margin = 10;\n\n                if (eventStartDate.getFullYear() != date.getFullYear()) {\n                    continue;\n                }\n\n                for (let j = 0; j < parseInt(i); j++) {\n                    let eventDate = new Date(this.events[j].endDate);\n                    // console.log(`comparing ${event.name} and ${this.events[j].name}`)\n                    if (eventDate.getTime() > eventStartDate.getTime() && this.events[j].top <= margin) {\n                        margin += 30;\n                    }\n                }\n\n                if (eventStartDate.getMonth() == date.getMonth()) {\n                    let timeDiff = eventEndDate.getTime() - eventStartDate.getTime();\n                    // let dayDiff = (timeDiff / (1000 * 3600 * 24)) + this.startDay;\n                    // let dayDiff2 = timeDiff / (1000 * 3600 * 24) + 1;\n\n\n\n                    // let adjustedDiff = (timeDiff / (1000 * 3600 * 24)) + this.startDay;\n                    let diff = Math.round(timeDiff / (1000 * 3600 * 24));\n\n                    let start = (eventStartDate.getDate() + this.startDay) % 7 != 0 ? (eventStartDate.getDate() + this.startDay) % 7 : 7;\n                    let end = start + diff > 7 ? 8 : start + diff + 1;\n\n                    let row = ((eventStartDate.getDate() + this.startDay) / 7) % 1 == 0 ? ((eventStartDate.getDate() + this.startDay) / 7) - 1 : Math.floor((eventStartDate.getDate() + this.startDay) / 7);\n\n                    // console.log(adjustedDiff)\n                    // console.log(diff, start, end, row)\n                    // console.log(start)\n                    // console.log(end)\n                    // console.log(row)\n                    if (diff + start > 6) {\n                        // let numRows = ((diff + start + 1) / 7) % 1 == 0 ? (diff + start + 1) / 7 - 1 : Math.floor((diff + start + 1) / 7);\n                        let finRow = 0;\n                        if (eventEndDate.getMonth() == date.getMonth()) {\n                            finRow = ((eventEndDate.getDate() + this.startDay) / 7) % 1 == 0 ? ((eventEndDate.getDate() + this.startDay) / 7) - 1 : Math.floor((eventEndDate.getDate() + this.startDay) / 7);\n                        } else {\n                            finRow = Math.floor((this.days + this.startDay) / 7);\n                        }\n                        // let curRow = Math.floor((eventStartDate.getDate() + this.startDay) / 7);\n                        let curRow = ((eventStartDate.getDate() + this.startDay) / 7) % 1 == 0 ? ((eventStartDate.getDate() + this.startDay) / 7) - 1 : Math.floor((eventStartDate.getDate() + this.startDay) / 7);\n                        // console.log(finRow)\n                        // first elem\n                        this.displayEvents.push({\n                            name: event.name,\n                            start: start,\n                            end: 8,\n                            row: curRow,\n                            top: margin,\n                            color: event.color,\n                            id: event.tournamentId\n                        })\n                        for (let i = curRow; i < finRow && curRow < 6; i++) {\n                            // console.log(((diff + start) - (7 * (i - curRow + 1))) + 1)\n                            curRow += 1;\n                            // console.log(((diff + start) - (7 * (i - curRow + 2))) + 1)\n                            this.displayEvents.push({\n                                name: event.name,\n                                start: 1,\n                                end: ((diff + start) - (7 * (i - curRow + 2))) + 1,\n                                row: curRow,\n                                top: margin,\n                                color: event.color,\n                                id: event.tournamentId\n                            })\n                        }\n                    } else if (eventStartDate.getDate() == eventEndDate.getDate()) {\n                        let start = (eventStartDate.getDate() + this.startDay) % 7 != 0 ? (eventStartDate.getDate() + this.startDay) % 7 : 7;\n                        let row = ((eventStartDate.getDate() + this.startDay) / 7) % 1 == 0 ? ((eventStartDate.getDate() + this.startDay) / 7) - 1 : Math.floor((eventStartDate.getDate() + this.startDay) / 7);\n                        this.displayEvents.push({\n                            name: event.name,\n                            start: start,\n                            end: start + 1,\n                            row: row,\n                            top: margin,\n                            color: event.color,\n                            id: event.tournamentId\n                        })\n                    } else {\n                        this.displayEvents.push({\n                            name: event.name,\n                            start: start,\n                            end: end,\n                            row: row,\n                            top: margin,\n                            color: event.color,\n                            id: event.tournamentId\n                        })\n                    }\n                } else if (eventEndDate.getMonth() == date.getMonth()) {\n                    let timeDiff = eventEndDate.getTime() - monthStart.getTime();\n\n                    let dayDiff = Math.ceil(timeDiff / (1000 * 3600 * 24)) + this.startDay + 1;\n                    let numRows = Math.ceil((dayDiff - 1) / 7);\n                    let curRow = 0;\n\n                    for (let i = 0; i < numRows && curRow < 6; i++) {\n                        this.displayEvents.push({\n                            name: event.name,\n                            start: 1,\n                            end: (dayDiff - (7 * i)),\n                            row: curRow,\n                            color: event.color,\n                            id: event.tournamentId\n                        })\n                        curRow += 1;\n                    }\n                } else if (eventStartDate.getMonth() < date.getMonth() && eventEndDate.getMonth() > date.getMonth()) {\n                    for (let j = 0; j < parseInt(i); j++) {\n                        let eventDate = new Date(this.events[j].endDate);\n                        if (eventDate.getTime() > eventStartDate.getTime()) {\n                            margin += 30;\n                        }\n                    }\n                    let numRows = Math.floor((this.getDaysInMonth(date.getMonth() + 1, date.getFullYear()) + this.startDay) / 7);\n                    for (let i = 0; i <= numRows; i++) {\n                        this.displayEvents.push({\n                            name: event.name,\n                            start: 1,\n                            end: 8,\n                            row: i,\n                            top: margin,\n                            color: event.color,\n                            id: event.tournamentId\n                        })\n                    }\n                }\n\n            };\n        }\n\n    }\n\n    updateDates(date) {\n        this.curDate = date;\n        this.curMonth = this.monthNames[date.getMonth()];\n        this.curYear = date.getYear() + 1900;\n        this.days = this.getDaysInMonth(date.getMonth() + 1, date.getFullYear());\n\n        let tempDate = new Date(`${date.getFullYear()}-${date.getMonth() + 1}-01`);\n        this.startDay = tempDate.getDay() - 1 != -1 ? tempDate.getDay() - 1 : 6;\n        // console.log(this.startDay)\n        this.dates = [];\n        let todayDate = new Date();\n        for (let i = 0; i < (Math.ceil((this.days + this.startDay - 1) / 7) * 7); i++) {\n            let today = todayDate.getDate() + this.startDay - 1 == i && todayDate.getMonth() == this.curDate.getMonth();\n            if (i < this.startDay || i >= this.days + this.startDay - 1) {\n                this.dates[i] = {\n                    date: 0,\n                    event: false,\n                    col: i % 7,\n                    row: Math.floor(i / 7),\n                    today: today\n                }\n            } else {\n                this.dates[i] = {\n                    date: i - this.startDay + 1,\n                    event: false,\n                    col: i % 7,\n                    row: Math.floor(i / 7),\n                    today: today\n                }\n            }\n        }\n    }\n\n    getDates(): Observable<any> {\n        return this.http.get('/api/events');\n    }\n\n    changeDate(change) {\n        this.curDate = new Date(this.curDate.setMonth(this.curDate.getMonth() + change))\n        this.updateDates(this.curDate);\n        this.updateEvents(this.curDate);\n        // console.log(this.displayEvents)\n    }\n\n    getDaysInMonth(month, year) {\n        return new Date(year, month, 0).getDate() + 1;\n    };\n\n    numSequence(n: number): Array<number> {\n        return Array(n);\n    }\n}\n","import { Component, OnInit, Inject, HostListener } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'app-confirm-dialog',\n    templateUrl: './confirm-dialog.component.html',\n    styleUrls: ['./confirm-dialog.component.scss']\n})\nexport class ConfirmDialogComponent implements OnInit {\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: {\n        cancelText: string,\n        confirmText: string,\n        message: string,\n        title: string\n    }, private mdDialogRef: MatDialogRef<ConfirmDialogComponent>) { }\n\n    ngOnInit(): void {\n    }\n\n    public cancel() {\n        this.close(false);\n    } public close(value) {\n        this.mdDialogRef.close(value);\n    } public confirm() {\n        this.close(true);\n    } @HostListener(\"keydown.esc\")\n    public onEsc() {\n        this.close(false);\n    }\n\n}\n","<div class=\"header\">\n    <h1 mat-dialog-title>{{ data.title }}</h1>\n</div>\n<div mat-dialog-content>\n    <p class=\"card-text\">{{ data.message }}</p>\n</div>\n<div mat-dialog-actions>\n    <button mat-raised-button color=\"warn\" style=\"margin-right:10px;\" (click)=\"cancel()\">{{ data.cancelText }}</button>\n    <button mat-raised-button color=\"primary\" (click)=\"confirm()\">{{ data.confirmText }}</button>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '../models/user.model';\nimport { UserAuthService } from '../services/user-auth.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuardGuard implements CanActivate {\n\n    constructor(\n        public http: HttpClient,\n        private userS: UserAuthService\n    ) { }\n\n    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n        return this.http.get('/api/user').pipe(map(data=> {\n            return data[0]['roleIds'].indexOf('1') > -1 || data[0]['roleIds'].indexOf('2') > -1\n        }))\n    }\n}\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { merge, Observable, of as observableOf } from 'rxjs';\nimport { catchError, map, startWith, switchMap } from 'rxjs/operators';\nimport { AppComponent } from '../app.component';\n\n@Component({\n    selector: 'app-logs',\n    templateUrl: './logs.component.html',\n    styleUrls: ['./logs.component.scss']\n})\nexport class LogsComponent extends AppComponent implements AfterViewInit {\n\n    loading = true;\n    logs = [];\n\n    resultsLength = 18;\n    isLoadingResults = true;\n\n    columnsToDisplay = ['user', 'log', 'time'];\n\n    dataSource: MatTableDataSource<any>;\n\n    @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n    @ViewChild(MatSort, { static: false }) sort: MatSort;\n\n    ngAfterViewInit(): void {\n        this.getLogs()\n            .subscribe(data => {\n                this.loading = false;\n                data.data.sort((a, b) => {\n                    return <any>new Date(a.time) - <any>new Date(b.time);\n                });\n                this.logs = data.data;\n            });\n\n        this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n\n        merge(this.sort.sortChange, this.paginator.page)\n            .pipe(\n                startWith({}),\n                switchMap(() => {\n                    this.isLoadingResults = true;\n                    return this.getLogs(this.paginator.pageIndex);\n                    // return this.exampleDatabase!.getRepoIssues(\n                    //     this.sort.active, this.sort.direction, this.paginator.pageIndex);\n                }),\n                map(data => {\n                    // Flip flag to show that loading has finished.\n                    this.isLoadingResults = false;\n                    // this.isRateLimitReached = false;\n                    this.resultsLength = data.total;\n\n                    return data.data;\n                }),\n                catchError(() => {\n                    this.isLoadingResults = false;\n                    // Catch if the GitHub API has reached its rate limit. Return empty data.\n                    // this.isRateLimitReached = true;\n                    return observableOf([]);\n                })\n            ).subscribe(data => {\n                this.logs = data\n            });\n    }\n\n    getLogs(page = 0): Observable<any> {\n        return this.http.get('/api/logs?page=' + page);\n    }\n\n}\n","<div class=\"container\">\n    <div class=\"card noHover\" style=\"border-radius: 0px 4px 4px 4px;\">\n        <div class=\"card-body\">\n            <h1>Logs</h1>\n\n            <div class=\"example-loading-shade\" *ngIf=\"isLoadingResults\">\n                <!-- <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner> -->\n                <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 100px; border: none;\">\n            </div>\n            <table mat-table [dataSource]=\"logs\" class=\"card-text\" matSort>\n                <ng-container matColumnDef=\"user\">\n                    <th mat-header-cell *matHeaderCellDef>User</th>\n                    <td mat-cell *matCellDef=\"let log\">\n                        {{log.name}}\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"log\">\n                    <th mat-header-cell *matHeaderCellDef>Log</th>\n                    <td mat-cell *matCellDef=\"let log\">\n                        {{log.log}}\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"time\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Time</th>\n                    <td mat-cell *matCellDef=\"let log\">\n                        {{log.time | date: 'dd/MM/yyyy HH:mm:ss'}}\n                    </td>\n                </ng-container>\n\n\n                <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n                <tr mat-row *matRowDef=\"let myRowData; columns: columnsToDisplay\"></tr>\n            </table>\n            <mat-paginator [length]='resultsLength' [pageSize]=\"25\"></mat-paginator>\n        </div>\n    </div>\n</div>","<div class=\"card-body\">\n    <!-- <img class=\"tourneyImg\" src=\"\\{{ tournament.image | lowercase }}\" alt=\"\" /> -->\n    <h1>{{tournament.name}}</h1>\n    <h3>Map Pool</h3>\n    <br>\n    <div *ngIf=\"loading else loaded\">\n        <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n                margin-left: auto;\n                margin-right: auto;\n                width: 70px; \n                border: none;\n                padding: 15px; \">\n    </div>\n    <ng-template #loaded>\n        <mat-tab-group animationDuration=\"300ms\" dynamicHeight (selectedTabChange)=\"tabClick($event)\">\n            <mat-tab *ngFor=\"let pool of poolValues\" id=\"{{pool.id}}\">\n                <ng-template mat-tab-label>\n                    <img src=\"{{pool.image}}\" class=\"labelImage\">\n                    <span class=\"labelText\">{{pool.poolName}}</span>\n                </ng-template>\n                <table *ngIf=\"pool.songs.length > 0 else noSongs\" mat-table [dataSource]=\"pool.songs\" class=\"card-text\">\n                    <ng-container matColumnDef=\"image\">\n                        <th mat-header-cell *matHeaderCellDef style=\"width: 2%;\"> &nbsp;&nbsp;&nbsp; Song </th>\n                        <td mat-cell *matCellDef=\"let song\" style=\"width: 2%;\">\n                            <img loading=\"lazy\" src=\"https://scoresaber.com/imports/images/songs/{{song.hash}}.png\"\n                                alt=\"{{song.name}} Cover art\" class=\"songImg\">\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"songName\">\n                        <th mat-header-cell *matHeaderCellDef> </th>\n                        <td mat-cell *matCellDef=\"let song\">\n                            <a href=\"{{song.ssLink}}\" target=\"_blank\">\n                                {{song.name}} - {{song.songAuthor}}\n                            </a>\n                            <span class=\"mapperName\">[{{song.levelAuthor}}]</span>\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"diff\">\n                        <th mat-header-cell *matHeaderCellDef> Difficulty </th>\n                        <td mat-cell *matCellDef=\"let song\" class=\"{{song.diff.replace('+', 'P')}}\">\n                            {{song.diff}}\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"bsaver\">\n                        <th mat-header-cell *matHeaderCellDef> </th>\n                        <td mat-cell *matCellDef=\"let song\">\n                            <a href=\"https://beatsaver.com/beatmap/{{song.key}}\" target=\"_blank\"\n                                class=\"beatsaver_icon\"></a>\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"oneClick\">\n                        <th mat-header-cell *matHeaderCellDef> </th>\n                        <td mat-cell *matCellDef=\"let song\">\n                            <a [href]=\"sanitize('beatsaver://'+song.key)\" target=\"_blank\">\n                                <button mat-button color=\"primary\">One Click</button>\n                            </a>\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"code\">\n                        <th mat-header-cell *matHeaderCellDef> </th>\n                        <td mat-cell *matCellDef=\"let song\">\n                            <button mat-button color=\"accent\" (click)=\"copyCode(song.key)\">Copy Key</button>\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"delete\" *ngIf=\"isAuthorised\">\n                        <th mat-header-cell *matHeaderCellDef style=\"width: 2%;\"> </th>\n                        <td mat-cell *matCellDef=\"let song\" style=\"width: 2%;\">\n                            <button mat-button color=\"warn\" (click)=\"delete(song.id)\">Delete</button>\n                        </td>\n                    </ng-container>\n\n                    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n                    <tr mat-row *matRowDef=\"let myRowData; columns: columnsToDisplay\"></tr>\n                </table>\n                <ng-template #noSongs>\n                    <p class=\"card-text\">\n                        This pool currently has no songs in it.\n                    </p>\n                </ng-template>\n            </mat-tab>\n        </mat-tab-group>\n        <p class=\"card-text\">\n            <!-- <a mat-stroked-button color=\"primary\" (click)=\"downloadPool()\"\n                *ngIf=\"poolsLen > 0 && mapPools[curPoolId].songs.length > 0\">Download Pool</a> &nbsp; -->\n            <a mat-stroked-button color=\"primary\" href=\"/api/download-pool/{{curPoolId}}\" target=\"_blank\"\n                *ngIf=\"poolsLen > 0 && mapPools[curPoolId].songs.length > 0\">Download Pool</a> &nbsp;\n            <button *ngIf=\"isAuthorised && curPoolId\" mat-stroked-button color=\"warn\" (click)=\"deletePool()\">Delete\n                Pool</button> &nbsp;\n            <button *ngIf=\"isAuthorised && poolsLen > 0\" mat-stroked-button color=\"primary\" (click)=\"addSong()\">Add\n                Song</button> &nbsp;\n            <button *ngIf=\"isAuthorised\" mat-stroked-button color=\"primary\" (click)=\"openCreate()\">Create Map\n                Pool</button> &nbsp;\n            <button *ngIf=\"isAuthorised\" mat-stroked-button color=\"primary\" (click)=\"editPool()\">Edit Map Pool</button>\n        </p>\n    </ng-template>\n</div>","<h1 mat-dialog-title>Add Song</h1>\n<form [formGroup]=\"newSongForm\" novalidate (ngSubmit)=\"onSubmit()\">\n    <!-- Value: {{ newSongForm.value | json }} -->\n\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Scoresaber/Beatsaver Link\" formControlName=\"ssLink\" (input)=\"updateVal()\">\n    </mat-form-field>\n    <br>\n    <ng-template [ngIf]=\"beatsaver\">\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Difficulty</mat-label>\n            <mat-select formControlName=\"diff\">\n                <mat-option value=\"Expert+\">Expert+</mat-option>\n                <mat-option value=\"Expert\">Expert</mat-option>\n                <mat-option value=\"Hard\">Hard</mat-option>\n                <mat-option value=\"Normal\">Normal</mat-option>\n                <mat-option value=\"Easy\">Easy</mat-option>\n            </mat-select>\n        </mat-form-field>\n        <br>\n    </ng-template>\n\n\n    <mat-label>Pool to add to:</mat-label>\n    <br>\n    <ng-template [ngIf]=\"true\" *ngFor=\"let pool of data.mapPools | keyvalue\">\n        <mat-checkbox [value]=\"pool.value.id\" (change)=\"onCheckChange($event)\">\n            {{pool.value.poolName}}\n        </mat-checkbox>\n        <br>\n    </ng-template>\n\n\n    <div mat-dialog-actions>\n        <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"newSongForm.invalid || isSubmitted\">Add Map Pool</button>\n    </div>\n</form>","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, Input, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Observable } from 'rxjs';\nimport { AppComponent } from '../app.component';\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport { User } from '../models/user.model';\nimport { NotificationService } from '../services/toast.service';\nimport { UserAuthService } from '../services/user-auth.service';\nimport { staff } from '../_models/tournamentApi.model';\n\n@Component({\n    selector: 'app-map-pool',\n    templateUrl: './map-pool.component.html',\n    styleUrls: ['./map-pool.component.scss']\n})\nexport class MapPoolComponent extends AppComponent implements OnInit {\n\n    private url = '/api/tournament';\n    @Input() tournament;\n    @Input() staff: staff[] = [];\n    public tourneyId: string;\n    loading = true;\n\n    isAuthorised = false;\n\n    user: User = null;\n\n    columnsToDisplay = ['image', 'songName', 'diff', 'bsaver', 'oneClick', 'code'];\n\n    curPoolId = '0';\n    curPoolLive = false;\n    poolsLen = 0;\n\n    mapPools = [];\n    poolValues = [];\n\n    async ngOnInit(): Promise<void> {\n        let poolStaff = this.staff.filter(x => x.roles.some(x => x.id == 2));\n        await this.userS.curUser();\n        if (this.user != null && (this.user['roleIds'].includes('1') || this.user.discordId == this.tournament.owner || poolStaff.find(x => x.discordId == this.user.discordId))) {\n            this.isAuthorised = true;\n            this.columnsToDisplay.push('delete');\n        }\n        this.getPools()\n            .subscribe(data => {\n                this.loading = false;\n                this.mapPools = data;\n                this.curPoolId = Object.keys(this.mapPools)[0];\n                this.poolsLen = Object.keys(this.mapPools).length;\n                this.poolValues = Object.values(this.mapPools);\n            });\n    }\n\n    // async updateUser() {\n    //     this.user = await this.userS.curUser();\n    //     if (this.user != null && (this.user['roleIds'].includes('1') || this.user.discordId == this.tournament.owner)) {\n    //         this.isAuthorised = true;\n    //         this.columnsToDisplay.push('delete');\n    //     }\n    // }\n\n    sanitize(url: string) {\n        return this.sanitizer.bypassSecurityTrustUrl(url);\n    }\n\n    public logIn(): Observable<User[]> {\n        // console.log('/api/discordAuth?code=' + code);\n        return this.http.get<User[]>('/api/user');\n    }\n\n    copyCode(code: string) {\n        navigator.clipboard.writeText(code);\n    }\n\n    delete(songId) {\n        const dialog = this.dialog.open(ConfirmDialogComponent, {\n            // height: '400px',\n            width: '400px',\n            data: {\n                cancelText: 'Cancel',\n                confirmText: 'Delete',\n                message: 'Are you sure you want to delete this song from this pool?',\n                title: 'Delete Song?'\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(async data => {\n                if (data) {\n                    let info = {\n                        tournamentId: this.tournament.tournamentId,\n                        id: songId\n                    }\n                    try {\n                        await this.http.post(`api/tournament/${this.tournament.tournamentId}/deleteSong`, info).toPromise();\n                        this.updatePools();\n                    } catch (error) {\n                        console.error(\"Error: \", data);\n                        this.notif.showError('', 'Error deleting song from map pool');\n                    }\n                }\n            }\n            );\n    }\n\n    public deleteSong(data): Observable<any> {\n        return this.http.post(`api/tournament/${this.tournament.tournamentId}/deleteSong`, data);\n    }\n\n    openCreate() {\n        const dialog = this.dialog.open(createPoolDialog, {\n            // height: '400px',\n            minWidth: '40vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: {\n                tournament: this.tournament,\n                edit: false\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(data => {\n                if (data) {\n                    this.loading = true;\n                    this.getPools()\n                        .subscribe(data => {\n                            this.loading = false;\n                            this.mapPools = data;\n                            this.curPoolId = Object.keys(this.mapPools)[0];\n                            this.poolsLen = Object.keys(this.mapPools).length;\n                        });\n                }\n            });\n    }\n\n    tabClick(tab) {\n        let id = Object.keys(this.mapPools)[tab.index];\n        this.curPoolLive = !!this.mapPools[id].live;\n        this.curPoolId = id;\n    }\n\n    downloadPool() {\n        let curSongs = this.mapPools[this.curPoolId].songs.map(e => { return { hash: e.hash } });\n        let playlist = {\n            playlistTitle: this.mapPools[this.curPoolId].poolName,\n            playlistAuthor: 'BeatKhana!',\n            playlistDescription: this.mapPools[this.curPoolId].description,\n            image: this.mapPools[this.curPoolId].image,\n            songs: curSongs\n        }\n        let data = \"text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(playlist));\n        var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(playlist));\n        var downloadAnchorNode = document.createElement('a');\n        downloadAnchorNode.setAttribute(\"href\", dataStr);\n        downloadAnchorNode.setAttribute(\"download\", `${this.tournament.name}_` + this.mapPools[this.curPoolId].poolName + \".json\");\n        document.body.appendChild(downloadAnchorNode);\n        downloadAnchorNode.click();\n        downloadAnchorNode.remove();\n    }\n\n    public getPools(): Observable<any[]> {\n        return this.http.get<any[]>(`api/tournament/${this.tournament.tournamentId}/map-pools`);\n    }\n\n    async updatePools() {\n        let data = await this.http.get<any[]>(`api/tournament/${this.tournament.tournamentId}/map-pools`).toPromise();\n        this.mapPools = data;\n        this.poolsLen = Object.keys(this.mapPools).length;\n        this.poolValues = Object.values(this.mapPools);\n    }\n\n    addSong() {\n        const dialog = this.dialog.open(addSongDialog, {\n            minWidth: '40vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: {\n                tournament: this.tournament,\n                mapPools: this.mapPools\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(data => {\n                if (data) {\n                    // this.loading = true;\n                    this.updatePools();\n                    // this.getPools()\n                    //     .subscribe(data => {\n                    //         this.loading = false;\n                    //         this.mapPools = data;\n                    //         this.curPoolId = Object.keys(this.mapPools)[0];\n                    //         this.poolsLen = Object.keys(this.mapPools).length;\n                    //     });\n                }\n            });\n    }\n\n    editPool() {\n        const dialog = this.dialog.open(createPoolDialog, {\n            // height: '400px',\n            minWidth: '40vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: {\n                tournament: this.tournament,\n                mapPool: this.mapPools[this.curPoolId],\n                edit: true\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(async data => {\n                if (data) {\n                    this.updatePools();\n                }\n            });\n    }\n\n    deletePool() {\n        const dialog = this.dialog.open(ConfirmDialogComponent, {\n            width: '400px',\n            data: {\n                cancelText: 'Cancel',\n                confirmText: 'Delete',\n                message: 'Are you sure you want to delete map pool?',\n                title: 'Delete Map Pool?'\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(async data => {\n                if (data) {\n                    try {\n                        await this.http.delete(`api/tournament/${this.tournament.tournamentId}/map-pools/${this.curPoolId}`).toPromise();\n                        this.updatePools();\n                        this.curPoolId = Object.keys(this.mapPools)[0];\n                        this.poolsLen = Object.keys(this.mapPools).length;\n                        this.poolValues = Object.values(this.mapPools);\n                    } catch (error) {\n                        console.error(\"Error: \", data);\n                        this.notif.showError('', 'Error deleting song from map pool');\n                    }\n                }\n            });\n    }\n}\n\n@Component({\n    selector: 'createPoolDialog',\n    templateUrl: './createPoolDialog.html',\n})\nexport class createPoolDialog implements OnInit {\n\n    newPoolForm: FormGroup;\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private dialogRef: MatDialogRef<createPoolDialog>,\n        private notif: NotificationService\n    ) { }\n\n    dialogTitle = \"\";\n    buttonMessage = \"\";\n    isSubmitted = false;\n\n    ngOnInit() {\n        if (this.data.edit) {\n            this.dialogTitle = \"Edit Map Pool\";\n            this.buttonMessage = \"Update Map Pool\";\n            this.newPoolForm = this.fb.group({\n                poolId: this.data.mapPool.id,\n                poolName: [this.data.mapPool.poolName, [\n                    Validators.required\n                ]],\n                image: [this.data.mapPool.image, [\n                    Validators.required\n                ]],\n                description: this.data.mapPool.description,\n                live: this.data.mapPool.live,\n                is_qualifiers: this.data.mapPool.is_qualifiers\n            });\n        } else {\n            this.dialogTitle = \"Create Map Pool\";\n            this.buttonMessage = \"Add Map Pool\";\n            this.newPoolForm = this.fb.group({\n                tournamentId: this.data.tournament.tournamentId,\n                poolName: ['', [\n                    Validators.required\n                ]],\n                image: ['', [\n                    Validators.required\n                ]],\n                description: '',\n                live: 0,\n                is_qualifiers: 0\n            });\n        }\n    }\n\n    selectedFile: File;\n    base64: string;\n\n    onFileChanged(event) {\n        this.selectedFile = event.target.files[0];\n        // this.newPoolForm.patchValue({imgName: this.selectedFile.name});\n\n        let reader = new FileReader();\n        reader.readAsDataURL(this.selectedFile);\n        reader.onload = () => {\n            this.newPoolForm.patchValue({ image: reader.result });\n        };\n    }\n\n    async onSubmit() {\n        this.isSubmitted = true;\n        if (this.data.edit) {\n            this.newPoolForm.value.live = +this.newPoolForm.value.live;\n            try {\n                await this.http.put(`/api/tournament/${this.data.tournament.tournamentId}/map-pools`, this.newPoolForm.value).toPromise();\n                this.notif.showSuccess('', 'Successfully updated map pool');\n                this.dialogRef.close(true);\n            } catch (error) {\n                this.notif.showError('', 'Error updating map pool');\n                console.error(\"Error: \", error);\n                this.dialogRef.close(true);\n            }\n            // this.updatePool(this.newPoolForm.value)\n            //     .subscribe(data => {\n            //         if (!data.flag) {\n            //             this.notif.showSuccess('', 'Successfully updated map pool');\n            //         } else {\n            //             console.error(\"Error: \", data);\n            //             this.notif.showError('', 'Error updating map pool');\n            //         }\n            //         this.dialogRef.close(true);\n            //     }, error => {\n            //         this.notif.showError('', 'Error updating map pool');\n            //         console.error(\"Error: \", error);\n            //         this.dialogRef.close(true);\n            //     });\n        } else {\n            try {\n                await this.http.post(`/api/tournament/${this.data.tournament.tournamentId}/addPool`, this.newPoolForm.value).toPromise();\n                this.notif.showSuccess('', 'Successfully updated map pool');\n                this.dialogRef.close(true);\n            } catch (error) {\n                this.notif.showError('', 'Error updating map pool');\n                console.error(\"Error: \", error);\n                this.dialogRef.close(true);\n            }\n        }\n    }\n\n    addPool(data: any): Observable<any> {\n        return this.http.post(`/api/tournament/${this.data.tournament.tournamentId}/addPool`, data);\n    }\n\n    updatePool(data: any): Observable<any> {\n        return this.http.put(`/api/tournament/${this.data.tournament.tournamentId}/map-pools`, data);\n    }\n}\n\n@Component({\n    selector: 'addSongDialog',\n    templateUrl: './addSongDialog.html',\n})\nexport class addSongDialog implements OnInit {\n\n    newSongForm: FormGroup;\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private dialogRef: MatDialogRef<createPoolDialog>,\n        private notif: NotificationService\n    ) { }\n\n    isSubmitted = false;\n    beatsaver = false;\n\n    ngOnInit() {\n        this.newSongForm = this.fb.group({\n            tournamentId: this.data.tournament.tournamentId,\n            poolIds: [[], [\n                Validators.minLength(1)\n            ]],\n            ssLink: ['', [\n                Validators.required\n            ]],\n            diff: ''\n        });\n\n    }\n\n    onCheckChange(event) {\n        // console.log(event);\n        // console.log(this.newSongForm.value.poolIds);\n        let poolId = event.source.value;\n        if (event.checked && !this.newSongForm.value.poolIds.includes(poolId)) {\n            this.newSongForm.value.poolIds.push(poolId);\n        } else {\n            this.newSongForm.value.poolIds.splice(this.newSongForm.value.poolIds.findIndex((e) => e === poolId), 1);\n            // delete this.newSongForm.value.poolIds[];\n        }\n    }\n\n    updateVal() {\n        this.beatsaver = this.newSongForm.value.ssLink.includes('beatsaver');\n    }\n\n    async onSubmit() {\n        this.isSubmitted = true;\n        // console.log(this.newSongForm.value);\n        try {\n            await this.http.post(`/api/tournament/${this.data.tournament.tournamentId}/addSong${this.beatsaver ? 'ByKey' : ''}`, this.newSongForm.value).toPromise();\n            this.notif.showSuccess('', 'Successfully added song to pool/s');\n            this.dialogRef.close(this.newSongForm.value);\n        } catch (error) {\n            this.notif.showError('', 'Error adding song to pool/s');\n            console.error(\"Error: \", error);\n            this.dialogRef.close(false);\n        }\n    }\n\n    addSong(data: any): Observable<any> {\n        return this.http.post(`/api/tournament/${this.data.tournament.tournamentId}/addSong${this.beatsaver ? 'ByKey' : ''}`, data);\n    }\n}","<h1 mat-dialog-title>{{dialogTitle}}</h1>\n<form [formGroup]=\"newPoolForm\" novalidate (ngSubmit)=\"onSubmit()\">\n    <!-- Value: {{ newPoolForm.value | json }} -->\n\n\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Map Pool Name\" formControlName=\"poolName\">\n    </mat-form-field>\n    <br>\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Map Pool Description\" formControlName=\"description\">\n    </mat-form-field>\n    <br>\n    <img src=\"{{newPoolForm.value.image}}\" style=\"width: 48px;height: 48px;border: none;margin: 5px;\">\n    <br>\n    <input type=\"file\" (change)=\"onFileChanged($event)\" #fileInput accept=\"image/png, image/jpeg, image/gif, image/webp, image/svg+xml, image/tiff\">\n    <br><br>\n    <mat-checkbox formControlName=\"live\">\n        Is Live\n    </mat-checkbox>\n    <br>\n    <mat-checkbox formControlName=\"is_qualifiers\">\n        Is Qualifiers pool?\n    </mat-checkbox>\n\n    <div mat-dialog-actions>\n        <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"newPoolForm.invalid || isSubmitted\">{{buttonMessage}}</button>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AppComponent } from '../app.component';\nimport { ITournament } from '../interfaces/tournament';\nimport { archiveTournamentDialog } from '../tournaments/tournaments.component';\n\n@Component({\n    selector: 'app-mini-tourneys',\n    templateUrl: './mini-tourneys.component.html',\n    styleUrls: ['./mini-tourneys.component.scss']\n})\nexport class MiniTourneysComponent extends AppComponent implements OnInit {\n\n    title = \"BeatKhana!\";\n    private url = '/api/mini-tournaments';\n    public tournaments = [];\n    loading = true;\n\n\n\n    ngOnInit(): void {\n        this.getTournaments()\n            .subscribe(data => {\n                data.sort(function (a, b) {\n                    return <any>new Date(a.startDate) - <any>new Date(b.startDate);\n                });\n                this.tournaments = data;\n                this.loading = false;\n            });\n        this.setTitle(this.title);\n        this.metaTags.defineTags('/', 'BeatKhana!', 'The one stop spot for all Beat Saber tournament information!', 'assets/images/icon/BeatKhana Logo RGB.png')\n    }\n\n    public getTournaments(): Observable<ITournament[]> {\n        return this.http.get<ITournament[]>(this.url);\n    }\n\n    archive(id: number) {\n        this.dialog.open(archiveTournamentDialog, {\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: { id: id }\n        });\n    }\n\n    public archiveTournament(id: number): Observable<ITournament[]> {\n        return this.http.put<ITournament[]>('/api/archiveTournament', { 'id': id });\n    }\n}\n","<div class=\"container grid\">\n    <div *ngIf=\"loading else loaded\">\n        <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 100px;\">\n    </div>\n\n    <ng-template #loaded>\n        <div class=\"card tournamentCard\" *ngFor=\"let tournament of tournaments\">\n            <a [title]=\"tournament.name\" [routerLink]=\"['/tournament',tournament.tournamentId]\">\n                <!-- <img src=\"https://beatkhanas3.s3.us-east-1.amazonaws.com/{{tournament.image}}\" class=\"card-img-top\"> -->\n                <img src=\"/assets/images/{{tournament.image}}\" class=\"card-img-top\">\n                <h5 class=\"card-title\">\n                    {{tournament.name}}\n                </h5>\n            </a>\n            <p class=\"card-text\">\n                Date: {{tournament.startDate | date: 'd/MM/yy, h:mm a'}} <br> Prize: {{tournament.prize}} <br>\n                <a href=\"{{tournament.discord}}\">Discord</a><br>\n                <a href=\"{{tournament.twitchLink}}\">Twitch</a><br>\n                <span *ngIf=\"tournament.public == 0\" style=\"color:rgb(209, 23, 23);font-style: italic;\">*Private</span>\n            </p>\n            <p *ngIf=\"user && (user['roleIds'].includes('1') || user['roleIds'].includes('2'))\" class=\"card-text\">\n                <button mat-button color=\"primary\" (click)=\"archive(tournament.tournamentId)\">Archive Tournament</button>\n            </p>\n        </div>\n        <h4 *ngIf=\"tournaments.length == 0\">There are currently no active tournaments please check back later</h4>\n    </ng-template>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\n\n@Component({\n    selector: 'app-overlay-controller',\n    templateUrl: './overlay-controller.component.html',\n    styleUrls: ['./overlay-controller.component.scss']\n})\nexport class OverlayControllerComponent implements OnInit {\n\n    constructor() { }\n\n    bkWS: WebSocketSubject<any> = webSocket(`${location.protocol == 'http:' ? 'ws' : 'wss'}://` + location.host + '/api/ws');\n\n    ngOnInit(): void {\n        this.bkWS.subscribe(\n            msg => {\n\n            },\n            err => console.log('err: ', err),\n            () => console.log('complete')\n        );\n    }\n\n    play() {\n        this.bkWS.next({ \"overlay\": { \"command\": \"play\" } });\n    }\n\n    pause() {\n        this.bkWS.next({ \"overlay\": { \"command\": \"pause\" } });\n    }\n\n    formatLabel(value: number) {\n        return value*10;\n    }\n\n}\n","<button mat-stroked-button color=\"primary\" (click)=\"play()\">\n    play\n</button>\n<br>\n<button mat-stroked-button color=\"primary\" (click)=\"pause()\">\n    pause\n</button>\n<br><br> Volume\n<mat-slider thumbLabel min=\"0\" max=\"1\" step=\"0.1\" value=\"0\"></mat-slider>","import { HttpClient } from '@angular/common/http';\nimport { AfterViewInit, Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { WebSocketSubject, webSocket } from 'rxjs/webSocket';\nimport { BracketComponent, updateMatchDialog } from '../bracket/bracket.component';\nimport { bracketMatch } from '../_models/bracket.model';\nimport { TAEvent, EventType } from '../_models/ta/event';\nimport { PacketType, ForwardingPacket } from '../_models/ta/forwardingPacket';\nimport { Player } from '../_models/ta/player';\ndeclare let Twitch: any;\n@Component({\n    selector: 'app-overlay',\n    templateUrl: './overlay.component.html',\n    styleUrls: ['./overlay.component.scss']\n})\nexport class OverlayComponent implements AfterViewInit {\n\n    canvas;\n    body = document.body;\n    svgData;\n\n    matchId: Number | string;\n    stage: any;\n    tourneyId: any;\n\n    matchData: any;\n\n    settings: any;\n    viewSeason = '1';\n    seasons: number[] = [];\n\n    bracketData = [];\n    intervalIteration = 0;\n\n    constructor(private route: ActivatedRoute, private http: HttpClient, public dialog: MatDialog) { }\n\n    bkWS: WebSocketSubject<any> = webSocket(`${location.protocol == 'http:' ? 'ws' : 'wss'}://` + location.host + '/api/ws');\n    // taWS: WebSocketSubject<any>;\n\n    async ngAfterViewInit(): Promise<void> {\n        let node = document.createElement('script');\n        node.src = 'https://embed.twitch.tv/embed/v1.js';\n        node.type = 'text/javascript';\n        document.getElementsByTagName('head')[0].appendChild(node);\n\n        this.canvas = document.getElementById(\"fakeCanvas\");\n        this.route.params.subscribe(params => {\n            this.matchId = params['matchId'];\n            this.stage = params['stage'];\n            this.tourneyId = params['tourneyId'];\n        });\n\n        if (!(this.stage == 'bracket' && this.matchId == 'display')) {\n            await this.getMatchData();\n            // await this.draw();\n            // await this.getMatchData();\n        } else {\n            this.initDisplaySettings();\n        }\n\n        this.bkWS.subscribe(\n            msg => {\n                if (msg.bracketMatch && (this.stage == 'bracket' && this.matchId == 'display')) this.updateDrawnMatch(msg.bracketMatch);\n                if (msg.bracketMatch && !(this.stage == 'bracket' && this.matchId == 'display') && this.matchData?.id == msg.bracketMatch.id) this.updateDisplayMatch(msg.bracketMatch);\n                if (msg.overlay) {\n                    switch (msg.overlay.command) {\n                        case 'play':\n                            this.play()\n                            break;\n                        case 'pause':\n                            this.pause()\n                            break;\n                    }\n                }\n                if (msg.TA) this.handlePacket(msg.TA);\n            },\n            err => console.log('err: ', err),\n            () => console.log('complete')\n        );\n        this.bkWS.next({ setTournament: this.tourneyId });\n    }\n\n    async draw(url: string) {\n        await fetch(url)\n            .then(r => r.text())\n            .then(text => {\n                this.canvas.innerHTML = text;\n                // this.svgData = text;\n            })\n            .catch(console.error.bind(console));\n    }\n\n    handlePacket(packet) {\n        if (!this.matchData) return;\n        // console.log(packet);\n        if (packet.Type == PacketType.ForwardingPacket) {\n            let forward: ForwardingPacket = packet.SpecificPacket;\n            if (forward.Type == PacketType.Event) {\n                let event: TAEvent = forward.SpecificPacket;\n                // console.log(event);\n                if (event.Type == EventType.PlayerUpdated) {\n                    let playerInfo: Player = event.ChangedObject;\n                    // console.log(playerInfo, this.matchData);\n                    // console.log(playerInfo.UserId == this.matchData.p1.ssId || playerInfo.UserId == this.matchData.p2.ssId)\n                    if (!(playerInfo.UserId == this.matchData.p1.ssId || playerInfo.UserId == this.matchData.p2.ssId)) return;\n\n                    let curPlayer = this.matchData.p1.ssId == playerInfo.UserId ? this.matchData.p1 : this.matchData.p2;\n\n                    this.animateValue(playerInfo, \"Score\", curPlayer.soreInfo?.Score, playerInfo.Score, 500);\n                    this.animateValue(\n                        playerInfo,\n                        \"Accuracy\",\n                        curPlayer.soreInfo?.Accuracy,\n                        playerInfo.Accuracy,\n                        500\n                    );\n                    this.animateValue(playerInfo, \"Combo\", curPlayer.soreInfo?.Combo, playerInfo.Combo, 500);\n                }\n            }\n        }\n    }\n\n    animateValue(player: Player, property, start = 0, end, duration) {\n        // console.log\n        let startTimestamp = null;\n        const step = (timestamp) => {\n            if (!startTimestamp) startTimestamp = timestamp;\n            const progress = Math.min(\n                (timestamp - startTimestamp) / duration,\n                1\n            );\n            if (property == \"Accuracy\") {\n                player[property] = progress * (end - start) + start;\n            } else {\n                player[property] = Math.floor(progress * (end - start) + start);\n            }\n\n            if (player.UserId == this.matchData.p1.ssId) this.matchData.p1.soreInfo = player;\n            if (player.UserId == this.matchData.p2.ssId) this.matchData.p2.soreInfo = player;\n            this.scoreUpdate();\n\n\n            if (progress < 1) {\n                window.requestAnimationFrame(step);\n            }\n        };\n        window.requestAnimationFrame(step);\n    }\n\n    scoreUpdate() {\n        console.log(this.matchData);\n        if (this.matchData.p1.soreInfo) {\n            let scoreInfo: Player = this.matchData.p1.soreInfo;\n            setTimeout(() => {\n                let liveScore = document.getElementById(\"p1LiveScore\");\n                let liveAcc = document.getElementById(\"p1LiveAcc\");\n                let liveCombo = document.getElementById(\"p1LiveCombo\");\n                if (liveScore) liveScore.children[0].innerHTML = scoreInfo.Score.toString(), liveScore.style.display = \"block\";\n                if (liveAcc) liveAcc.children[0].innerHTML = (Math.round((+scoreInfo.Accuracy + Number.EPSILON) * 10000) / 100).toString(), liveAcc.style.display = \"block\";\n                if (liveCombo) liveCombo.children[0].innerHTML = scoreInfo.Combo.toString(), liveCombo.style.display = \"block\";\n            }, scoreInfo.StreamDelayMs);\n        }\n        if (this.matchData.p2.soreInfo) {\n            let scoreInfo: Player = this.matchData.p2.soreInfo;\n            setTimeout(() => {\n                let liveScore = document.getElementById(\"p2LiveScore\");\n                let liveAcc = document.getElementById(\"p2LiveAcc\");\n                let liveCombo = document.getElementById(\"p2LiveCombo\");\n                if (liveScore) liveScore.children[0].innerHTML = scoreInfo.Score.toString(), liveScore.style.display = \"block\";\n                if (liveAcc) liveAcc.children[0].innerHTML = (Math.round((+scoreInfo.Accuracy + Number.EPSILON) * 10000) / 100).toString(), liveAcc.style.display = \"block\";\n                if (liveCombo) liveCombo.children[0].innerHTML = scoreInfo.Combo.toString(), liveCombo.style.display = \"block\";\n            }, scoreInfo.StreamDelayMs);\n        }\n    }\n\n    player1 = null;\n\n    async getMatchData() {\n        let data: any = await this.http.get(`/api/tournament/${this.tourneyId}/${this.stage}/${this.matchId}`).toPromise();\n        let settings: any = await this.http.get(`/api/tournament/${this.tourneyId}`).toPromise();\n        settings = settings[0];\n        if (settings.ta_url) {\n            // this.taWS = webSocket(`wss://` + settings.ta_url);\n            // this.taWS.subscribe(\n            //     msg => {\n            //         this.handlePacket(msg)\n            //     },\n            //     err => console.log('err: ', err),\n            //     () => console.log('complete')\n            // );\n        }\n        this.matchData = data;\n        console.log(data);\n        console.log(settings);\n        await this.draw(`/assets/overlay/${data.tournamentId}.svg?t=${Date.now()}`);\n\n        if (data.p1) {\n            document.getElementById('p1Name').children[0].innerHTML = data.p1.name;\n            document.getElementById('p1Flag')?.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', `/assets/flags/${data.p1.country.toUpperCase()}.png`);\n            document.getElementById('p2Name').children[0].innerHTML = data.p2.name;\n            document.getElementById('p2Flag')?.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', `/assets/flags/${data.p2.country.toUpperCase()}.png`);\n            let pointIcons = document.querySelectorAll('[id*=\"Score\"]');\n            for (let i = 0; i < pointIcons.length; i++) {\n                const point = pointIcons[i];\n                (<HTMLElement>point).style.display = \"none\";\n                // point.setAttribute(\"style\", \"display:none\");\n            }\n            for (let i = 0; i < Math.ceil(data.best_of / 2); i++) {\n                if (document.getElementById(`p1Score_${i + 1}_blank`)) document.getElementById(`p1Score_${i + 1}_blank`).style.display = \"block\";\n                if (document.getElementById(`p2Score_${i + 1}_blank`)) document.getElementById(`p2Score_${i + 1}_blank`).style.display = \"block\";\n            }\n            for (let i = 0; i < data.p1.score; i++) {\n                if (document.getElementById(`p1Score_${i + 1}_blank`)) document.getElementById(`p1Score_${i + 1}_blank`).style.display = \"none\";\n                if (document.getElementById(`p1Score_${i + 1}`)) document.getElementById(`p1Score_${i + 1}`).style.display = \"block\";\n            }\n            for (let i = 0; i < data.p2.score; i++) {\n                if (document.getElementById(`p2Score_${i + 1}_blank`)) document.getElementById(`p2Score_${i + 1}_blank`).style.display = \"none\";\n                if (document.getElementById(`p2Score_${i + 1}`)) document.getElementById(`p2Score_${i + 1}`).style.display = \"block\";\n            }\n\n            // Stream stuff\n            let stream1 = document.getElementById(`p1Stream`);\n            let href1 = stream1.getAttribute('href').replace(\"#\", '');\n            let img1 = document.getElementById(href1);\n            let con1 = document.createElementNS(\"http://www.w3.org/2000/svg\", 'foreignObject');\n            con1.setAttribute('x', stream1.getAttribute('x'));\n            con1.setAttribute('y', stream1.getAttribute('y'));\n            con1.setAttribute('width', img1.getAttribute('width'));\n            con1.setAttribute('height', img1.getAttribute('height'));\n            let div1 = document.createElement('div');\n            div1.classList.add('twitch');\n            div1.style.width = `${1.7778 * (+img1.getAttribute('width'))}px`;\n            div1.id = 'p1Twitch';\n            con1.appendChild(div1);\n            this.insertAfter(con1, stream1);\n\n            var options1 = {\n                channel: 'snow_rme',\n                theme: 'dark',\n            };\n            this.player1 = new Twitch.Player(\"p1Twitch\", options1);\n            this.player1.setVolume(0.5);\n        }\n    }\n\n    pause() {\n        this.player1.pause();\n    }\n\n    play() {\n        this.player1.play();\n    }\n\n    insertAfter(newNode, referenceNode) {\n        referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n    }\n\n    async initDisplaySettings() {\n        const matchesData: any = await this.http.get(`/api/tournament/${this.tourneyId}/bracket`).toPromise();\n        this.bracketData = matchesData;\n\n        if (matchesData.length > 0) BracketComponent.generateMatches(this.bracketData, this.intervalIteration);\n        let matchElements = document.getElementsByClassName('match');\n        for (let i = 0; i < matchElements.length; i++) {\n            const element = matchElements[i];\n            element.addEventListener(\"click\", () => this.updateMatch(element.getAttribute('data-matchid')))\n        }\n        this.intervalIteration = 1;\n    }\n\n    updateDisplayMatch(match) {\n        this.matchData = match;\n        if (this.matchData.p1) {\n            document.getElementById('p1Name').children[0].innerHTML = this.matchData.p1.name;\n            document.getElementById('p1Flag')?.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', `/assets/flags/${this.matchData.p1.country.toUpperCase()}.png`);\n            document.getElementById('p2Name').children[0].innerHTML = this.matchData.p2.name;\n            document.getElementById('p2Flag')?.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', `/assets/flags/${this.matchData.p2.country.toUpperCase()}.png`);\n            let pointIcons = document.querySelectorAll('[id*=\"Score\"]');\n            for (let i = 0; i < pointIcons.length; i++) {\n                const point = pointIcons[i];\n                (<HTMLElement>point).style.display = \"none\";\n                // point.setAttribute(\"style\", \"display:none\");\n            }\n            for (let i = 0; i < Math.ceil(this.matchData.best_of / 2); i++) {\n                if (document.getElementById(`p1Score_${i + 1}_blank`)) document.getElementById(`p1Score_${i + 1}_blank`).style.display = \"block\";\n                if (document.getElementById(`p2Score_${i + 1}_blank`)) document.getElementById(`p2Score_${i + 1}_blank`).style.display = \"block\";\n            }\n            for (let i = 0; i < this.matchData.p1.score; i++) {\n                if (document.getElementById(`p1Score_${i + 1}_blank`)) document.getElementById(`p1Score_${i + 1}_blank`).style.display = \"none\";\n                if (document.getElementById(`p1Score_${i + 1}`)) document.getElementById(`p1Score_${i + 1}`).style.display = \"block\";\n            }\n            for (let i = 0; i < this.matchData.p2.score; i++) {\n                if (document.getElementById(`p2Score_${i + 1}_blank`)) document.getElementById(`p2Score_${i + 1}_blank`).style.display = \"none\";\n                if (document.getElementById(`p2Score_${i + 1}`)) document.getElementById(`p2Score_${i + 1}`).style.display = \"block\";\n            }\n        }\n    }\n\n    updateMatch(id) {\n        const dialog = this.dialog.open(updateMatchDialog, {\n            minWidth: '60vw',\n            width: '60vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            panelClass: 'matchPanel',\n            data: { ...this.bracketData.find(x => x.id == id), isAuth: false }\n        });\n    }\n\n    updateDrawnMatch(data: bracketMatch) {\n        let matchElem = document.getElementById(data.id);\n        // let tmpElement = {\n\n        // }\n        let index = this.bracketData.findIndex(x => x.id == data.id);\n        this.bracketData[index] = { ...this.bracketData[index], ...data };\n        matchElem.querySelector('.pName.p1').innerHTML = data.p1.name || data.p1.id;\n        matchElem.querySelector('.pName.p2').innerHTML = data.p2.name || data.p2.id;\n        if (data.status == 'in_progress') {\n            (<SVGPathElement>matchElem.querySelector('.in_progress')).style.display = 'inline';\n        } else {\n            (<SVGPathElement>matchElem.querySelector('.in_progress')).style.display = 'none';\n        }\n        if (data.p1.score != data.p2.score && data.status == 'complete') {\n            if (data.p1.score > data.p2.score) {\n                matchElem.querySelector('.pScore.p1').classList.add('winner');\n                matchElem.querySelector('.pScore.p2').classList.add('loser');\n            } else {\n                matchElem.querySelector('.pScore.p1').classList.add('loser');\n                matchElem.querySelector('.pScore.p2').classList.add('winner');\n            }\n        }\n\n        if (data.p1.score != 0 || (data.status == 'in_progress' || data.status == 'complete')) matchElem.querySelector('.pScore.p1').innerHTML = data.p1.score.toString();\n        if (data.p2.score != 0 || (data.status == 'in_progress' || data.status == 'complete')) matchElem.querySelector('.pScore.p2').innerHTML = data.p2.score.toString();\n\n        matchElem.querySelector('.img.p1').setAttribute('href', data.p1.avatar);\n        matchElem.querySelector('.img.p2').setAttribute('href', data.p2.avatar);\n\n        // if (data.p1.id && data.p2.id) {\n        //     matchElem.classList.add('matchReady');\n        //     matchElem.addEventListener(\"click\", () => this.updateMatch(matchElem.getAttribute('data-matchid')));\n        // }\n    }\n}\n","<div class=\"canvasContainer\">\n    <div class=\"sizingBox\">\n        <div id=\"fakeCanvas\">\n\n        </div>\n    </div>\n</div>\n<div id=\"svgContainer\" [hidden]=\"bracketData.length == 0\">\n    <svg id=\"bracket-svg\" class=\"bracket-svg\" width=\"1920\" height=\"1080\" viewBox=\"0 0 1920 1080\"> </svg>\n</div>","<div class=\"card-body\">\n  <h1>{{tournament.name}}</h1>\n  <h3>Participants</h3>\n\n  <div *ngIf=\"loading else loaded\">\n    <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n            margin-left: auto;\n            margin-right: auto;\n            width: 70px;\n            border: none;\">\n  </div>\n\n  <ng-template #loaded>\n    <!-- Base participant display -->\n    <div class=\"participantGrid\"\n      *ngIf=\"tournament.state == 'qualifiers' || tournament.state == 'awaiting_start' || all\">\n      <mat-accordion *ngFor=\"let user of participants\">\n        <mat-expansion-panel hideToggle class=\"playerPanel\">\n          <mat-expansion-panel-header>\n            <mat-panel-title style=\"justify-content: center;\">\n              <a class=\"playerName\" [routerLink]=\"['/user', user.userId]\">\n                {{user.name}}\n              </a>\n            </mat-panel-title>\n          </mat-expansion-panel-header>\n          <img loading=\"lazy\" class=\"participantImg\" src=\"{{user.avatar}}\">\n          <p class=\"card-text\" style=\"float: left;\">\n            <b>Global Rank:</b> #{{user.globalRank}} <br>\n            <b>Regional Rank:</b> #{{user.localRank}} <img class=\"participantFlag\"\n              src=\"\\assets/flags/{{user.country}}.png\" alt=\"{{user.country}} Flag\"\n              style=\"height: 20px;border: none;\"><br>\n            <!-- <b>Tournament Rank:</b> #{{user.tourneyRank}} <br> -->\n            <a *ngIf=\"user.ssId\" href=\"https://scoresaber.com/u/{{user.ssId}}\" target=\"_blank\">Scoresaber</a> <br>\n            <a href=\"https://twitch.tv/{{user.twitchName}}\" target=\"_blank\">Twitch</a> <br>\n            <span *ngIf=\"isAuthorised || user.comment != null\"\n              [innerHTML]=\"'Comment: ' + (user.comment | linkify: linkOptions) + '\\n'\"\n              style=\"white-space: pre-line;\"></span>\n            <span *ngIf=\"(curUser != null && curUser.discordId == curUser.discordId) && userSession\">\n              Current Session Time: {{displayTime(userSession.time)}}\n            </span>\n            <button mat-stroked-button color=\"warn\" *ngIf=\"isAuthorised\"\n              (click)=\"deleteParticipant(user.participantId)\">Remove Participant</button> &nbsp;\n            <button mat-stroked-button color=\"accent\"\n              *ngIf=\"(curUser != null && user.discordId == curUser.discordId) || isAuthorised\"\n              (click)=\"editComment(user.participantId)\">Edit comment</button> &nbsp;\n            <button mat-stroked-button color=\"accent\"\n              *ngIf=\"(curUser != null && user.discordId == curUser.discordId) && tournament.state == 'awaiting_start'\"\n              (click)=\"updateQualSession()\">Change Session</button> &nbsp;\n          </p>\n        </mat-expansion-panel>\n      </mat-accordion>\n    </div>\n\n    <!-- Seeded display -->\n    <p class=\"card-text\" *ngIf=\"(tournament.state == 'main_stage' || tournament.state == 'archived') && tournament.type != 'battle_royale' && !all \n            && isAuthorised\n            && canEdit()\">\n      <mat-checkbox [checked]=\"editMode\" (change)=\"editMode = !editMode\" style=\"display: block;\">\n        Edit <i class=\"fas fa-edit\"></i>\n      </mat-checkbox>\n      <ng-container *ngIf=\"editMode\">\n        *Reordering participants will change their seed.\n        <br>\n        <!-- <button mat-button color=\"primary\" (click)=\"addPlayer()\">Add Player</button> -->\n        <!-- <button mat-button color=\"primary\" (click)=\"recalc()\">Recalc from quals</button>\n                <br> -->\n        <button mat-raised-button color=\"accent\" (click)=\"save()\">Save</button>\n        <button mat-raised-button color=\"warn\" (click)=\"updateParticipants()\">Revert</button>\n      </ng-container>\n    </p>\n    <div class=\"participantGrid\" [ngClass]=\"{'battleRoyale' : editMode}\"\n      *ngIf=\"(tournament.state == 'main_stage' || tournament.state == 'archived') && tournament.type != 'battle_royale' && !all\"\n      cdkDropListGroup>\n      <ng-container *ngIf=\"!editMode\">\n        <ng-container *ngFor=\"let user of participants\">\n          <mat-accordion *ngIf=\"user.seed != 0\">\n            <mat-expansion-panel hideToggle class=\"playerPanel\">\n              <mat-expansion-panel-header>\n                <mat-panel-title class=\"playerName\">\n                  <span style=\"justify-content: left;\">#{{user.seed}}</span> &nbsp;\n                  <a class=\"playerName\" [routerLink]=\"['/user', user.userId]\">\n                    {{user.name}}\n                  </a> &nbsp;\n                </mat-panel-title>\n              </mat-expansion-panel-header>\n              <img loading=\"lazy\" class=\"participantImg\" src=\"{{user.avatar}}\">\n              <p class=\"card-text\" style=\"float: left;\">\n                <b>Global Rank:</b> #{{user.globalRank}} <br>\n                <b>Regional Rank:</b> #{{user.localRank}} <img class=\"participantFlag\"\n                  src=\"\\assets/flags/{{user.country}}.png\" alt=\"{{user.country}} Flag\"\n                  style=\"height: 20px;border: none;\"><br>\n                <b>Seed:</b> #{{user.seed}} <br>\n                <a *ngIf=\"user.ssId\" href=\"https://scoresaber.com/u/{{user.ssId}}\" target=\"_blank\">Scoresaber</a> <br>\n                <a href=\"https://twitch.tv/{{user.twitchName}}\" target=\"_blank\">Twitch</a> <br>\n                <span *ngIf=\"isAuthorised || user.comment != null\"\n                  [innerHTML]=\"'Comment: ' + (user.comment | linkify: linkOptions) + '\\n'\"\n                  style=\"white-space: pre-line;\"></span>\n                <button mat-stroked-button color=\"warn\" *ngIf=\"isAuthorised\"\n                  (click)=\"deleteParticipant(user.participantId)\">Remove Participant</button> &nbsp;\n                <button mat-stroked-button color=\"accent\"\n                  *ngIf=\"(curUser != null && user.discordId == curUser.discordId) || isAuthorised\"\n                  (click)=\"editComment(user.participantId)\">Edit comment</button> &nbsp;\n              </p>\n            </mat-expansion-panel>\n          </mat-accordion>\n        </ng-container>\n      </ng-container>\n\n      <ng-container *ngIf=\"editMode\">\n        <mat-accordion [cdkDropListData]=\"participants\" cdkDropList (cdkDropListDropped)=\"seedDragDrop($event)\">\n          <span *ngIf=\"editMode\">Qualified</span>\n          <ng-container *ngFor=\"let user of participants; let i = index\">\n            <mat-expansion-panel disabled hideToggle *ngIf=\"user.seed != 0\" class=\"playerPanel\"\n              [ngClass]=\"{'eliminated' : user.position != 0}\" cdkDrag [cdkDragData]=\"user\"\n              [cdkDragDisabled]=\"user.position != 0\">\n              <mat-expansion-panel-header>\n                <mat-panel-title class=\"playerName\">\n                  #{{user.seed}} <img loading=\"lazy\" class=\"participantImgSmall\" src=\"{{user.avatar}}\">\n                  <a class=\"playerName\" [routerLink]=\"['/user', user.userId]\">\n                    {{user.name}}\n                  </a>\n                </mat-panel-title>\n                <mat-panel-description class=\"playerSumary\">\n                  <i *ngIf=\"editMode\" class=\"far fa-trash-alt\" (click)=\"deleteParticipant(user.participantId)\"></i>\n                  &nbsp;\n                  <i *ngIf=\"editMode && user.position == 0\" cdkDragHandle class=\"fas fa-grip-vertical grabber\"></i>\n                </mat-panel-description>\n              </mat-expansion-panel-header>\n            </mat-expansion-panel>\n          </ng-container>\n        </mat-accordion>\n        <div *ngIf=\"editMode\">\n          Non Qualified\n          <mat-accordion [cdkDropListData]=\"nonQualified\" cdkDropList (cdkDropListDropped)=\"seedDragDrop($event)\">\n            <ng-container *ngFor=\"let user of nonQualified; let i = index\">\n              <mat-expansion-panel disabled hideToggle class=\"playerPanel\"\n                [ngClass]=\"{'eliminated' : user.position != 0}\" cdkDrag [cdkDragData]=\"user\"\n                [cdkDragDisabled]=\"user.position != 0\">\n                <mat-expansion-panel-header>\n                  <mat-panel-title class=\"playerName\">\n                    <img loading=\"lazy\" class=\"participantImgSmall\" src=\"{{user.avatar}}\">\n                    <a class=\"playerName\" [routerLink]=\"['/user', user.userId]\">\n                      {{user.name}}\n                    </a>\n                  </mat-panel-title>\n                  <mat-panel-description class=\"playerSumary\">\n                    <i *ngIf=\"editMode\" class=\"far fa-trash-alt\" (click)=\"deleteParticipant(user.participantId)\"></i>\n                    &nbsp;\n                    <i *ngIf=\"editMode && user.position == 0\" cdkDragHandle class=\"fas fa-grip-vertical grabber\"></i>\n                  </mat-panel-description>\n                </mat-expansion-panel-header>\n              </mat-expansion-panel>\n            </ng-container>\n          </mat-accordion>\n        </div>\n      </ng-container>\n    </div>\n\n    <!-- Battle royale -->\n    <p class=\"card-text\" *ngIf=\"(tournament.state == 'main_stage' || tournament.state == 'archived') && tournament.type == 'battle_royale' \n            && !all \n            && isAuthorised\n            && canEdit()\">\n      <mat-checkbox [checked]=\"editMode\" (change)=\"editMode = !editMode\" style=\"display: block;\">\n        Edit <i class=\"fas fa-edit\"></i>\n      </mat-checkbox>\n      <ng-container *ngIf=\"editMode\">\n        *Reordering participants will change their seed.\n        <br>\n        <!-- <button mat-button color=\"primary\" (click)=\"addPlayer()\">Add Player</button> -->\n        <!-- <button mat-button color=\"primary\" (click)=\"recalc()\">Recalc from quals</button>\n                <br> -->\n        <button mat-raised-button color=\"accent\" (click)=\"save()\">Save</button>\n        <button mat-raised-button color=\"warn\" (click)=\"updateParticipants()\">Revert</button>\n      </ng-container>\n    </p>\n    <div class=\"participantGrid\"\n      *ngIf=\"(tournament.state == 'main_stage' || tournament.state == 'archived') && tournament.type == 'battle_royale' && !all\"\n      [ngClass]=\"{'battleRoyale' : tournament.type == 'battle_royale'}\" cdkDropListGroup>\n      <mat-accordion [cdkDropListData]=\"participants\" cdkDropList (cdkDropListDropped)=\"seedDragDrop($event)\">\n        <span *ngIf=\"editMode\">Qualified</span>\n        <ng-container *ngFor=\"let user of participants; let i = index\">\n          <mat-expansion-panel hideToggle *ngIf=\"user.seed != 0\" class=\"playerPanel\"\n            [ngClass]=\"{'eliminated' : user.position != 0}\" cdkDrag [cdkDragData]=\"user\"\n            [cdkDragDisabled]=\"user.position != 0 || !editMode\">\n            <mat-expansion-panel-header>\n              <mat-panel-title class=\"playerName\">\n                #{{user.seed}} <img loading=\"lazy\" class=\"participantImgSmall\" src=\"{{user.avatar}}\">\n                <a class=\"playerName\" [routerLink]=\"['/user', user.userId]\">\n                  {{user.name}}\n                </a>\n              </mat-panel-title>\n              <mat-panel-description class=\"playerSumary\">\n                <i *ngIf=\"editMode\" class=\"far fa-trash-alt\" (click)=\"deleteParticipant(user.participantId)\"></i> &nbsp;\n                <i *ngIf=\"editMode && user.position == 0\" cdkDragHandle class=\"fas fa-grip-vertical grabber\"></i>\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n            <p class=\"card-text\">\n              <b>Seed:</b> #{{user.seed}} <br>\n              <b>Global Rank:</b> #{{user.globalRank}} <br>\n              <b>Regional Rank:</b> #{{user.localRank}} <img class=\"participantFlag\"\n                src=\"\\assets/flags/{{user.country}}.png\" alt=\"{{user.country}} Flag\"\n                style=\"height: 20px;border: none;\"><br>\n              <a *ngIf=\"user.ssId\" href=\"https://scoresaber.com/u/{{user.ssId}}\" target=\"_blank\">Scoresaber</a> <br>\n              <a href=\"https://twitch.tv/{{user.twitchName}}\" target=\"_blank\">Twitch</a> <br>\n              <span *ngIf=\"isAuthorised || user.comment != null\"\n                [innerHTML]=\"'Comment: ' + (user.comment | linkify: linkOptions) + '\\n'\"\n                style=\"white-space: pre-line;\"></span>\n              <button mat-stroked-button color=\"warn\" *ngIf=\"isAuthorised && user.position == 0\"\n                (click)=\"eliminateParticipant(user.participantId)\">Eliminate Participant</button> &nbsp;\n              <button mat-stroked-button color=\"accent\"\n                *ngIf=\"(curUser != null && user.discordId == curUser.discordId) || isAuthorised\"\n                (click)=\"editComment(user.participantId)\">Edit comment</button> &nbsp;\n            </p>\n          </mat-expansion-panel>\n        </ng-container>\n      </mat-accordion>\n      <div *ngIf=\"editMode\">\n        Non Qualified\n        <mat-accordion [cdkDropListData]=\"nonQualified\" cdkDropList (cdkDropListDropped)=\"seedDragDrop($event)\">\n          <ng-container *ngFor=\"let user of nonQualified; let i = index\">\n            <mat-expansion-panel disabled hideToggle class=\"playerPanel\" [ngClass]=\"{'eliminated' : user.position != 0}\"\n              cdkDrag [cdkDragData]=\"user\" [cdkDragDisabled]=\"user.position != 0\">\n              <mat-expansion-panel-header>\n                <mat-panel-title class=\"playerName\">\n                  <img loading=\"lazy\" class=\"participantImgSmall\" src=\"{{user.avatar}}\">\n                  <a class=\"playerName\" [routerLink]=\"['/user', user.userId]\">\n                    {{user.name}}\n                  </a>\n                </mat-panel-title>\n                <mat-panel-description class=\"playerSumary\">\n                  <i *ngIf=\"editMode\" class=\"far fa-trash-alt\" (click)=\"deleteParticipant(user.participantId)\"></i>\n                  &nbsp;\n                  <i *ngIf=\"editMode && user.position == 0\" cdkDragHandle class=\"fas fa-grip-vertical grabber\"></i>\n                </mat-panel-description>\n              </mat-expansion-panel-header>\n            </mat-expansion-panel>\n          </ng-container>\n        </mat-accordion>\n      </div>\n\n    </div>\n  </ng-template>\n</div>\n","<h1>Edit sign up</h1>\n<form [formGroup]=\"signUpForm\" novalidate (ngSubmit)=\"onSubmit()\">\n    <!-- Value: {{ signUpForm.value | json }} -->\n    <br>\n    <mat-form-field>\n        <mat-label>{{signUpComment}}</mat-label>\n        <textarea matInput formControlName=\"comment\"></textarea>\n        <mat-error *ngIf=\"comment.invalid && comment.touched\">\n            This tournament requires you to provide: {{signUpComment}} in order to sign up\n        </mat-error>\n    </mat-form-field>\n\n    <div mat-dialog-actions>\n        <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"signUpForm.invalid\">Update sign Up</button>\n    </div>\n</form>","import { CdkDrag, CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { HttpClient } from '@angular/common/http';\nimport { ChangeDetectorRef, Component, Inject, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport { User } from '../models/user.model';\nimport { NotificationService } from '../services/toast.service';\nimport { UserAuthService } from '../services/user-auth.service';\nimport { AddPlayerComponent } from '../_modals/add-player/add-player.component';\nimport { AssignSessionComponent } from '../_modals/assign-session/assign-session.component';\nimport { participant } from '../_models/participants';\nimport { qualifierSession } from '../_models/qualifiers';\n\n@Component({\n    selector: 'app-participants',\n    templateUrl: './participants.component.html',\n    styleUrls: ['./participants.component.scss']\n})\nexport class ParticipantsComponent implements OnInit {\n\n    @Input() tournament;\n    @Input() participants: participant[];\n    @Input() all: boolean = false;\n\n    isAuthorised = false;\n    curUser: User = null;\n    loading = true;\n\n    editMode = false;\n\n    nonQualified: participant[];\n\n    linkOptions = {\n        target: {\n            url: \"_blank\"\n        }\n    }\n\n    userSession: qualifierSession;\n\n    constructor(public http: HttpClient, public dialog: MatDialog, private notif: NotificationService, public cd: ChangeDetectorRef, public router: Router, private userS: UserAuthService) { }\n\n    ngOnInit(): void {\n        this.updateParticipants()\n        if (this.curUser == null) {\n            this.updateUser();\n        }\n    }\n\n    async updateParticipants() {\n        this.loading = true;\n        let info = await this.http.get<participant[]>(`/api/tournament/${this.tournament.tournamentId}/${this.all ? 'allParticipants' : 'participants'}`).toPromise();\n        for (let i = 0; i < info.length; i++) {\n            if (!info[i].avatar) info[i].avatar = \"\";\n            if (info[i].avatar.includes('api') || info[i].avatar.includes('oculus')) {\n                info[i].avatar = \"https://new.scoresaber.com\" + info[i].avatar;\n            } else {\n                // info[i].avatar = `/${info[i].avatar}` + (info[i].avatar.substring(0, 2) == 'a_' ? '.gif' : '.webp');\n                info[i].avatar = `https://cdn.discordapp.com/avatars/${info[i].discordId}/${info[i].avatar}` + (info[i].avatar.substring(0, 2) == 'a_' ? '.gif' : '.webp')\n            }\n        }\n        this.nonQualified = info.filter(x => x.seed == 0);\n        this.participants = info;\n        this.sortParticipants();\n        try {\n            this.userSession = await this.http.get<qualifierSession>(`/api/tournament/${this.tournament.tournamentId}/qualifiers/sessions/current`).toPromise();\n        } catch (error) {\n\n        }\n        this.loading = false;\n    }\n\n    displayTime(dateString: string) {\n        return new Date(dateString).toLocaleString();\n    }\n\n    sortParticipants() {\n        if ((this.tournament.state == 'main_stage' || this.tournament.state == 'archived') && !this.all) {\n            this.participants = this.participants.filter(x => x.seed != 0);\n            if (this.tournament.type == 'battle_royale') {\n                this.participants.sort(this.royaleSort);\n            } else {\n                this.participants.sort(this.seedSort);\n            }\n        } else {\n            if (this.tournament.sort_method == 'globalRank') {\n                this.participants.sort(this.orderGlobal);\n            } else if (this.tournament.sort_method == 'date') {\n                this.participants.sort(this.dateSort);\n            }\n        }\n    }\n\n    orderGlobal(a, b) {\n        if (b.globalRank == 0) return -1;\n        if (a.globalRank == 0) return 1;\n        return a.globalRank - b.globalRank;\n    }\n\n    dateSort(a, b) {\n        return a.participantId - b.participantId;\n    }\n\n    seedSort(a, b) {\n        if (a.seed == b.seed) {\n            if (b.globalRank == 0) return -1;\n            if (a.globalRank == 0) return 1;\n            return a.globalRank - b.globalRank;\n        } else {\n            if (b.seed == 0) return -1;\n            if (a.seed == 0) return 1;\n            return a.seed - b.seed;\n        }\n    }\n\n    royaleSort(a, b) {\n        if (a.position == 0 && b.position == 0) {\n            if (b.seed == 0) return -1;\n            if (a.seed == 0) return 1;\n            return a.seed - b.seed;\n        } else {\n            return a.position - b.position;\n        }\n    }\n\n    async updateUser() {\n        this.curUser = await this.userS.curUser();\n        if (this.curUser != null && (this.curUser['roleIds'].includes('1') || this.curUser.discordId == this.tournament.owner)) {\n            this.isAuthorised = true;\n        }\n    }\n\n    deleteParticipant(participantId) {\n        const dialog = this.dialog.open(ConfirmDialogComponent, {\n            // height: '400px',\n            width: '400px',\n            data: {\n                cancelText: 'Cancel',\n                confirmText: 'Confirm',\n                message: 'Are you sure you want to remove this user from this tournament?',\n                title: 'Remove Participant?'\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(async data => {\n                if (data) {\n                    let info = {\n                        participantId: participantId\n                    }\n                    try {\n                        await this.http.post(`/api/tournament/${this.tournament.tournamentId}/deleteParticipant`, info).toPromise();\n                        this.notif.showSuccess('', 'Successfully removed participant');\n                        this.participants.splice(this.participants.findIndex(x => x.participantId == participantId), 1);\n                    } catch (error) {\n                        console.error(\"Error: \", error);\n                        this.notif.showError('', 'Error removing participant');\n                    }\n                }\n            });\n    }\n\n    eliminateParticipant(participantId) {\n        const dialog = this.dialog.open(ConfirmDialogComponent, {\n            // height: '400px',\n            width: '400px',\n            data: {\n                cancelText: 'Cancel',\n                confirmText: 'Confirm',\n                message: 'Are you sure you want to eliminate this user?',\n                title: 'Eliminate Participant?'\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(async data => {\n                if (data) {\n                    let info = {\n                        participantId: participantId\n                    }\n                    try {\n                        await this.http.post(`/api/tournament/${this.tournament.tournamentId}/elimParticipant`, info).toPromise();\n                        this.notif.showSuccess('', 'Successfully eliminated participant');\n                        this.updateParticipants();\n                    } catch (error) {\n                        console.error(\"Error: \", error);\n                        this.notif.showError('', 'Error eliminating participant');\n                    }\n                    // this.elimParticipant(info)\n                    //     .subscribe(data => {\n                    //         if (!data.flag) {\n                    //             this.notif.showSuccess('', 'Successfully eliminated participant');\n                    //             // this.participants.splice(this.participants.findIndex(x => x.participantId == participantId), 1);\n                    //             this.updateParticipants();\n                    //         } else {\n                    //             console.error(\"Error: \", data);\n                    //             this.notif.showError('', 'Error eliminating participant');\n                    //         }\n                    //     }, error => {\n                    //         this.notif.showError('', 'Error eliminating participant');\n                    //         console.error(\"Error: \", error);\n                    //     });\n                }\n            });\n    }\n\n    editComment(participantId) {\n        const dialog = this.dialog.open(editCommentDialog, {\n            minWidth: '60vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: {\n                participantId: participantId,\n                tournament: this.tournament,\n                curUser: this.participants.find(x => x.participantId == participantId)\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(data => {\n                if (data) {\n                    let userIndex = this.participants.findIndex(x => x.participantId == data.participantId);\n                    // console.log(this.participants[userIndex])\n                    this.participants[userIndex] = { ...this.participants[userIndex], ...data }\n                    // console.log(this.participants[userIndex])\n                    // console.log(data)\n                }\n            });\n    }\n\n    updateQualSession() {\n        const dialog = this.dialog.open(AssignSessionComponent, {\n            minWidth: '60vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: {\n                tournament: this.tournament,\n                session: this.userSession\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(data => {\n                if (data) {\n                    // let userIndex = this.participants.findIndex(x => x.participantId == data.participantId);\n                    // // console.log(this.participants[userIndex])\n                    // this.participants[userIndex] = { ...this.participants[userIndex], ...data }\n                    // console.log(this.participants[userIndex])\n                    // console.log(data)\n                }\n            });\n    }\n\n    removeParticipant(data: any): Observable<any> {\n        return this.http.post(`/api/tournament/${this.tournament.tournamentId}/deleteParticipant`, data);\n    }\n\n    elimParticipant(data: any): Observable<any> {\n        return this.http.post(`/api/tournament/${this.tournament.tournamentId}/elimParticipant`, data);\n    }\n\n    setParticpants() {\n        this.getParticipants()\n            .subscribe(data => {\n                this.participants = data;\n                this.participants.sort(this.orderGlobal);\n                this.cd.detectChanges();\n                // console.log(this.participants);\n            })\n    }\n\n    canEdit() {\n        return this.participants.every(x => x.position == 0);\n    }\n\n    getParticipants(): Observable<any> {\n        return this.http.get(`/api/tournament/${this.tournament.tournamentId}/${this.all ? 'allParticipants' : 'participants'}`);\n    }\n\n    addPlayer() {\n        const dialog = this.dialog.open(AddPlayerComponent, {\n            minWidth: '60vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n        });\n    }\n\n    recalc() {\n\n    }\n\n    async save() {\n        try {\n            await this.http.put(`/api/tournament/${this.tournament.tournamentId}/participants`, this.participants).toPromise();\n            this.notif.showSuccess('', 'Successfully updated participant');\n            this.updateParticipants();\n        } catch (error) {\n            console.error(\"Error: \", error);\n            this.notif.showError('', 'Error updating participants');\n        }\n    }\n\n    seedDragDrop(event: CdkDragDrop<participant>) {\n        // console.log(event);\n        if (event.previousContainer === event.container) {\n            // moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n            if (this.participants[event.currentIndex].position == 0) {\n                moveItemInArray(this.participants, event.previousIndex, event.currentIndex);\n                for (let i = 0; i < this.participants.length; i++) {\n                    const user = this.participants[i];\n                    user.seed = i + 1;\n                }\n            }\n        } else {\n            if (this.participants.find(x => x == event.item.data)) {\n                transferArrayItem(this.participants,\n                    this.nonQualified,\n                    event.previousIndex,\n                    event.currentIndex);\n            } else {\n                transferArrayItem(this.nonQualified,\n                    this.participants,\n                    event.previousIndex,\n                    event.currentIndex);\n            }\n            for (let i = 0; i < this.participants.length; i++) {\n                const user = this.participants[i];\n                user.seed = i + 1;\n            }\n        }\n\n    }\n}\n\n@Component({\n    selector: 'editCommentDialog',\n    templateUrl: './editCommentDialog.html',\n})\nexport class editCommentDialog implements OnInit {\n\n    signUpForm: FormGroup;\n    id: number;\n    signUpComment: string = '';\n\n    filteredOptions: Observable<any>;\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private dialogRef: MatDialogRef<editCommentDialog>,\n        private notif: NotificationService\n    ) {\n\n    }\n\n    ngOnInit() {\n        // console.log(this.data)\n        this.id = this.data.tournament.tournamentId;\n        this.signUpComment = this.data.tournament.signup_comment;\n        this.signUpForm = this.fb.group({\n            comment: this.data.curUser.comment\n        });\n        if (!!this.data.tournament.comment_required) {\n            this.signUpForm.controls['comment'].setValidators([Validators.required]);\n            this.signUpForm.controls['comment'].updateValueAndValidity();\n        }\n    }\n\n    get comment() {\n        return this.signUpForm.get('comment');\n    }\n\n    async onSubmit() {\n        // this.editSignup(this.signUpForm.value)\n        //     .subscribe(data => {\n        //         if (!data.flag) {\n        //             this.notif.showInfo('', 'Successfully updated sign up');\n        //             this.dialogRef.close({ ...this.signUpForm.value, participantId: this.data.participantId });\n        //         } else {\n        //             console.error('Error', data.err)\n        //             this.notif.showError('', 'Error updaing sign up');\n        //             this.dialogRef.close(false);\n        //         }\n        //     }, error => {\n        //         this.notif.showError('', 'Error updaing sign up');\n        //         console.error(\"Error: \", error);\n        //         this.dialogRef.close(false);\n        //     });\n        try {\n            await this.http.put(`/api/updateParticipant/${this.id}/${this.data.participantId}`, this.signUpForm.value).toPromise();\n            this.notif.showInfo('', 'Successfully updated sign up');\n            this.dialogRef.close({ ...this.signUpForm.value, participantId: this.data.participantId });\n        } catch (error) {\n            this.notif.showError('', 'Error updaing sign up');\n            console.error(\"Error: \", error);\n            this.dialogRef.close(false);\n        }\n    }\n\n    editSignup(data: any): Observable<any> {\n        return this.http.put(`/api/updateParticipant/${this.id}/${this.data.participantId}`, data);\n    }\n}\n","<div *ngIf=\"!curUser || !user else loaded\">\n    <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 100px;\">\n</div>\n\n<ng-template #loaded>\n    <div class=\"container\">\n        <div class=\"card noHover\">\n            <div class=\"card-body\">\n                <!-- <img class=\"profileImg\" src=\"{{ user.avatar }}\" /> -->\n                <div class=\"right-container\">\n                    <img class=\"profileImg\" src=\"{{ curUser.avatar }}\" />\n                </div>\n                <h1>\n                    {{ curUser.name }}\n                    <img class=\"countryImg\" src=\"\\assets/flags/{{curUser.country | uppercase}}.png\" alt=\"\">\n                </h1>\n                <div *ngIf=\"curUser.badges.length > 0\" class=\"badges\">\n                    <img *ngFor=\"let badge of curUser.badges\" src=\"assets/badges/{{badge.image}}.png\"\n                        alt=\"{{badge.description}}\" title=\"{{badge.description}}\">\n                </div>\n                <p class=\"card-text\">\n                    <b>Global Rank:</b> #{{curUser.globalRank}} <br>\n                    <b>Regional Rank:</b> #{{curUser.localRank}} <br>\n                    <!-- <b>Tournament Rank:</b> #{{curUser.tourneyRank}} <br> -->\n                    <a *ngIf=\"user.ssId\" href=\"https://scoresaber.com/u/{{curUser.ssId}}\" target=\"_blank\">Scoresaber</a>\n                    <br>\n                    <a href=\"https://twitch.tv/{{curUser.twitchName}}\" target=\"_blank\">Twitch</a>\n                    <br><br>\n                    <button mat-stroked-button color=\"primary\" (click)=\"editUser(user.discordId)\">Edit</button> &nbsp;\n                    <a mat-stroked-button color=\"primary\" href=\"/api/quest\" target=\"_blank\">Download QuestID</a>\n                </p>\n                <div>\n                    <h4>Previous Tournaments</h4>\n                    <ul class=\"card-text\" style=\"margin-left:10px\">\n                        <li *ngFor=\"let tournament of curUser.tournaments\">{{tournament}}</li>\n                    </ul>\n                </div>\n                <ng-container *ngIf=\"user['roleIds'].includes('1') || user['roleIds'].includes('2')\">\n                    <br>\n                    <h4>Staff:</h4>\n                    <p class=\"card-text\">\n                        <a [routerLink]=\"['/users']\">All Users</a> <br>\n                        <a [routerLink]=\"['/badges']\">Badges</a> <br>\n                        <a [routerLink]=\"['/logs']\">Logs</a>\n                    </p>\n                </ng-container>\n\n            </div>\n        </div>\n    </div>\n</ng-template>","<h1 mat-dialog-title>Edit {{data.selUser.name}}</h1>\n<form [formGroup]=\"userForm\" novalidate (ngSubmit)=\"onSubmit()\">\n    <!-- Value: {{ userForm.value | json }} -->\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Name\" formControlName=\"name\">\n    </mat-form-field>\n    <br>\n    <!-- <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Score Saber ID\" formControlName=\"ssId\">\n    </mat-form-field> -->\n    <br>\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Twitch Name\" formControlName=\"twitchName\">\n    </mat-form-field>\n    <br>\n    <label id=\"pronounlabel\">Preferred Pronoun:</label>\n    <mat-radio-group aria-labelledby=\"pronounlabel\" formControlName=\"pronoun\" class=\"pronounRadio\">\n        <mat-radio-button *ngFor=\"let pronoun of pronouns\" class=\"radio-button\" value=\"{{pronoun}}\">{{pronoun}}\n        </mat-radio-button>\n        <mat-radio-button class=\"radio-button\" value=\"Other\">Other</mat-radio-button>\n        <mat-form-field style=\"margin-top: 5px;\" class=\"fill\" *ngIf=\"pronouns.indexOf(userForm.value.pronoun) == -1\">\n            <input matInput placeholder=\"Preferred Pronoun\" formControlName=\"pronoun\">\n        </mat-form-field>\n    </mat-radio-group>\n    <br>\n    <!-- <label>Roles:</label> -->\n    <!-- <div class=\"roles\">\n        <mat-checkbox *ngFor=\"let role of userRoles\" (change)=\"updateRoleId(role.id)\" [checked]=\"roleIds.includes(+role.id)\" [disabled]=\"role.id <= minRole\">\n            {{role.name}}\n        </mat-checkbox>\n    </div> -->\n\n    <div mat-dialog-actions>\n        <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"userForm.invalid\">Update user</button>\n    </div>\n</form>","import { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { AppComponent } from '../app.component';\nimport { NotificationService } from '../services/toast.service';\nimport { userAPI } from '../_models/user.model';\n\n@Component({\n    selector: 'app-profile',\n    templateUrl: './profile.component.html',\n    styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent extends AppComponent implements OnInit {\n\n    title = \"Profile | BeatKhana!\";\n    loading = true;\n    curUser: userAPI = null;\n\n    async ngOnInit(): Promise<void> {\n        this.setTitle(this.title);\n\n        await this.updateUser();\n        this.curUser = await this.http.get<userAPI>(`/api/user/${this.user.discordId}`).toPromise();\n        // this.setTitle(this.curUser.name+\"'s Profile\" + this.title);\n        if (this.curUser.avatar.includes('api') || this.curUser.avatar.includes('oculus')) {\n            this.curUser.avatar = \"https://new.scoresaber.com\" + this.curUser.avatar;\n        } else {\n            this.curUser.avatar = `/${this.curUser.avatar}` + (this.curUser.avatar.substring(0, 2) == 'a_' ? '.gif' : '.webp');\n            this.curUser.avatar = `https://cdn.discordapp.com/avatars/${this.curUser.discordId}${this.curUser.avatar}`\n        }\n        console.log(this.user);\n    }\n\n    editUser(id) {\n        const dialog = this.dialog.open(editProfileDialog, {\n            // height: '400px',\n            minWidth: '60vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: {\n                selUser: this.user,\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(data => {\n                if (data) {\n                    this.user = { ...this.user, ...data };\n                }\n            });\n    }\n\n}\n\n@Component({\n    selector: 'editProfileDialog',\n    templateUrl: './editProfileDialog.html',\n    styleUrls: ['./profile.component.scss']\n})\nexport class editProfileDialog implements OnInit {\n\n    userForm: FormGroup;\n\n    pronouns = ['He/Him', 'She/Her', 'They/Them'];\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private dialogRef: MatDialogRef<editProfileDialog>,\n        private notif: NotificationService\n    ) { }\n\n    // roleIds = [];\n    // minRole = 999;\n\n    ngOnInit() {\n        this.userForm = this.fb.group({\n            discordId: [this.data.selUser.discordId, [\n                Validators.required\n            ]],\n            name: [this.data.selUser.name, [\n                Validators.required\n            ]],\n            twitchName: [this.data.selUser.twitchName, [\n                Validators.required\n            ]],\n            pronoun: [this.data.selUser.pronoun, [\n                Validators.required\n            ]]\n        });\n        this.userForm.value.roleIds = [];\n        // this.roleIds = this.data.selUser.roleIds != null ? this.data.selUser.roleIds.split(', ').map(x=>+x) : [];\n        // this.minRole = Math.min(...this.data.curUser.roleIds.map(x=>+x));\n    }\n\n    async onSubmit() {\n        try {\n            await this.http.put('/api/user/' + this.userForm.value.discordId, this.userForm.value).toPromise();\n            this.notif.showSuccess('', 'Successfully updated profile');\n            this.dialogRef.close(this.userForm.value);\n        } catch (error) {\n            console.error(\"Error: \", error);\n            this.notif.showError('', 'Error updating profile');\n            this.dialogRef.close(false);\n        }\n    }\n\n    updateUser(): Observable<any> {\n        return this.http.put('/api/user/' + this.userForm.value.discordId, this.userForm.value);\n    }\n}\n","<div class=\"card-body\">\n  <h1>{{tournament.name}}</h1>\n  <h3>Qualifiers</h3>\n\n  <div *ngIf=\"loading else loaded\">\n    <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n            margin-left: auto;\n            margin-right: auto;\n            width: 70px;\n            border: none;\">\n  </div>\n\n  <ng-template #loaded>\n    <button *ngIf=\"isAuth\" style=\"float: right;\" (click)=\"taSync()\" mat-stroked-button color=\"primary\">Sync With\n      TA</button>\n    <br>\n    <mat-tab-group animationDuration=\"300ms\" dynamicHeight>\n      <mat-tab>\n        <ng-template mat-tab-label>\n          <span class=\"labelText\">All Songs</span>\n        </ng-template>\n        <mat-accordion>\n          <mat-expansion-panel hideToggle *ngFor=\"let user of qualsScores; let i = index\" class=\"playerPanel\"\n            [disabled]=\"user.cutoff || user.scores.length == 0\" [ngClass]=\"{'cutoff' : user.cutoff}\">\n            <mat-expansion-panel-header>\n\n              <mat-panel-title class=\"playerName\" *ngIf=\"!user.cutoff\">\n                #{{user.position}} <img class=\"participantImgSmall\" src=\"{{user.avatar}}\"> <a\n                  routerLink=\"/user/{{user.discordId}}\">{{user.name}}</a>\n              </mat-panel-title>\n              <mat-panel-description class=\"playerSumary\" *ngIf=\"!user.cutoff\">\n                <b style=\"color: #fff\">{{user.scoreSum}}</b> &nbsp; ({{user.avgPercentage}}%)\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n            <p *ngIf=\"!user.cutoff\" class=\"card-text\">\n              <span *ngFor=\"let score of user.scores\">\n                <b style=\"color: #fff\">#{{score.position+1}}</b> &nbsp;\n                <a href=\"https://beatsaver.com/beatmap/{{score.key}}\" target=\"_blank\">\n                  {{score.songName}} - {{score.songAuthor}}\n                </a>\n                <span class=\"mapperName\">[{{score.levelAuthor}}]</span>\n                <span style=\"float: right; color: rgba(255, 255, 255, 0.7);\">\n                  <b class=\"rawScore\" style=\"color: #fff\">{{score.score}}</b> &nbsp;\n                  ({{(score.percentage *\n                                    100).toFixed(2)}}%)\n                </span>\n                <br>\n              </span>\n            </p>\n          </mat-expansion-panel>\n\n        </mat-accordion>\n      </mat-tab>\n      <mat-tab *ngFor=\"let leaderboard of leaderboards | keyvalue\">\n        <ng-template mat-tab-label>\n          <img src=\"https://scoresaber.com/imports/images/songs/{{leaderboard.key}}.png\" class=\"labelImage\">\n          <span class=\"labelText\">{{findSong(leaderboard.key).name}}</span>\n        </ng-template>\n        <mat-accordion>\n          <mat-expansion-panel hideToggle *ngFor=\"let user of leaderboard.value; let i = index\" class=\"playerPanel\"\n            [disabled]=\"true\">\n            <mat-expansion-panel-header>\n              <mat-panel-title class=\"playerName\" *ngIf=\"!user.cutoff\">\n                #{{i+1}} <img class=\"participantImgSmall\" src=\"{{user.avatar}}\"> <a\n                  routerLink=\"/user/{{user.discordId}}\">{{user.name}}</a>\n              </mat-panel-title>\n              <mat-panel-description class=\"playerSumary\" *ngIf=\"!user.cutoff\">\n                <b style=\"color: #fff\">{{user.score}}</b> &nbsp; ({{user.percentage}}%)\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n          </mat-expansion-panel>\n\n        </mat-accordion>\n      </mat-tab>\n    </mat-tab-group>\n  </ng-template>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { AppComponent } from '../app.component';\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport { addSongDialog } from '../map-pool/map-pool.component';\nimport { NotificationService } from '../services/toast.service';\nimport { staff } from '../_models/tournamentApi.model';\n\n@Component({\n    selector: 'app-qualifiers',\n    templateUrl: './qualifiers.component.html',\n    styleUrls: ['./qualifiers.component.scss']\n})\nexport class QualifiersComponent extends AppComponent implements OnInit {\n\n    @Input() tournament;\n\n    qualsScores = [];\n    loading = true;\n\n    pools: any = [];\n    leaderboards = {};\n    qualsPool;\n\n    isAuth = false;\n    staff: staff[];\n\n\n    // constructor(public http: HttpClient, public dialog: MatDialog, private notif: NotificationService) { }\n\n    async ngOnInit(): Promise<void> {\n        let pools = await this.http.get(`api/tournament/${this.tournament.tournamentId}/map-pools`).toPromise();\n        let tmp = Object.values(pools).filter(x => x.is_qualifiers == 1);\n        this.qualsPool = Object.values(pools).find(x => x.is_qualifiers == 1);\n        for (let pool of tmp) {\n            if (pool.id != this.qualsPool.id) {\n                this.qualsPool.songs = [...this.qualsPool.songs, ...pool.songs];\n            }\n        }\n        this.staff = await this.http.get<staff[]>(`/api/tournament/${this.tournament.tournamentId}/staff`).toPromise();\n        if (this.user) {\n            this.isAuth = this.tournament.owner == this.user.discordId || this.user['roleIds'].includes('1') || !!this.staff.find(x => x.discordId == this.user.discordId && x.roles.map(x => x.id).includes(1));\n        }\n\n        this.getQuals()\n            .subscribe(res => {\n                this.qualsScores = res;\n                for (const user of this.qualsScores) {\n                    if (!user.avatar) user.avatar = \"\";\n                    if (user.avatar.includes('api') || user.avatar.includes('oculus')) {\n                        user.avatar = \"https://new.scoresaber.com\" + user.avatar;\n                    } else {\n                        user.avatar = `/${user.avatar}` + (user.avatar.substring(0, 2) == 'a_' ? '.gif' : '.webp');\n                        user.avatar = `https://cdn.discordapp.com/avatars/${user.discordId}${user.avatar}`\n                    }\n                    for (const score of user.scores) {\n                        if (this.qualsPool.songs.find(x => x.hash == score.songHash)?.numNotes != 0) {\n                            score.percentage = score.score / (this.qualsPool.songs.find(x => x.hash == score.songHash)?.numNotes * 920 - 7245)\n                        } else {\n                            score.percentage = 0;\n                        }\n                        // score.score = Math.round(score.score / 2);\n                        if (score.songHash in this.leaderboards) {\n                            this.leaderboards[score.songHash].push({\n                                discordId: user.discordId,\n                                name: user.name,\n                                avatar: user.avatar,\n                                score: score.score,\n                                percentage: (score.percentage * 100).toFixed(2)\n                            });\n                        } else {\n                            this.leaderboards[score.songHash] = [{\n                                discordId: user.discordId,\n                                name: user.name,\n                                avatar: user.avatar,\n                                score: score.score,\n                                percentage: (score.percentage * 100).toFixed(2)\n                            }];\n                        }\n                    }\n\n                }\n                // leadboards.sort((a,b) => a.score)\n                for (const leaderboard of Object.keys(this.leaderboards)) {\n                    this.leaderboards[leaderboard].sort((a, b) => b.score - a.score);\n                }\n                for (const user of this.qualsScores) {\n                    for (const score of user.scores) {\n                        score.position = this.leaderboards[score.songHash].findIndex(x => x.discordId == user.discordId);\n                    }\n                    user.scores.sort((a, b) => (a.songHash > b.songHash) ? 1 : ((a.songHash < b.songHash) ? -1 : 0));\n                }\n\n                if (this.qualsScores.length == 1) {\n                    let sumA = this.sumProperty(this.qualsScores[0].scores, 'score');\n                    let sumAPer = this.sumProperty(this.qualsScores[0].scores, 'percentage');\n                    this.qualsScores[0].avgPercentage = isNaN(sumAPer / this.qualsPool.songs.length * 100) ? 0 : (sumAPer / this.qualsPool.songs.length * 100).toFixed(2);\n                    this.qualsScores[0].scoreSum = sumA;\n                }\n\n                this.qualsScores.sort((a, b) => {\n                    let sumA = this.sumProperty(a.scores, 'score');\n                    let sumB = this.sumProperty(b.scores, 'score');\n                    let sumAPer = this.sumProperty(a.scores, 'percentage');\n                    let sumBPer = this.sumProperty(b.scores, 'percentage');\n                    a.avgPercentage = isNaN(sumAPer / this.qualsPool.songs.length * 100) ? 0 : (sumAPer / this.qualsPool.songs.length * 100).toFixed(2);\n                    b.avgPercentage = isNaN(sumBPer / this.qualsPool.songs.length * 100) ? 0 : (sumBPer / this.qualsPool.songs.length * 100).toFixed(2);\n                    a.scoreSum = sumA;\n                    b.scoreSum = sumB;\n                    if (b.avgPercentage == a.avgPercentage) {\n                        if (sumB == sumA) {\n                            if (a.globalRank == 0) return 1;\n                            if (b.globalRank == 0) return -1;\n                            return a.globalRank - b.globalRank;\n                        } else {\n                            return sumB - sumA;\n                        }\n                    } else {\n                        return b.avgPercentage - a.avgPercentage;\n                    }\n\n                });\n\n                this.qualsScores.splice(this.tournament.quals_cutoff, 0, {\n                    cutoff: true\n                });\n                let i = 1;\n                for (const user of this.qualsScores) {\n                    if (!user.cutoff) {\n                        user.position = i;\n                        i++;\n                    }\n                }\n                this.loading = false;\n            })\n    }\n\n    taSync() {\n        const dialog = this.dialog.open(ConfirmDialogComponent, {\n            // height: '400px',\n            width: '400px',\n            data: {\n                cancelText: 'Cancel',\n                confirmText: 'Sync',\n                message: 'Syncing scores with TA will remove all current scores and ensure that they match the TA leaderboards, this will bypass elements such as qualifier attempt limits or remove old scores that are no longer saved within TA.',\n                title: 'Sync Scores With TA'\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(async data => {\n                if (data) {\n                    try {\n                        await this.http.put(`/api/tournament/${this.tournament.tournamentId}/qualifiers/sync`, {}).toPromise();\n                        this.notif.showInfo('', 'Scores are being synced. Please refresh in a minute');\n                    } catch (error) {\n                        console.error(\"Error: \", error);\n                        this.notif.showError('', 'Error syncing scores');\n                    }\n                }\n            });\n    }\n\n    public getQuals(): Observable<any> {\n        return this.http.get(`/api/tournament/${this.tournament.tournamentId}/qualifiers`);\n    }\n\n    async getPools() {\n        return await this.http.get(`api/tournament/${this.tournament.tournamentId}/map-pools`).toPromise();\n    }\n\n    findSong(hash: string) {\n        return this.qualsPool.songs.find(x => x.hash == hash);\n    }\n\n    sumProperty(items, prop) {\n        if (items == null) {\n            return 0;\n        }\n        return items.reduce(function (a, b) {\n            return b[prop] == null ? a : a + b[prop];\n        }, 0);\n    }\n\n}","import { Component, HostListener, OnInit } from '@angular/core';\nimport { AppComponent } from '../app.component';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'app-rankings',\n    templateUrl: './rankings.component.html',\n    styleUrls: ['./rankings.component.scss']\n})\nexport class RankingsComponent extends AppComponent implements OnInit {\n\n    title = \"Rankings | BeatKhana!\";\n    private url = '/api/rankings';\n    public users = [];\n    loading = true;\n    secondLoading = false;\n    allRecords = false;\n    page = 0;\n\n    ngOnInit(): void {\n        this.getRanks()\n            .subscribe(data => {\n                this.page += 1;\n                this.users = data.data;\n                for (const member of this.users) {\n                    if(member.avatar.includes('api') || member.avatar.includes('oculus')) {\n                        member.avatar = \"https://new.scoresaber.com\" + member.avatar;\n                    } else {\n                        member.avatar = `/${member.avatar}` + (member.avatar.substring(0, 2) == 'a_' ? '.gif' : '.webp');\n                        member.avatar = `https://cdn.discordapp.com/avatars/${member.discordId}${ member.avatar }`\n                    }\n                }\n                this.loading = false;\n                // console.log(data)\n            });\n        this.setTitle(this.title);\n    }\n\n    public getRanks(): Observable<any> {\n        return this.http.get(this.url + `?page=${this.page}`);\n    }\n\n    @HostListener('window:scroll', ['$event'])\n    doSomething(event) {\n        if (window.pageYOffset - document.getElementsByClassName(\"playerGrid\")[0].scrollHeight > -1000 && !this.secondLoading && !this.allRecords) {\n            this.secondLoading = true\n            this.getRanks()\n            .subscribe(data => {\n                if(data.err == null) {\n                    this.page += 1;\n                    this.users = this.users.concat(data.data);\n                    this.secondLoading = false;\n                }else {\n                    this.secondLoading = false;\n                    this.allRecords = true;\n                }\n            });\n        }\n    }\n\n}\n","<div class=\"container playerGrid\">\n    <div *ngIf=\"loading else loaded\">\n        <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 100px;\">\n    </div>\n\n    <ng-template #loaded>\n        <div *ngFor=\"let user of users\">\n            <div class=\"card playerCard\">\n                <a class=\"tourneyLink\" routerLink=\"/user/{{user.discordId}}\">\n                    <div class=\"card-body rank\">\n                        <p class=\"card-text\">#{{user.tourneyRank}}</p>\n                    </div>\n                    <div>\n                        <img src=\"{{user.avatar}}\" class=\"card-img\" alt=\"...\">\n                    </div>\n                    <div class=\"card-body\">\n                        <p class=\"card-text\">{{user.name}}</p>\n                    </div>\n                    <div class=\"cardLeft card-body\">\n                        <p class=\"card-text\">+{{user.TR}} TR</p>\n                    </div>\n                    <!-- <div class=\"col-lg-1 playerRank col\">\n                        <div class=\"card-body\">\n                            <p class=\"card-text\">#{{user.tourneyRank}}</p>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-1 col playerImg\">\n                        <img src=\"https://new.scoresaber.com{{user.avatar}}\" class=\"card-img\" alt=\"...\">\n                    </div>\n                    <div class=\"col-lg-9 col playerName\">\n                        <div class=\"card-body\">\n                            <h5 class=\"card-title\">{{user.name}}</h5>\n                        </div>\n                    </div>\n                    <div class=\"col-lg-1 cardLeft col\">\n                        <div class=\"card-body\">\n                            <p class=\"card-text\">+20TR</p>\n                        </div>\n                    </div> -->\n                </a>\n            </div>\n        </div>\n        <div *ngIf=\"secondLoading\">\n            <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n            margin-left: auto;\n            margin-right: auto;\n            width: 40px;\">\n        </div>\n    </ng-template>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-rules',\n  templateUrl: './rules.component.html',\n  styleUrls: ['./rules.component.scss']\n})\nexport class RulesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <p>rules works!</p> -->\n<div class=\"container\">\n    <div class=\"card noHover\">\n        <div class=\"card-body\">\n            <h1>Standardized rules</h1>\n            <p class=\"card-text\">\n                Here you can find a set of standardized rules compiled by BeatKhana! and other major tournament hosts.\n            </p>\n            <ul class=\"accordion\">\n                <li>\n                    <input type=\"checkbox\" checked>\n                    <i></i>\n                    <h2 class=\"infoHeader\">Whitelisted mods</h2>\n                    <p class=\"card-text\">\n                        Here is a list of approved mods that will be used by most tournaments. If you have a mod that is not on this list it is likely that you will not be allowed to use it in a tournament setting. <br><br> BeatSaverDownloader <br> BeatSaverVoting\n                        <br> BeatSaviourData <br> BS_Utils <br> BSML <br> CameraPlus <br> Custom Campaigns <br> CustomJSONData <br> CustomSaber <br> Custom Notes (Notes must be approved with screenshots) <br> Custom Walls <br> FencingQualifierPlugin <br>                        FPFCToggle <br> HitScoreVisualizer <br> ImageCoverExpander <br> MusicEscape <br> NoodleExtensions <br> NoteLineRemover <br> No360HUD <br> NoteSpawnEffectRemover <br> ParticleOverdrive <br> PlaylistLoaderLite <br> PracticePlugin\n                        <br> RumbleMod <br> ScoreSaber <br> SongDataCore <br> Song-refresh-button <br> TournamentAssistant <br> YeetDebris <br> BSIPA <br> Saber Factory <br> CustomMenuPointers <br> Custom Campaigns\n                        <br> RandomSongPlayer <br> Chroma <br> JustRainbowLights <br> PerfectionDisplay <br> MappingExtensions <br> StreamCore <br> TransparentWalls <br> YUR Fit Calorie Tracker <br> HTTPStatus <br> CustomMenuText <br> CustomFailText <br>                        CustomMissText <br> CustomMenuMusic <br> SnapTurn <br> SongInfoViewer <br> NoFailCheck <br> BeatFollower <br> Enhancements <br> Music Spatializer <br> SmoothCameraUnlimited <br> FireworksDisabler <br> AdaptiveSFXRemover <br> Enhanced\n                        Search And Filters <br> SongBrowser <br> SongPlayHistory <br> Counters+ <br> ScorePercentage <br> SongChartVisualizer <br> Custom Exit <br> Level Pack Panel Mover <br> ChatCore\n                    </p>\n                </li>\n                <li>\n                    <input type=\"checkbox\" checked>\n                    <i></i>\n                    <h2 class=\"infoHeader\">Replays</h2>\n                    <p class=\"card-text\">\n                        A replay is simply when the map is replayed, this can be called for any reason. <br> Each party will get one replay call per match, however only one replay is allowed per map. <br> Both parties will be told their scores before\n                        being required to call a replay.\n                    </p>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Title, Meta } from '@angular/platform-browser';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MetaTagService {\n\n    private urlMeta: string = \"og:url\";//\n    private titleMeta: string = \"og:title\";//\n    private descriptionMeta: string = \"og:description\";\n    private imageMeta: string = \"og:image\";//\n    private typeMeta: string = \"og:type\";//\n\n    constructor(private titleService: Title, private metaService: Meta) { }\n\n    public defineTags(url: string, title: string, description: string, image: string): void {\n        var mainUrl = `https://beatkhana.com${url}`;\n        var imageUrl = `https://beatkhana.com/${image}`;\n        var tags = [\n            new MetaTag(this.urlMeta, mainUrl, true),\n            new MetaTag(this.titleMeta, title, true),\n            new MetaTag(this.descriptionMeta, description, true),\n            new MetaTag(this.imageMeta, imageUrl, true),\n            new MetaTag(this.typeMeta, 'website', true),\n        ];\n        this.setTags(tags);\n    }\n\n    private setTags(tags: MetaTag[]): void {\n        tags.forEach(siteTag => {\n            const tag = siteTag.isFacebook ? this.metaService.getTag(`property='${siteTag.name}'`) : this.metaService.getTag(`name='${siteTag.name}'`);\n            if (siteTag.isFacebook) {\n                this.metaService.updateTag({ property: siteTag.name, content: siteTag.value });\n            } else {\n                this.metaService.updateTag({ name: siteTag.name, content: siteTag.value });\n            }\n        });\n    }\n}\n\nexport class MetaTag {\n    name: string;\n    value: string;\n    isFacebook: boolean;\n\n    constructor(name: string, value: string, isFacebook: boolean) {\n        this.name = name;\n        this.value = value;\n        this.isFacebook = isFacebook;\n    }\n}\n\n","import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NotificationService {\n\n    constructor(private toastr: ToastrService) { }\n\n    config = {\n        closeButton: true,\n        timeOut: 3000,\n        positionClass: 'toast-bottom-right',\n        tapToDismiss: false\n    }\n\n    showSuccess(title, message) {\n        this.toastr.success(message, title, this.config)\n    }\n\n    showError(title, message) {\n        this.toastr.error(message, title, this.config)\n    }\n\n    showInfo(title, message) {\n        this.toastr.info(message, title, this.config)\n    }\n\n    showWarning(title, message) {\n        this.toastr.warning(message, title, this.config)\n    }\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from '../models/user.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserAuthService {\n\n    user: User;\n    request: Promise<User[]> = null;\n\n    constructor(public http: HttpClient) {\n        this.getUser();\n    }\n\n    private async getUser() {\n        this.request = this.http.get<User[]>('/api/user').toPromise();\n        let tmp = await this.request;\n        this.user = tmp ? tmp[0] : null;\n        if (this.user) {\n            if(this.user.avatar.includes('api') || this.user.avatar.includes('oculus')) {\n                this.user.avatar = \"https://new.scoresaber.com\" + this.user.avatar;\n            } else {\n                this.user.avatar = `/${this.user.avatar}` + (this.user.avatar.substring(0, 2) == 'a_' ? '.gif' : '.webp');\n                this.user.avatar = `https://cdn.discordapp.com/avatars/${this.user.discordId}${ this.user.avatar }`\n            }\n        }\n        this.request = null;\n    }\n\n    async curUser() {\n        if (this.request) {\n            await this.request;\n            return this.user;\n        } else {\n            return this.user;\n        }        \n    }\n\n    hasAdminPerms(tournament) {\n        if (!this.user) return false;\n        return (tournament.owner == this.user.discordId || this.user.roleIds.includes(\"1\"));\n    }\n}\n","<div class=\"card-body\">\n  <h1>{{tournament.name}}</h1>\n  <h3>Qualifier Sessions</h3>\n\n  <div *ngIf=\"loading else loaded\">\n    <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n            margin-left: auto;\n            margin-right: auto;\n            width: 70px;\n            border: none;\">\n  </div>\n\n  <ng-template #loaded>\n    <br>\n    <mat-accordion>\n      <mat-expansion-panel hideToggle *ngFor=\"let session of qualSessions; let i = index\">\n        <mat-expansion-panel-header>\n\n          <mat-panel-title>\n            {{displayTime(session.time)}}\n          </mat-panel-title>\n          <mat-panel-description>\n            <span>\n              {{session.allocated}}/{{session.limit}}\n            </span>\n          </mat-panel-description>\n        </mat-expansion-panel-header>\n        <p class=\"card-text\">\n\n        </p>\n        <div class=\"sesssionPlayers\">\n          <div *ngFor=\"let user of session.users\" class=\"player\">\n            <img class=\"participantImgSmall\" src=\"https://cdn.discordapp.com/avatars/{{user.userId}}{{user.avatar}}\">\n            <a routerLink=\"/user/{{user.userId}}\">{{user.name}}</a>\n          </div>\n        </div>\n      </mat-expansion-panel>\n\n    </mat-accordion>\n\n  </ng-template>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { qualifierSession } from '../_models/qualifiers';\n\n@Component({\n    selector: 'app-sessions',\n    templateUrl: './sessions.component.html',\n    styleUrls: ['./sessions.component.scss']\n})\nexport class SessionsComponent implements OnInit {\n\n    @Input() tournament: any;\n    loading = false;\n\n    qualSessions: qualifierSession[];\n\n    constructor(public http: HttpClient) { }\n\n    async ngOnInit(): Promise<void> {\n        this.loading = true;\n        try {\n            this.qualSessions = await this.http.get<qualifierSession[]>(`/api/tournament/${this.tournament.tournamentId}/qualifiers/sessions/all`).toPromise();\n        } catch (error) { }\n        this.loading = false;\n    }\n\n    displayTime(dateString: string) {\n        return new Date(dateString).toLocaleString();\n    }\n\n}\n","<div class=\"container\">\n    <div class=\"card noHover\">\n        <div class=\"card-body\">\n            <h1>Sign Up</h1>\n            <p class=\"card-text\">\n\n            </p>\n            <form [formGroup]=\"signUpForm\" novalidate (ngSubmit)=\"onSubmit()\" class=\"card-text\">\n                <!-- Value: {{ signUpForm.value | json }} -->\n\n                <mat-form-field class=\"fill\">\n                    <input matInput placeholder=\"Twitch Link\" formControlName=\"twitch\" pattern=\"^(?:https?:\\/\\/)?(?:www\\.)?twitch\\.tv\\/([a-z0-9_]+)($|\\?)\">\n                    <mat-error *ngIf=\"twitch.invalid\">\n                        Please enter a valid twitch link, Format: https://twitch.tv/[channel name]\n                    </mat-error>\n                </mat-form-field>\n                <br>\n                <mat-form-field class=\"fill\">\n                    <input matInput placeholder=\"Scoresaber Link\" formControlName=\"scoreSaber\" pattern=\"^(?:https?:\\/\\/)?(?:www\\.)?scoresaber\\.com\\/u\\/([0-9]+)($|\\?)\">\n                    <mat-error *ngIf=\"scoresaber.invalid\">\n                        Please enter a valid Score Saber link, Format: https://scoresaber.com/u/1234567890123456\n                    </mat-error>\n                </mat-form-field>\n                <br>\n                <label id=\"pronounlabel\">Preferred Pronoun:</label>\n                <mat-radio-group aria-labelledby=\"pronounlabel\" formControlName=\"pronoun\" class=\"pronounRadio\">\n                    <mat-radio-button *ngFor=\"let pronoun of pronouns\" class=\"radio-button\" value=\"{{pronoun}}\">{{pronoun}}</mat-radio-button>\n                    <mat-radio-button class=\"radio-button\" value=\"Other\">Other</mat-radio-button>\n                    <mat-form-field style=\"margin-top: 5px;\" class=\"fill\" *ngIf=\"pronouns.indexOf(signUpForm.value.pronoun) == -1\">\n                        <input matInput placeholder=\"Preferred Pronoun\" formControlName=\"pronoun\">\n                    </mat-form-field>\n                </mat-radio-group>\n\n\n\n                <div mat-dialog-actions>\n                    <button mat-raised-button color=\"warn\">Cancel</button> &nbsp;\n                    <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"signUpForm.invalid\">Sign\n                        Up</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AppComponent } from '../app.component';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { editProfileDialog } from '../profile/profile.component';\nimport { NotificationService } from '../services/toast.service';\n\n@Component({\n    selector: 'app-sign-up',\n    templateUrl: './sign-up.component.html',\n    styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit {\n\n    signUpForm: FormGroup;\n    id: number;\n    url = '/api/newUser';\n    users = [];\n\n    pronouns = ['He/Him', 'She/Her', 'They/Them'];\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        private notif: NotificationService\n    ) { }\n\n\n\n    ngOnInit(): void {\n        this.signUpForm = this.fb.group({\n            twitch: ['', [\n                Validators.required,\n                // Validators.pattern('^(?:https?:\\/\\/)?(?:www\\.|go\\.)?twitch\\.tv\\/([a-z0-9_]+)($|\\?)'),\n            ]],\n            scoreSaber: [null, [\n                // Validators.required\n            ]],\n            pronoun: ['He/Him', [\n                Validators.required\n            ]]\n        });\n    }\n\n    async onSubmit() {\n        try {\n            await this.http.post(this.url, this.signUpForm.value).toPromise();\n            this.notif.showSuccess('', 'Successfully created profile');\n            window.location.href = '/';\n        } catch (error) {\n            console.error(\"Error: \", error);\n            this.notif.showError('', 'Error creating profile');\n\n            if (error.error?.message?.includes('ER_DUP_ENTRY')) this.notif.showError('', 'Discord or Scoresaber account already in use');\n        }\n    }\n\n    submitData(): Observable<any> {\n        return this.http.post(this.url, this.signUpForm.value);\n    }\n\n    get twitch() {\n        return this.signUpForm.get('twitch');\n    }\n\n    get scoresaber() {\n        return this.signUpForm.get('scoreSaber');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n    selector: 'app-ta',\n    templateUrl: './ta.component.html',\n    styleUrls: ['./ta.component.scss']\n})\nexport class TaComponent implements OnInit {\n\n    constructor(public titleService: Title) {\n        titleService.setTitle('TA Client');\n     }\n\n    ngOnInit(): void {\n        let node = document.createElement('script');\n        node.src = '/assets/ta/bundle.js';\n        node.type = 'text/javascript';\n        document.getElementsByTagName('head')[0].appendChild(node);\n    }\n}\n","<!-- <p>ta works!</p> -->\n<link rel='stylesheet' href='/assets/ta/global.css'>\n<link rel='stylesheet' href='/assets/ta/bundle.css'>\n\n<!-- <script src='/assets/ta/bundle.js'></script> -->\n<div id=\"taClient\"></div>","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AppComponent } from '../app.component';\n\n@Component({\n    selector: 'app-team',\n    templateUrl: './team.component.html',\n    styleUrls: ['./team.component.scss']\n})\nexport class TeamComponent extends AppComponent implements OnInit {\n\n    title = \"Team | BeatKhana!\";\n    private url = '/api/team';\n    userId: string;\n    public team = null;\n    loading = true;\n\n    displayRoles = {\n        1: {label: 'Admins', id: 1, users: []},\n        2: {label: 'Staff', id: 2, users: []},\n        6: {label: 'Mini Tournament Team', id: 6, users: []},\n    }\n\n    ngOnInit(): void {\n        this.setTitle(this.title);\n        this.getTeam()\n            .subscribe(data => {\n                this.team = data;\n                for (let member of this.team) {\n                    if(member.avatar.includes('api') || member.avatar.includes('oculus')) {\n                        member.avatar = \"https://new.scoresaber.com\" + member.avatar;\n                    } else {\n                        member.avatar = `/${member.avatar}` + (member.avatar.substring(0, 2) == 'a_' ? '.gif' : '.webp');\n                        member.avatar = `https://cdn.discordapp.com/avatars/${member.discordId}${ member.avatar }`\n                    }\n                    let minRole = Math.min.apply(null, member.roleIds);\n                    this.displayRoles[minRole].users.push(member);\n                }\n            });\n    }\n\n    getTeam(): Observable<any> {\n        return this.http.get(this.url);\n    }\n\n}\n","<div class=\"container\">\n    <div class=\"card noHover\" style=\"border-radius: 0px 4px 4px 4px;\">\n        <div class=\"card-body\">\n            <ng-template *ngFor=\"let role of displayRoles | keyvalue\" [ngIf]=\"role.value.users.length > 0\">\n                <h2>{{role.value.label}}</h2>\n                <div class=\"usrRow\">\n                    <p class=\"card-text\" *ngFor=\"let user of role.value.users\">\n                        <img class=\"teamImg\" src=\"{{user.avatar}}\">\n                        <span class=\"teamName\">{{user.name}}</span><br>\n                        <span style=\"font-size:smaller;\">{{ user.roleNames.join(', ') }}</span><br>\n                        <a href=\"https://discord.com/users/{{ user.discordId }}\"><i class=\"fab fa-discord\"></i></a>\n                        <a href=\"https://www.twitch.tv/{{ user.twitchName }}\"><i class=\"fab fa-twitch\"></i></a>\n                    </p>\n                </div>\n            </ng-template>\n        </div>\n    </div>\n</div>","<div class=\"card-body\">\n    <h1>{{tournament.name}}</h1>\n    <h3>Staff</h3>\n    <div *ngIf=\"loading else loaded\">\n        <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n                margin-left: auto;\n                margin-right: auto;\n                width: 70px; \n                border: none;\n                padding: 15px; \">\n    </div>\n    <ng-template #loaded>\n        <div class=\"usrRow\">\n            <p class=\"card-text\" *ngFor=\"let user of staff\">\n                <img class=\"teamImg\" src=\"https://cdn.discordapp.com/avatars/{{user.discordId}}/{{user.avatar}}\">\n                <span class=\"teamName\">{{user.name}}</span><br>\n                <span style=\"font-size:smaller;\">{{ getRoleNames(user.roles) }}</span><br>\n                <a href=\"https://discord.com/users/{{ user.discordId }}\"><i class=\"fab fa-discord\"></i></a>\n                <a href=\"https://www.twitch.tv/{{ user.twitchName }}\"><i class=\"fab fa-twitch\"></i></a>\n            </p>\n        </div>\n        <ng-container *ngIf=\"this.userS.hasAdminPerms(tournament)\">\n            <hr>\n            <button mat-stroked-button color=\"primary\" (click)=\"openEdit()\">Edit Staff</button> &nbsp;\n        </ng-container>\n    </ng-template>\n</div>","import { Input } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { AppComponent } from '../app.component';\nimport { EditStaffComponent } from '../_modals/edit-staff/edit-staff.component';\nimport { staff } from '../_models/tournamentApi.model';\n\n@Component({\n    selector: 'app-tournament-staff',\n    templateUrl: './tournament-staff.component.html',\n    styleUrls: ['./tournament-staff.component.scss']\n})\nexport class TournamentStaffComponent extends AppComponent implements OnInit {\n\n    @Input() tournament;\n    loading = true;\n    staff: staff[] = [];\n\n    async ngOnInit(): Promise<void> {\n        this.staff = await this.http.get<staff[]>(`/api/tournament/${this.tournament.tournamentId}/staff`).toPromise();\n        this.loading = false;\n    }\n\n    getRoleNames(roles: {id: number, role: string}[]) {\n        return roles.map(x => x.role).join(', ');\n    }\n\n    openEdit() {\n        const dialog = this.dialog.open(EditStaffComponent, {\n            // height: '400px',\n            minWidth: '40vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: {\n                tournament: this.tournament,\n                staff: this.staff\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(async data => {\n                if (data) { \n                    this.staff = await this.http.get<staff[]>(`/api/tournament/${this.tournament.tournamentId}/staff`).toPromise();\n                }\n            });\n    }\n\n}\n","<div *ngIf=\"loading else loaded\">\n  <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 100px;\">\n</div>\n\n<ng-template #loaded>\n  <div class=\"container\">\n    <div class=\"tab-bar\">\n      <div [routerLink]=\"['/tournament', tourneyId]\" [routerLinkActiveOptions]=\"{exact:true}\"\n        routerLinkActive=\"isActive\">\n        <h3>Info</h3>\n      </div>\n      <div *ngIf=\"tournament.show_signups == 1\" [routerLink]=\"['participants']\" routerLinkActive=\"isActive\">\n        <h3>Participants</h3>\n      </div>\n      <div *ngIf=\"user && (tournament.owner == user.discordId || user['roleIds'].includes('1'))\"\n        [routerLink]=\"['allParticipants']\" routerLinkActive=\"isActive\">\n        <h3>Signed Up</h3>\n      </div>\n      <div *ngIf=\"tournament.has_map_pool == 1\" [routerLink]=\"['map-pool']\" routerLinkActive=\"isActive\">\n        <h3>Map Pool</h3>\n      </div>\n      <div\n        *ngIf=\"user && (tournament.owner == user.discordId || user['roleIds'].includes('1')) && tournament.quals_method == 'live_quals'\"\n        [routerLink]=\"['sessions']\" routerLinkActive=\"isActive\">\n        <h3>Sessions</h3>\n      </div>\n      <div *ngIf=\"tournament.show_quals == 1\" [routerLink]=\"['qualifiers']\" routerLinkActive=\"isActive\">\n        <h3>Qualifiers</h3>\n      </div>\n      <div *ngIf=\"tournament.has_bracket == 1\" [routerLink]=\"['bracket']\" routerLinkActive=\"isActive\">\n        <h3>Bracket</h3>\n      </div>\n      <div [routerLink]=\"['staff']\" routerLinkActive=\"isActive\">\n        <h3>Staff</h3>\n      </div>\n    </div>\n    <div class=\"card noHover\" style=\"border-radius: 0px 4px 4px 4px;\">\n      <div class=\"card-body\" #info *ngIf=\"isInfo\">\n        <img class=\"tourneyImg\" src=\"/assets/images/{{tournament.image}}\" alt=\"\" />\n        <h1>{{ tournament.name }}</h1>\n\n        <p class=\"card-text\" style=\"color: #c8825a\" *ngIf=\"tournament.archived == 1\">\n          <b>Archived <br /></b>\n        </p>\n\n        <div class=\"card-text infoText\" *ngIf=\"tournament.safeInfo != null\" [innerHTML]=\"tournament.safeInfo\">\n        </div>\n\n        <p class=\"card-text\">\n          *All times are in your local timezone <br> Date: {{ tournament.startDate | date: 'd/MM/yy, h:mm a'}}\n          -> {{ tournament.endDate | date: 'd/MM/yy, h:mm a'}}<br />\n          <span *ngIf=\"tournament.info != null; else noPrize\">\n            Prize pool: <span [innerHTML]=\"tournament.prize | linkify: linkOptions\"></span> <br />\n          </span>\n          <ng-template #noPrize>Prize Pool: Not announced yet <br></ng-template>\n          <a *ngIf=\"tournament.discord != null\" href=\"{{ tournament.discord }}\" target=\"new\">Discord</a>\n          <br />\n          <a *ngIf=\"tournament.twitchLink != null\" href=\"{{ tournament.twitchLink }}\" target=\"new\">Twitch</a>\n          <br />\n        </p>\n        <p class=\"card-text\" *ngIf=\"tournament.first != null && tournament.archived == 1\">\n          <b>Tournament Results:</b> <br> #1 {{tournament.first}} <br> #2 {{tournament.second}} <br> #3\n          {{tournament.third}} <br>\n        </p>\n        <p *ngIf=\"tournament.public_signups == 1 && user != null && !isParticipant && canSignup\" class=\"card-text\">\n          <button mat-stroked-button color=\"accent\" (click)=\"signUp()\">Sign Up!</button>\n        </p>\n        <p *ngIf=\"tournament.public_signups == 1 && user != null && isParticipant && canSignup\" class=\"card-text\">\n          You have successfully signed up for this tournament!\n        </p>\n        <p *ngIf=\"tournament.public_signups == 1 && user == null\" class=\"card-text\">\n          Please login to signup for this tournament.\n        </p>\n        <ng-container *ngIf=\"isAuth\">\n          <p class=\"card-text\">\n            <button mat-stroked-button color=\"primary\" (click)=\"openEdit()\">Edit Tournament</button> &nbsp;\n            <button mat-stroked-button color=\"primary\" (click)=\"tourneySettings()\">Tournament\n              Settings</button> &nbsp;\n            <button mat-stroked-button color=\"primary\" (click)=\"addPlayer()\">Add Player</button> &nbsp;\n            <button *ngIf=\"user && user['roleIds'].includes('1')\" mat-stroked-button color=\"warn\"\n              (click)=\"delete()\">Delete Tournament</button>\n          </p>\n        </ng-container>\n\n        <!-- <p *ngIf=\"user && tournament.owner == user.discordId && !user['roleIds'].includes('1')\" class=\"card-text\">\n                    \n                    \n                </p>\n                <p >\n                    <button mat-stroked-button color=\"primary\" (click)=\"openEdit()\">Edit Tournament</button> &nbsp;\n                    <button mat-stroked-button color=\"primary\" (click)=\"tourneySettings()\">Tournament Settings</button> &nbsp;\n                    <button mat-stroked-button color=\"primary\" (click)=\"addPlayer()\">Add Player</button> &nbsp;\n                    \n                </p> -->\n      </div>\n      <!-- <router-outlet></router-outlet> -->\n      <app-participants [tournament]=\"tournament\" [participants]=\"participants\"\n        *ngIf=\"isParticipants && tournament.public_signups == 1\"></app-participants>\n      <app-participants [tournament]=\"tournament\" [participants]=\"participants\" [all]=\"true\"\n        *ngIf=\"isSignedUp && user && (tournament.owner == user.discordId || user['roleIds'].includes('1'))\">\n      </app-participants>\n      <app-map-pool [tournament]=\"tournament\" [staff]=\"staff\" *ngIf=\"isMapPool && tournament.has_map_pool == 1\">\n      </app-map-pool>\n      <app-bracket [tournament]=\"tournament\" *ngIf=\"isBracket && tournament.has_bracket == 1\"></app-bracket>\n      <app-qualifiers [tournament]=\"tournament\" *ngIf=\"isQuals\"></app-qualifiers>\n      <app-sessions [tournament]=\"tournament\" *ngIf=\"sessions\"></app-sessions>\n      <app-tournament-staff [tournament]=\"tournament\" *ngIf=\"staffPage\"></app-tournament-staff>\n    </div>\n  </div>\n</ng-template>\n","<h1 mat-dialog-title>Edit Tournament</h1>\n<form [formGroup]=\"tournamentForm\" novalidate (ngSubmit)=\"onSubmit()\">\n    <!-- Value: {{ tournamentForm.value | json }} -->\n\n\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Tournament Name\" formControlName=\"name\">\n    </mat-form-field>\n    <br>\n    <!-- <mat-form-field>\n        <mat-label>Start Date (local)</mat-label>\n        <input matInput [matDatepicker]=\"dp3\" readonly formControlName=\"date\" (focus)=\"dp3.open()\" (click)=\"dp3.open()\">\n        <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\n        <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\n    </mat-form-field>\n    <br>\n    <mat-form-field>\n        <mat-label>End Date (local)</mat-label>\n        <input matInput [matDatepicker]=\"dp1\" readonly formControlName=\"endDate\" (focus)=\"dp1.open()\" (click)=\"dp1.open()\">\n        <mat-datepicker-toggle matSuffix [for]=\"dp1\"></mat-datepicker-toggle>\n        <mat-datepicker #dp1 disabled=\"false\"></mat-datepicker>\n    </mat-form-field> -->\n    <mat-form-field>\n        <mat-label>Start Date (local)</mat-label>\n        <!-- <input matInput [matDatepicker]=\"dp3\" readonly formControlName=\"date\" (focus)=\"dp3.open()\" (click)=\"dp3.open()\">\n        <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\n        <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker> -->\n\n        <input matInput [ngxMatDatetimePicker]=\"picker\" readonly formControlName=\"date\" (focus)=\"picker.open()\" (click)=\"picker.open()\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <ngx-mat-datetime-picker #picker [showSeconds]=\"false\" [defaultTime]=\"[12,0,0]\">\n        </ngx-mat-datetime-picker>\n    </mat-form-field>\n    <br>\n    <mat-form-field>\n        <mat-label>End Date (local)</mat-label>\n        <!-- <input matInput [matDatepicker]=\"dp1\" readonly formControlName=\"endDate\" (focus)=\"dp1.open()\" (click)=\"dp1.open()\">\n        <mat-datepicker-toggle matSuffix [for]=\"dp1\"></mat-datepicker-toggle>\n        <mat-datepicker #dp1 disabled=\"false\"></mat-datepicker> -->\n        <input matInput [ngxMatDatetimePicker]=\"picker2\" readonly formControlName=\"endDate\" (focus)=\"picker2.open()\" (click)=\"picker2.open()\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n        <ngx-mat-datetime-picker #picker2 [showSeconds]=\"false\" [defaultTime]=\"[12,0,0]\">\n        </ngx-mat-datetime-picker>\n    </mat-form-field>\n\n    <br>\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Discord Link\" formControlName=\"discord\" pattern=\"^(?:https?:\\/\\/)?(?:www\\.)?discord\\.gg\\/([a-zA-Z0-9]+)($|\\?)\">\n        <mat-error *ngIf=\"discord.invalid && discord.touched\">\n            Please enter a valid link, Format: https://discord.gg/[code]\n        </mat-error>\n    </mat-form-field>\n\n    <br>\n    <mat-form-field *ngIf=\"users.length > 0\">\n        <mat-label>Owner</mat-label>\n        <input type=\"text\" matInput formControlName=\"owner\" [matAutocomplete]=\"auto\">\n        <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn.bind(this)\">\n            <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.discordId\">\n                {{option.name}}\n            </mat-option>\n        </mat-autocomplete>\n    </mat-form-field>\n\n\n    <br>\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Twitch Link\" formControlName=\"twitchLink\" pattern=\"^(?:https?:\\/\\/)?(?:www\\.)?twitch\\.tv\\/([a-z0-9_]+)($|\\?)\">\n        <mat-error *ngIf=\"twitch.invalid && (twitch.dirty || twitch.touched)\">\n            Please enter a valid twitch link, Format: https://twitch.tv/[channel name]\n        </mat-error>\n    </mat-form-field>\n\n    <br>\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Prize Pool\" formControlName=\"prize\">\n    </mat-form-field>\n\n    <br>\n\n    <label class=\"card-text\">Tournament Info:</label> <br><br>\n    <ckeditor formControlName=\"info\" [config]=\"{ extraPlugins: ['colorbutton', 'iframe']}\"></ckeditor>\n\n    <br>\n    <input type=\"file\" (change)=\"onFileChanged($event)\" #fileInput accept=\"image/png, image/jpeg, image/gif, image/webp, image/svg+xml, image/tiff\">\n    <br>\n    <mat-checkbox formControlName=\"is_mini\">\n        Is mini tournament?\n    </mat-checkbox>\n    <br>\n\n    <div mat-dialog-actions>\n        <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"tournamentForm.invalid || isSubmitted\">Update Tournament</button>\n    </div>\n</form>","<h1>Tournament Settings</h1>\n<form [formGroup]=\"settingsForm\" novalidate (ngSubmit)=\"onSubmit()\">\n  <!-- Value: {{ settingsForm.value | json }} -->\n\n  <!-- <br>\n    <br>\n\n\n    <ng-container >\n\n    </ng-container>\n    <br><br> -->\n\n\n  <mat-tab-group dynamicHeight>\n    <mat-tab label=\"General\">\n      <br>\n      <mat-checkbox formControlName=\"public_signups\">\n        Public Signups?\n      </mat-checkbox>\n      <br>\n      <mat-checkbox formControlName=\"public\">\n        Is public?\n      </mat-checkbox>\n      <br>\n      <mat-checkbox formControlName=\"has_quals\">\n        Has qualifiers?\n      </mat-checkbox>\n      <br>\n      <mat-checkbox formControlName=\"has_bracket\">\n        Has Bracket?\n      </mat-checkbox>\n      <br>\n      <mat-checkbox formControlName=\"has_map_pool\">\n        Has Map Pool?\n      </mat-checkbox>\n    </mat-tab>\n\n    <mat-tab label=\"Tournament Staging\">\n      <br>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>State</mat-label>\n        <mat-select formControlName=\"state\">\n          <mat-option value=\"awaiting_start\">Awaiting Start</mat-option>\n          <mat-option value=\"qualifiers\" *ngIf=\"quals.value == true\">Qualifiers</mat-option>\n          <mat-option value=\"main_stage\">Main Stage</mat-option>\n          <mat-option value=\"archived\">Archived</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <br>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Type</mat-label>\n        <mat-select formControlName=\"type\">\n          <mat-option value=\"single_elim\">Single Elimination</mat-option>\n          <mat-option value=\"double_elim\">Double Elimination</mat-option>\n          <mat-option value=\"round_robin\">Round Robin</mat-option>\n          <mat-option value=\"battle_royale\">Battle Royale</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <br>\n      <ng-container *ngIf=\"type.value == 'battle_royale'\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Player sort order</mat-label>\n          <mat-select formControlName=\"sort_method\">\n            <mat-option value=\"globalRank\">Global Rank</mat-option>\n            <mat-option value=\"date\">Sign Up Order</mat-option>\n            <mat-option value=\"random\">Random</mat-option>\n          </mat-select>\n        </mat-form-field>\n        <br>\n        <mat-form-field class=\"fill\">\n          <input matInput placeholder=\"Number of players in tournament\" formControlName=\"standard_cutoff\">\n        </mat-form-field>\n      </ng-container>\n\n    </mat-tab>\n\n    <mat-tab label=\"Signup\">\n      <br>\n      <mat-checkbox formControlName=\"show_signups\">\n        Publicly show signups?\n      </mat-checkbox>\n      <br>\n      <mat-checkbox formControlName=\"comment_required\">\n        Comment Required?\n      </mat-checkbox>\n      <br><br>\n      <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Sign up Comment Label\" formControlName=\"signup_comment\">\n      </mat-form-field>\n      <br>\n      <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Whitelisted countries (country code seperated by commas e.g. au, gb, us)\"\n          formControlName=\"countries\">\n      </mat-form-field>\n    </mat-tab>\n\n    <mat-tab label=\"Qualifiers\" *ngIf=\"quals.value == true\">\n      <br>\n      <h2>Qualifiers Method</h2>\n\n      <mat-radio-group aria-label=\"Qualifiers Method\" class=\"radio\" formControlName=\"quals_method\">\n        <mat-radio-button class=\"radio-button\" value=\"ta_quals\">TA Qualifiers</mat-radio-button>\n        <mat-radio-button class=\"radio-button\" value=\"live_quals\">Live Qualifiers</mat-radio-button>\n      </mat-radio-group>\n      <ng-container *ngIf=\"taConnected && qualsMethod == 'ta_quals'\">\n        <p>\n          Qualifiers will be run through the Qualifiers tab in Tournament Assistant. The name of the even will be\n          \"{{data.tournament.name}} Qualifiers\". <br> The event will only be available in TA while the tournament\n          stage is set to Qualifiers.\n          <br>\n          <ng-container *ngIf=\"!qualsPool\">Before setting up qualifiers ensure that you have created a map pool\n            marked as the qualifiers pool. (*Note: only one pool can be marked as the qualifiers pool)\n          </ng-container>\n        </p>\n        <ng-container *ngIf=\"qualsPool\">\n          <br>\n          <mat-form-field class=\"fill\">\n            <input matInput placeholder=\"Cut Off point for qualifiers\" formControlName=\"quals_cutoff\">\n          </mat-form-field>\n          <br>\n          <mat-checkbox formControlName=\"show_quals\">\n            Show Qualifiers\n          </mat-checkbox>\n          <br>\n          <mat-checkbox [checked]=\"showQualsLimit\" (change)=\"showQualsLimit = !showQualsLimit\">\n            Limit Attempts\n          </mat-checkbox>\n          <br>\n          <ng-container *ngIf=\"showQualsLimit\">\n            *Note: 0 attempts means there is no limit.\n            <mat-form-field>\n              <input matInput placeholder=\"Number of attempts allowed\" formControlName=\"qual_attempts\">\n            </mat-form-field>\n          </ng-container>\n          <div style=\"margin-top:15px\">\n            <h3>TA Settings</h3>\n            <br>\n            <p>\n              Base Settings:\n            </p>\n            <div class=\"checkboxes\">\n              <mat-checkbox *ngFor=\"let setting of baseTaSettings\" [checked]=\"setting.isSelected\"\n                (change)=\"setting.isSelected = !setting.isSelected\">\n                {{setting.name}}\n              </mat-checkbox>\n            </div>\n            <br>\n\n            <p>\n              Maps\n            </p>\n            <section>\n              <details *ngFor=\"let song of qualsPool.songs\">\n                <summary>\n                  <img class=\"songImg\" src=\"https://scoresaber.com/imports/images/songs/{{song.hash}}.png\">\n                  <div>\n                    <a href=\"{{song.ssLink}}\" target=\"_blank\">\n                      {{song.name}} - {{song.songAuthor}}\n                    </a>\n                    <span class=\"mapperName\">[{{song.levelAuthor}}]</span>\n                  </div>\n                </summary>\n                <div *ngIf=\"song.characteristics\">\n                  <mat-form-field>\n                    <mat-label>Characteristic</mat-label>\n                    <mat-select [(value)]=\"song.selectedCharacteristic\">\n                      <mat-option *ngFor=\"let characteristic of song.characteristics\"\n                        value=\"{{characteristic.SerializedName}}\">{{characteristic.SerializedName}}\n                      </mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                  <mat-form-field *ngIf=\"song.selectedCharacteristic\">\n                    <mat-label>Difficulty</mat-label>\n                    <mat-select [(value)]=\"song.difficulty\">\n                      <mat-option *ngFor=\"let diff of getSongDiffs(song)\" value=\"{{diff}}\">\n                        {{diffString(diff)}}</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                  <br>\n                  <div style=\"display: flex; flex-direction: row;\">\n                    <div class=\"checkboxes\">\n                      <mat-checkbox *ngFor=\"let setting of song.mapOptions\" [checked]=\"setting.isSelected\"\n                        (change)=\"setting.isSelected = !setting.isSelected\">\n                        {{setting.name}}\n                      </mat-checkbox>\n                    </div>\n                    <div class=\"checkboxes\">\n                      <mat-checkbox *ngFor=\"let setting of song.pOptions\" [checked]=\"setting.isSelected\"\n                        (change)=\"setting.isSelected = !setting.isSelected\">\n                        {{setting.name}}\n                      </mat-checkbox>\n                    </div>\n                  </div>\n                </div>\n              </details>\n            </section>\n          </div>\n        </ng-container>\n      </ng-container>\n      <ng-container *ngIf=\"!taConnected && qualsMethod == 'ta_quals'\">\n        <p>\n          This requires a TA connetion, please set it up under the \"Tournament Assistant\" tab.\n        </p>\n      </ng-container>\n      <ng-container *ngIf=\"qualsMethod == 'live_quals'\">\n        <p>\n          Upon signup players will have to select one of sessions. If this tournament is connected to a TA server then\n          it will automatically grab those players scores when a qualifier map is played through the \"Tournament\"\n          section of TA (Not \"Qualifiers\"). For this to work player must ensure that they have the correct Score Saber\n          account linked and the scores must be completed within two hours of the session start time, outside these\n          times scores will not be recorded.\n        </p>\n        <p>\n          Current Sessions:\n        </p>\n        <p *ngIf=\"qualSessions.length == 0\">\n          There currently aren't any sessions.\n        </p>\n        <div class=\"sessions\">\n          <div class=\"session\" *ngFor=\"let session of qualSessions\">\n            <span>\n              {{displayTime(session.time)}}\n            </span>\n            <span>\n              {{session.allocated}}/{{session.limit}}\n            </span>\n            <span>\n              <button mat-button color=\"warn\" type=\"button\" (click)=\"removeSession(session)\">Remove</button>\n            </span>\n          </div>\n        </div>\n        <!-- <ul>\n          <li *ngFor=\"let session of qualSessions\">\n            {{session.time}} - {{session.cap}}\n          </li>\n        </ul> -->\n        <br>\n        <p>Create Session</p>\n        <mat-form-field style=\"width: 60%;\">\n          <mat-label>Start Date (local)</mat-label>\n\n          <input matInput [ngxMatDatetimePicker]=\"picker\" readonly [formControl]=\"newQualsTime\" (focus)=\"picker.open()\"\n            (click)=\"picker.open()\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n          <ngx-mat-datetime-picker #picker [showSeconds]=\"false\" [defaultTime]=\"[12,0,0]\">\n          </ngx-mat-datetime-picker>\n        </mat-form-field>\n        &nbsp;\n        <mat-form-field style=\"width: 20%;\">\n          <input matInput placeholder=\"Player Limit\" [value]=\"newQualsCap\" (change)=\"newQualsCap=$event.target.value\">\n        </mat-form-field>\n        &nbsp;\n        <button mat-stroked-button color=\"primary\" type=\"button\" (click)=\"createSession()\"\n          [disabled]=\"!newQualsTime.value\">Add session</button>\n      </ng-container>\n    </mat-tab>\n\n    <mat-tab label=\"Bracket\" *ngIf=\"bracket.value == true\">\n      <br>\n      <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Number of players in bracket\" formControlName=\"bracket_limit\">\n        <mat-error *ngIf=\"limit.invalid && limit.touched\">\n          Must be a multiple of 8\n        </mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Player sort order</mat-label>\n        <mat-select formControlName=\"bracket_sort_method\">\n          <mat-option value=\"globalRank\">Global Rank</mat-option>\n          <mat-option value=\"tournamentRank\">Tournament Rank</mat-option>\n          <mat-option value=\"seed\" *ngIf=\"quals.value == true\">Qualifiers Seed</mat-option>\n          <mat-option value=\"random\">Random</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </mat-tab>\n\n    <mat-tab label=\"Tournament Assistant\">\n      <br>\n      <p>\n        This currently only works with compatable TA servers, <br> TA server must also be configured with a\n        valid password.\n        <br>\n        <br> Current Status:\n        <span *ngIf=\"taConnected\" style=\"color: #89C057\">Connected</span>\n        <span *ngIf=\"!taConnected\" style=\"color: #B33A3A\">Not Connected</span>\n      </p>\n      <br>\n      <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Tournament Assistant URL:PORT\" formControlName=\"ta_url\">\n      </mat-form-field>\n      <br>\n      <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Tournament Assistant Password\" formControlName=\"ta_password\">\n      </mat-form-field>\n      <label>Overlay SVG</label><br>\n      <input type=\"file\" (change)=\"onFileChanged($event)\" #fileInput accept=\"image/svg+xml\">\n    </mat-tab>\n  </mat-tab-group>\n\n  <div mat-dialog-actions>\n    <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n    <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"settingsForm.invalid\">Update\n      Settings</button>\n  </div>\n</form>\n","<h1>Sign up</h1>\n<div *ngIf=\"loading\">\n  <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 100px;\">\n</div>\n<form *ngIf=\"!loading\" [formGroup]=\"signUpForm\" (ngSubmit)=\"onSubmit()\">\n  <!-- Value: {{ signUpForm.value | json }} -->\n  <br>\n  <mat-form-field>\n    <mat-label>{{signUpComment}}</mat-label>\n    <textarea matInput formControlName=\"comment\"></textarea>\n    <mat-error *ngIf=\"comment.invalid && comment.touched\">\n      This tournament requires you to provide: {{signUpComment}} in order to sign up\n    </mat-error>\n  </mat-form-field>\n\n  <div class=\"sessions\" *ngIf=\"data.tournament.quals_method == 'live_quals'\">\n    <div class=\"session\" *ngFor=\"let session of qualSessions\">\n      <span>\n        {{displayTime(session.time)}}\n      </span>\n      <span>\n        {{session.allocated}}/{{session.limit}}\n      </span>\n      <span>\n        <button mat-button color=\"accent\" type=\"button\" (click)=\"selectSession(session)\"\n          [disabled]=\"selectedSession === session || session.allocated >= session.limit\">{{selectedSession === session ? 'Selected' : 'Select'}}</button>\n      </span>\n    </div>\n  </div>\n\n  <div mat-dialog-actions>\n    <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n    <button mat-raised-button color=\"primary\" type=\"submit\"\n      [disabled]=\"signUpForm.invalid || (data.tournament.quals_method == 'live_quals' && !selectedSession)\">Sign\n      Up</button>\n  </div>\n</form>\n","<h1>Add Player</h1>\n<form [formGroup]=\"addPlayerForm\" novalidate (ngSubmit)=\"onSubmit()\">\n    <!-- Value: {{ addPlayerForm.value | json }} -->\n    <br>\n    <mat-form-field *ngIf=\"users.length > 0\">\n        <mat-label>User</mat-label>\n        <input type=\"text\" matInput formControlName=\"userId\" [matAutocomplete]=\"auto\">\n        <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn.bind(this)\">\n            <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.discordId\">\n                {{option.name}}\n            </mat-option>\n        </mat-autocomplete>\n    </mat-form-field>\n    <br>\n    <mat-form-field>\n        <mat-label>{{signUpComment}}</mat-label>\n        <textarea matInput formControlName=\"comment\"></textarea>\n        <mat-error *ngIf=\"comment.invalid && comment.touched\">\n            This tournament requires you to provide: {{signUpComment}} in order to sign up\n        </mat-error>\n    </mat-form-field>\n\n    <div mat-dialog-actions>\n        <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"addPlayerForm.invalid\">Sign Up</button>\n    </div>\n</form>","import { Component, OnInit, Inject, Output, EventEmitter, ViewEncapsulation } from '@angular/core';\nimport { AppComponent } from '../app.component';\nimport { ITournament } from '../interfaces/tournament';\nimport { Observable } from 'rxjs';\nimport { FormGroup, FormBuilder, Validators, AbstractControl, FormControl, ValidationErrors } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { map, startWith, switchMap } from 'rxjs/operators';\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\nimport { NotificationService } from '../services/toast.service';\nimport { signedUp, staff } from '../_models/tournamentApi.model';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\nimport { EventSettings } from '../_models/ta/qualifierEvent';\nimport { GameOptions } from '../_models/ta/gameplayModifiers';\nimport { PlayerOptions } from '../_models/ta/playerSpecificSettnigs';\nimport { Characteristic } from '../_models/ta/characteristic';\nimport { BeatmapDifficulty } from '../_models/ta/match';\nimport { qualifierSession } from '../_models/qualifiers';\nimport { Beatsaver } from '../models/beatsaver.model';\n\n@Component({\n    selector: 'app-tournament',\n    templateUrl: './tournament.component.html',\n    styleUrls: ['./tournament.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class TournamentComponent extends AppComponent implements OnInit {\n\n    title = \"BeatKhana!\";\n    private url = '/api/tournament';\n    public tournament;\n    public tourneyId: string;\n    loading = true;\n    isInfo = true;\n    isMapPool = false;\n    isBracket = false;\n    isParticipants = false;\n    canSignup = true;\n    isQuals = false;\n    isSignedUp = false;\n    staffPage = false;\n    sessions: boolean = false;\n\n    isAuth = false;\n\n    participants: any = [];\n    isParticipant = true;\n    participantData = {};\n\n    linkOptions = {\n        target: {\n            url: \"_blank\"\n        }\n    }\n\n    async ngOnInit(): Promise<void> {\n        this.route.paramMap.subscribe(params => {\n            this.tourneyId = params.get('id');\n            if (this.router.url.includes('map-pool')) {\n                this.isMapPool = true;\n                this.isBracket = false;\n                this.isInfo = false;\n                this.isParticipants = false;\n                this.isQuals = false;\n                this.isSignedUp = false;\n                this.staffPage = false;\n                this.sessions = false;\n            } else if (this.router.url.includes('allParticipants')) {\n                this.isSignedUp = true;\n                this.isQuals = false;\n                this.isParticipants = false;\n                this.isBracket = false;\n                this.isMapPool = false;\n                this.staffPage = false;\n                this.isInfo = false;\n                this.sessions = false;\n            } else if (this.router.url.includes('bracket')) {\n                this.isBracket = true;\n                this.isMapPool = false;\n                this.isInfo = false;\n                this.isParticipants = false;\n                this.isQuals = false;\n                this.isSignedUp = false;\n                this.staffPage = false;\n                this.sessions = false;\n            } else if (this.router.url.includes('participants')) {\n                this.isParticipants = true;\n                this.isBracket = false;\n                this.isMapPool = false;\n                this.isInfo = false;\n                this.isQuals = false;\n                this.isSignedUp = false;\n                this.staffPage = false;\n                this.sessions = false;\n            } else if (this.router.url.includes('qualifiers')) {\n                this.isQuals = true;\n                this.isParticipants = false;\n                this.isBracket = false;\n                this.isMapPool = false;\n                this.isInfo = false;\n                this.isSignedUp = false;\n                this.staffPage = false;\n                this.sessions = false;\n            } else if (this.router.url.includes('staff')) {\n                this.isMapPool = false;\n                this.isBracket = false;\n                this.isInfo = false;\n                this.isParticipants = false;\n                this.isQuals = false;\n                this.isSignedUp = false;\n                this.staffPage = true;\n                this.sessions = false;\n            } else if (this.router.url.includes('sessions')) {\n                this.isMapPool = false;\n                this.isBracket = false;\n                this.isInfo = false;\n                this.isParticipants = false;\n                this.isQuals = false;\n                this.isSignedUp = false;\n                this.staffPage = false;\n                this.sessions = true;\n            } else {\n                this.isMapPool = false;\n                this.isBracket = false;\n                this.isInfo = true;\n                this.isParticipants = false;\n                this.isQuals = false;\n                this.isSignedUp = false;\n                this.staffPage = false;\n                this.sessions = false;\n            }\n        });\n        this.main();\n\n        this.router.events.subscribe((val) => {\n            if (this.router.url.includes('map-pool')) {\n                this.isMapPool = true;\n                this.isBracket = false;\n                this.isInfo = false;\n                this.isParticipants = false;\n                this.isQuals = false;\n                this.isSignedUp = false;\n                this.staffPage = false;\n                this.sessions = false;\n            } else if (this.router.url.includes('allParticipants')) {\n                this.isSignedUp = true;\n                this.isQuals = false;\n                this.isParticipants = false;\n                this.isBracket = false;\n                this.isMapPool = false;\n                this.staffPage = false;\n                this.isInfo = false;\n                this.sessions = false;\n            } else if (this.router.url.includes('bracket')) {\n                this.isBracket = true;\n                this.isMapPool = false;\n                this.isInfo = false;\n                this.isParticipants = false;\n                this.isQuals = false;\n                this.isSignedUp = false;\n                this.staffPage = false;\n                this.sessions = false;\n            } else if (this.router.url.includes('participants')) {\n                this.isParticipants = true;\n                this.isBracket = false;\n                this.isMapPool = false;\n                this.isInfo = false;\n                this.isQuals = false;\n                this.isSignedUp = false;\n                this.staffPage = false;\n                this.sessions = false;\n            } else if (this.router.url.includes('qualifiers')) {\n                this.isQuals = true;\n                this.isParticipants = false;\n                this.isBracket = false;\n                this.isMapPool = false;\n                this.isInfo = false;\n                this.isSignedUp = false;\n                this.staffPage = false;\n                this.sessions = false;\n            } else if (this.router.url.includes('staff')) {\n                this.isMapPool = false;\n                this.isBracket = false;\n                this.isInfo = false;\n                this.isParticipants = false;\n                this.isQuals = false;\n                this.isSignedUp = false;\n                this.staffPage = true;\n                this.sessions = false;\n            } else if (this.router.url.includes('sessions')) {\n                this.isMapPool = false;\n                this.isBracket = false;\n                this.isInfo = false;\n                this.isParticipants = false;\n                this.isQuals = false;\n                this.isSignedUp = false;\n                this.staffPage = false;\n                this.sessions = true;\n            } else {\n                this.isMapPool = false;\n                this.isBracket = false;\n                this.isInfo = true;\n                this.isParticipants = false;\n                this.isQuals = false;\n                this.isSignedUp = false;\n                this.staffPage = false;\n                this.sessions = false;\n            }\n        });\n    }\n\n    countries: any = null;\n    staff: staff[];\n\n    async main() {\n        this.staff = await this.http.get<staff[]>(`/api/tournament/${this.tourneyId}/staff`).toPromise();\n        const data = await this.http.get<ITournament[]>(this.url + '/' + this.tourneyId).toPromise();\n        this.tournament = data[0];\n\n        // user auth\n        if (this.user) {\n            this.isAuth = this.tournament.owner == this.user.discordId || this.user['roleIds'].includes('1') || !!this.staff.find(x => x.discordId == this.user.discordId && x.roles.map(x => x.id).includes(1));\n        }\n\n        const usr: any = await this.userS.curUser();\n        this.user = usr != null ? usr : null;\n\n        if (this.tournament.countries != '') {\n            this.countries = this.tournament.countries.toLowerCase().replace(' ', '').split(',');\n            if (this.user != null && !this.countries.includes(this.user.country.toLowerCase())) {\n                this.canSignup = false;\n            }\n        }\n\n        if (this.tournament.public_signups == 1) {\n            const participantData = await this.http.get(`/api/tournament/${this.tournament.tournamentId}/participants`).toPromise();\n            this.participants = participantData;\n            if (this.user != null) {\n                let signedUp = await this.http.get<signedUp>(`/api/tournament/${this.tournament.tournamentId}/signedUp`).toPromise();\n                this.isParticipant = signedUp.signedUp;\n            }\n        }\n        if (this.tournament.state == 'archived' || this.tournament.state == 'main_stage') {\n            this.canSignup = false;\n        }\n        this.tournament.safeInfo = this.sanitizer.bypassSecurityTrustHtml(this.tournament.info);\n        this.setTitle(this.tournament.name + ' | ' + this.title);\n        // console.log(this.tournament);\n        this.loading = false;\n    }\n\n    getParticipants(): Observable<any> {\n        return this.http.get(`/api/tournament/${this.tournament.tournamentId}/participants`);\n    }\n\n    public getTournaments(): Observable<ITournament[]> {\n        return this.http.get<ITournament[]>(this.url + '/' + this.tourneyId);\n    }\n\n    openEdit(): void {\n        const dialog = this.dialog.open(editTournament, {\n            minWidth: '60vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: { tournament: this.tournament }\n        });\n\n        dialog.afterClosed()\n            .subscribe(data => {\n                if (data) {\n                    this.tournament = { ...this.tournament, ...data };\n                    this.tournament.safeInfo = this.sanitizer.bypassSecurityTrustHtml(this.tournament.info);\n                }\n            });\n    }\n\n    tourneySettings(): void {\n        const dialog = this.dialog.open(tournamentSettingsDialog, {\n            // height: '400px',\n            minWidth: '40vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: { tournament: this.tournament }\n        });\n\n        dialog.afterClosed()\n            .subscribe(data => {\n                if (data) {\n                    // console.log(\"Dialog output:\", data);\n                    this.tournament = { ...this.tournament, ...data };\n                    this.tournament.safeInfo = this.sanitizer.bypassSecurityTrustHtml(this.tournament.info);\n                    this.main();\n                }\n            });\n    }\n\n    addPlayer(): void {\n        const dialog = this.dialog.open(addPlayerDialog, {\n            // height: '400px',\n            minWidth: '40vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: {\n                tournament: this.tournament,\n                participants: this.participants\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(data => {\n                if (data) { }\n            });\n    }\n\n    delete(): void {\n        const dialog = this.dialog.open(ConfirmDialogComponent, {\n            // height: '400px',\n            width: '400px',\n            data: {\n                cancelText: 'Cancel',\n                confirmText: 'Delete',\n                message: 'Are you sure you want to delete, this cannot be undone',\n                title: 'Delete Tournament?'\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(async data => {\n                if (data) {\n                    try {\n                        await this.http.delete('/api/tournament/' + this.tourneyId).toPromise();\n                        this.notif.showSuccess('', 'Successfully deleted tournament');\n                        this.router.navigate(['/']);\n                    } catch (error) {\n                        console.error(\"Error: \", data);\n                        this.notif.showError('', 'Error deleting tournament');\n                    }\n                }\n            });\n    }\n\n    signUp(): void {\n        const dialog = this.dialog.open(signUpDialog, {\n            // height: '400px',\n            minWidth: '40vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: { tournament: this.tournament }\n        });\n\n        dialog.afterClosed()\n            .subscribe(data => {\n                if (data) {\n                    this.isParticipant = true;\n                }\n            });\n    }\n\n    private deleteTourney(id): Observable<any> {\n        return this.http.delete('/api/tournament/' + id, {});\n    }\n}\n\n@Component({\n    selector: 'editTournament',\n    templateUrl: './editTournament.html'\n})\nexport class editTournament implements OnInit {\n    tournamentForm: FormGroup;\n    id: number;\n    url = '/api/tournament/';\n    users = [];\n\n    filteredOptions: Observable<any>;\n\n    isSubmitted = false;\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        private router: Router,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private dialogRef: MatDialogRef<editTournament>,\n        private notif: NotificationService\n    ) {\n\n    }\n\n    ngOnInit() {\n        this.id = this.data.tournament.tournamentId;\n        // console.log(this.data);\n        this.url += this.id;\n        // console.log(this.data);\n        this.tournamentForm = this.fb.group({\n            name: this.data.tournament.name,\n            date: this.data.tournament.startDate,\n            endDate: this.data.tournament.endDate,\n            discord: this.data.tournament.discord,\n            owner: [this.data.tournament.owner, [Validators.required, this.requireMatch.bind(this)]],\n            twitchLink: this.data.tournament.twitchLink,\n            image: this.data.tournament.image,\n            imgName: '',\n            prize: this.data.tournament.prize,\n            info: this.data.tournament.info,\n            is_mini: !!this.data.tournament.is_mini\n        });\n\n        this.getUsers()\n            .subscribe(data => {\n                this.users = data;\n                this.filteredOptions = this.tournamentForm.valueChanges\n                    .pipe(\n                        startWith(''),\n                        map(value => typeof value === 'string' ? value : value.owner),\n                        map(owner => owner ? this._filter(owner) : this.users.slice())\n                    );\n            });\n    }\n\n    selectedFile: File;\n    base64: string;\n\n    onFileChanged(event) {\n        this.selectedFile = event.target.files[0];\n        this.tournamentForm.patchValue({ imgName: this.selectedFile.name });\n\n        let reader = new FileReader();\n        reader.readAsDataURL(this.selectedFile);\n        reader.onload = () => {\n            this.tournamentForm.patchValue({ image: reader.result });\n        };\n    }\n\n    private _filter(name: string) {\n        const filterValue = name.toLowerCase();\n        return this.users.filter(option => option.name.toLowerCase().indexOf(filterValue) === 0);\n    }\n\n    get discord() {\n        return this.tournamentForm.get('discord');\n    }\n\n    get twitch() {\n        return this.tournamentForm.get('twitchLink');\n    }\n\n    displayFn(id): string {\n        let user = this.users.find(x => x.discordId == id);\n        return user && user.name ? user.name : '';\n    }\n\n    public formatDate(date) {\n        var d = new Date(date)\n        //     month = '' + (d.getMonth()),\n        //     day = '' + d.getDate(),\n        //     year = d.getFullYear();\n\n        // if (month.length < 2)\n        //     month = '0' + month;\n        // if (day.length < 2)\n        //     day = '0' + day;\n\n        // // return [year, month, day].join('-');\n        // return new Date(Date.UTC(year, parseInt(month), parseInt(day)))\n        return d.toISOString().slice(0, 19).replace('T', ' ');\n    }\n\n    onSubmit() {\n        this.isSubmitted = true;\n        // this.tournamentForm.value.date = this.formatDate(this.tournamentForm.value.date.toString())\n        // this.tournamentForm.value.endDate = this.formatDate(this.tournamentForm.value.endDate.toString())\n        // this.tournamentForm.value.date = this.tournamentForm.value.date.toISOString().slice(0, 19).replace('T', ' '); \n        // this.tournamentForm.value.endDate = this.tournamentForm.value.endDate.toISOString().slice(0, 19).replace('T', ' ');\n        // console.log\n        // console.log(this.tournamentForm.value);\n        this.updateTournament(this.tournamentForm.value)\n            .subscribe(data => {\n                if (!data.flag) {\n                    this.notif.showSuccess('', 'Successfully updated tournament');\n                } else {\n                    console.error('Error', data.err)\n                    this.notif.showError('', 'Error updating tournament');\n                }\n                data.data.date = new Date(Date.parse(data.data.date + '+00:00'));\n                data.data.endDate = new Date(Date.parse(data.data.endDate + '+00:00'));\n                this.dialogRef.close(data.data);\n            }, error => {\n                this.notif.showError('', 'Error updating tournament');\n                console.error(\"Error: \", error);\n                this.dialogRef.close(this.tournamentForm.value);\n            });\n    }\n\n\n    getUsers(): Observable<any> {\n        return this.http.get('/api/users');\n    }\n\n    public updateTournament(data: any): Observable<any> {\n        return this.http.put(this.url, data);\n    }\n\n    private requireMatch(control: FormControl): ValidationErrors | null {\n        const selection: any = control.value;\n        if (!this.users.some(x => x.discordId == selection)) {\n            return { requireMatch: true };\n        }\n        return null;\n    }\n}\n\n@Component({\n    selector: 'tournamentSettingsDialog',\n    templateUrl: './tournamentSettingsDialog.html',\n})\nexport class tournamentSettingsDialog implements OnInit {\n\n    settingsForm: FormGroup;\n    id: number;\n    url = '/api/tournament/';\n    users = [];\n\n    ws: WebSocketSubject<any> = webSocket(`${location.protocol == 'http:' ? 'ws' : 'wss'}://` + location.host + '/api/ws');\n    taConnected = false;\n\n    filteredOptions: Observable<any>;\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        private router: Router,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private dialogRef: MatDialogRef<tournamentSettingsDialog>,\n        private notif: NotificationService\n    ) {\n\n    }\n\n    qualsPool = null;\n\n    baseTaSettings = [];\n\n    showQualsLimit = false;\n\n    async ngOnInit() {\n        this.id = this.data.tournament.id;\n        this.url += this.id;\n\n\n        // console.log(this.data);\n        this.settingsForm = this.fb.group({\n            public_signups: !!this.data.tournament.public_signups,\n            show_signups: !!this.data.tournament.show_signups,\n            public: !!this.data.tournament.public,\n            state: this.data.tournament.state,\n            type: this.data.tournament.type,\n            has_bracket: !!this.data.tournament.has_bracket,\n            has_map_pool: !!this.data.tournament.has_map_pool,\n            signup_comment: this.data.tournament.signup_comment,\n            comment_required: !!this.data.tournament.comment_required,\n            bracket_sort_method: this.data.tournament.bracket_sort_method,\n            bracket_limit: [this.data.tournament.bracket_limit, [\n                Validators.required,\n                Validators.pattern('^[0-9]*$')\n            ]],\n            quals_cutoff: [this.data.tournament.quals_cutoff, [\n                Validators.required,\n                Validators.pattern('^[0-9]*$')\n            ]],\n            show_quals: !!this.data.tournament.show_quals,\n            has_quals: !!this.data.tournament.has_quals,\n            countries: this.data.tournament.countries,\n            sort_method: this.data.tournament.sort_method,\n            standard_cutoff: this.data.tournament.standard_cutoff,\n            ta_url: this.data.tournament.ta_url,\n            ta_password: this.data.tournament.ta_password,\n            qual_attempts: this.data.tournament.qual_attempts,\n            ta_event_flags: this.data.tournament.ta_event_flags,\n            quals_method: this.data.tournament.quals_method\n        });\n        this.showQualsLimit = this.data.tournament.qual_attempts !== 0;\n        this.ws.subscribe(\n            msg => {\n                if (msg.TA && !this.taConnected) {\n                    this.taConnected = msg.TA.Self?.Name == \"BeatKhana!\";\n                }\n            },\n            err => console.log(err)\n        );\n        this.ws.next({ setTournament: this.data.tournament.tournamentId });\n        this.qualSessions = await this.http.get<qualifierSession[]>(`/api/tournament/${this.data.tournament.tournamentId}/qualifiers/sessions`).toPromise();\n\n        let pools = await this.http.get(`/api/tournament/${this.data.tournament.tournamentId}/map-pools`).toPromise();\n        this.qualsPool = Object.values(pools).find(x => x.is_qualifiers == 1);\n        // console.log(this.qualsPool);\n        for (const modifier in EventSettings) {\n            if (isNaN(Number(modifier))) {\n                if (modifier == \"None\") continue;\n                this.baseTaSettings.push({\n                    name: modifier.replace(/([A-Z])/g, \" $1\").trim(),\n                    value: EventSettings[modifier],\n                    isSelected: (<number><unknown>EventSettings[modifier] == (this.data.tournament.ta_event_flags & <number><unknown>EventSettings[modifier])),\n                });\n            }\n        }\n\n        if (this.qualsPool) {\n            for (const song of this.qualsPool.songs) {\n                song.mapOptions = [];\n                for (const modifier in GameOptions) {\n                    if (isNaN(Number(modifier))) {\n                        if (modifier == \"None\") continue;\n                        song.mapOptions.push({\n                            name: modifier.replace(/([A-Z])/g, \" $1\").trim(),\n                            value: GameOptions[modifier],\n                            isSelected: (<number><unknown>GameOptions[modifier] == (song.flags & <number><unknown>GameOptions[modifier])),\n                        });\n                    }\n                }\n                song.pOptions = [];\n                for (const modifier in PlayerOptions) {\n                    if (isNaN(Number(modifier))) {\n                        if (modifier == \"None\") continue;\n                        song.pOptions.push({\n                            name: modifier.replace(/([A-Z])/g, \" $1\").trim(),\n                            value: PlayerOptions[modifier],\n                            isSelected: (<number><unknown>PlayerOptions[modifier] == (song.playerOptions & <number><unknown>PlayerOptions[modifier])),\n                        });\n                    }\n                }\n                let songData: Beatsaver.map = await this.http.get<Beatsaver.map>(`https://beatsaver.com/api/maps/hash/${song.hash}`).toPromise();\n                let characteristics: Characteristic[] = [];\n                let curVersion = songData.versions.reduce((a, b) => (new Date(a.createdAt) > new Date(b.createdAt) ? a : b));\n                for (const characteristic of curVersion.diffs) {\n                    let curCharacteristic = characteristics.find(x => x.SerializedName === characteristic.characteristic);\n                    if (curCharacteristic) {\n                        let diff: BeatmapDifficulty = (<any>BeatmapDifficulty)[\n                            this.titleCase(characteristic.difficulty)\n                        ];\n                        curCharacteristic.Difficulties.push(diff);\n                    } else {\n                        let diff: BeatmapDifficulty = (<any>BeatmapDifficulty)[\n                            this.titleCase(characteristic.difficulty)\n                        ];\n                        characteristics.push({\n                            SerializedName: characteristic.characteristic,\n                            Difficulties: [diff],\n                        });\n                    }\n                    // let diffs: BeatmapDifficulty[] = [];\n                    // for (const diffLabel in characteristic.difficulties) {\n                    //     if (\n                    //         Object.prototype.hasOwnProperty.call(\n                    //             characteristic.difficulties,\n                    //             diffLabel\n                    //         )\n                    //     ) {\n                    //         if (characteristic.difficulties[diffLabel] != null) {\n                    //             let diff: BeatmapDifficulty = (<any>BeatmapDifficulty)[\n                    //                 this.titleCase(diffLabel)\n                    //             ];\n                    //             diffs.push(diff);\n                    //         }\n                    //     }\n                    // }\n                    // characteristics.push({\n                    //     SerializedName: characteristic.name,\n                    //     Difficulties: diffs,\n                    // });\n                }\n                song.characteristics = characteristics;\n                if (song.difficulty) song.difficulty = song.difficulty.toString();\n            }\n        }\n\n\n    }\n\n    titleCase(str): string {\n        var splitStr = str.split(\" \");\n        for (var i = 0; i < splitStr.length; i++) {\n            splitStr[i] =\n                splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n        }\n        return splitStr.join(\" \");\n    }\n\n    ngOnDestroy() {\n        this.ws.complete();\n    }\n\n    get bracket() {\n        return this.settingsForm.get('has_bracket');\n    }\n\n    get limit() {\n        return this.settingsForm.get('bracket_limit');\n    }\n\n    get quals() {\n        return this.settingsForm.get('has_quals');\n    }\n\n    get qualsMethod() {\n        return this.settingsForm.get('quals_method').value;\n    }\n\n    get type() {\n        return this.settingsForm.get('type');\n    }\n\n    getSongDiffs(song) {\n        if (song.selectedCharacteristic) {\n            return song.characteristics.find(x => x.SerializedName == song.selectedCharacteristic).Difficulties;\n        } else {\n            return [];\n        }\n    }\n\n    diffString(diff) {\n        return BeatmapDifficulty[diff];\n    }\n\n    async onSubmit() {\n        if (this.qualsPool && this.quals.value == true && this.taConnected && this.settingsForm.value.quals_method == \"ta_quals\") {\n            this.settingsForm.value.ta_event_flags = 0;\n            for (const modifier of this.baseTaSettings) {\n                if (modifier.isSelected) {\n                    this.settingsForm.value.ta_event_flags |= modifier.value;\n                }\n            }\n            for (const song of this.qualsPool.songs) {\n                song.flags = 0;\n                song.playerOptions = 0;\n                for (const modifier of song.mapOptions) {\n                    if (modifier.isSelected) song.flags |= modifier.value;\n                }\n                for (const modifier of song.pOptions) {\n                    if (modifier.isSelected) song.playerOptions |= modifier.value;\n                }\n                if (song.selectedCharacteristic == null || song.difficulty == null) {\n                    this.notif.showError('', 'Qualifiers must have selected difficulties');\n                    return;\n                }\n            }\n        }\n        let info = {\n            tournamentId: this.data.tournament.tournamentId,\n            settingsId: this.data.tournament.settingsId,\n            settings: this.settingsForm.value\n        }\n        if (this.base64 != null) {\n            console.log(this.base64);\n            await this.http.post(`/api/tournament/${info.tournamentId}/overlay`, { img: this.base64 }).toPromise();\n        }\n        try {\n            if (this.qualsPool && this.settingsForm.value.quals_method == \"ta_quals\") await this.http.put(`/api/tournament/${info.tournamentId}/updateFlags`, this.qualsPool.songs).toPromise();\n        } catch (error) {\n            console.error(error);\n        }\n        if (this.newQualSessions.length > 0) {\n            try {\n                await this.http.post(`/api/tournament/${this.data.tournament.tournamentId}/qualifiers/sessions/add`, this.newQualSessions).toPromise();\n            } catch (error) {\n                console.error(error);\n            }\n        }\n        this.updateSettings(info)\n            .subscribe(async data => {\n                if (!data.flag) {\n                    this.notif.showSuccess('', 'Successfully updated tournament settings');\n\n                } else {\n                    console.error('Error', data.err)\n                    this.notif.showError('', 'Error updating tournament settings');\n                }\n                this.dialogRef.close(this.settingsForm.value);\n            }, error => {\n                this.notif.showError('', 'Error updating tournament settings');\n                console.error(\"Error: \", error);\n                this.dialogRef.close(this.settingsForm.value);\n            });\n    }\n\n    updateSettings(data: any): Observable<any> {\n        return this.http.put(`/api/tournament/${data.tournamentId}/settings`, data);\n    }\n\n    selectedFile: File;\n    base64: string = null;\n\n\n    onFileChanged(event) {\n        this.selectedFile = event.target.files[0];\n        let reader = new FileReader();\n        // reader.readAsDataURL(this.selectedFile);\n        reader.readAsText(this.selectedFile, 'UTF-8');\n        reader.onload = () => {\n            this.base64 = <string>reader.result;\n        };\n    }\n\n    qualSessions: qualifierSession[] = [];\n    newQualSessions: qualifierSession[] = [];\n    newQualsTime = new FormControl();\n    newQualsCap: number = 15;\n\n    async removeSession(session: qualifierSession) {\n        console.log(session);\n        if (session.id) {\n            // delete request\n            await this.http.delete(`/api/tournament/${this.data.tournament.tournamentId}/qualifiers/sessions/delete/${session.id}`).toPromise();\n        }\n        this.qualSessions.splice(this.qualSessions.findIndex(x => x === session), 1);\n        this.newQualSessions.splice(this.newQualSessions.findIndex(x => x === session), 1);\n    }\n\n    createSession() {\n        this.qualSessions.push({ time: this.newQualsTime.value, limit: this.newQualsCap, allocated: 0, tournamentId: this.data.tournament.tournamentId });\n        this.newQualSessions.push({ time: this.newQualsTime.value, limit: this.newQualsCap, allocated: 0, tournamentId: this.data.tournament.tournamentId });\n    }\n\n    displayTime(dateString: string) {\n        return new Date(dateString).toLocaleString();\n    }\n}\n\n\n@Component({\n    selector: 'signUpDialog',\n    templateUrl: './signUpDialog.html',\n})\nexport class signUpDialog implements OnInit {\n\n    signUpForm: FormGroup;\n    id: number;\n    signUpComment: string = '';\n\n    filteredOptions: Observable<any>;\n    qualSessions: qualifierSession[];\n    selectedSession: qualifierSession;\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        private router: Router,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private dialogRef: MatDialogRef<signUpDialog>,\n        private notif: NotificationService\n    ) {\n\n    }\n\n    loading = false;\n\n    async ngOnInit() {\n        this.loading = true;\n        console.log(this.data);\n        this.id = this.data.tournament.tournamentId;\n        this.signUpComment = this.data.tournament.signup_comment;\n        this.signUpForm = this.fb.group({\n            tournamentId: this.id,\n            comment: ''\n        });\n        if (!!this.data.tournament.comment_required) {\n            this.signUpForm.controls['comment'].setValidators([Validators.required]);\n            this.signUpForm.controls['comment'].updateValueAndValidity();\n        }\n        this.qualSessions = await this.http.get<qualifierSession[]>(`/api/tournament/${this.data.tournament.tournamentId}/qualifiers/sessions`).toPromise();\n        this.loading = false;\n    }\n\n    get comment() {\n        return this.signUpForm.get('comment');\n    }\n\n    async onSubmit() {\n        try {\n            await this.http.post(`/api/tournament/${this.id}/signUp`, this.signUpForm.value).toPromise();\n            if (this.data.tournament.quals_method == 'live_quals' && this.selectedSession) {\n                await this.http.post(`/api/tournament/${this.id}/qualifiers/sessions/assign`, { sessionId: this.selectedSession.id }).toPromise();\n            }\n            this.notif.showInfo('', 'Successfully signed up');\n            this.dialogRef.close(true);\n        } catch (error) {\n            console.error('Error', error)\n            this.notif.showError('', 'Error signing up');\n            this.dialogRef.close(false);\n        }\n    }\n\n    signUp(data: any): Observable<any> {\n        return this.http.post(`/api/tournament/${this.id}/signUp`, data);\n    }\n\n    selectSession(session: qualifierSession) {\n        this.selectedSession = session;\n    }\n\n    displayTime(dateString: string) {\n        return new Date(dateString).toLocaleString();\n    }\n}\n\n@Component({\n    selector: 'addPlayerDialog',\n    templateUrl: './addPlayerDialog.html',\n})\nexport class addPlayerDialog implements OnInit {\n\n    addPlayerForm: FormGroup;\n    id: number;\n    signUpComment: string = '';\n\n    filteredOptions: Observable<any>;\n    users: any = [];\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        private router: Router,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private dialogRef: MatDialogRef<signUpDialog>,\n        private notif: NotificationService\n    ) {\n\n    }\n\n    ngOnInit() {\n        this.id = this.data.tournament.tournamentId;\n        // console.log(this.data)\n        this.signUpComment = this.data.tournament.signup_comment;\n        this.addPlayerForm = this.fb.group({\n            userId: ['', [Validators.required, this.requireMatch.bind(this)]],\n            tournamentId: this.id,\n            comment: ''\n        });\n        if (!!this.data.tournament.comment_required) {\n            this.addPlayerForm.controls['comment'].setValidators([Validators.required]);\n            this.addPlayerForm.controls['comment'].updateValueAndValidity();\n        }\n        this.getUsers()\n            .subscribe(data => {\n                this.users = data;\n                this.filteredOptions = this.addPlayerForm.valueChanges\n                    .pipe(\n                        startWith(''),\n                        map(value => typeof value === 'string' ? value : value.userId),\n                        map(userId => userId ? this._filter(userId) : this.users.slice())\n                    );\n            });\n    }\n\n    get comment() {\n        return this.addPlayerForm.get('comment');\n    }\n\n    async onSubmit() {\n        try {\n            await this.http.post(`/api/tournament/${this.id}/signUp`, this.addPlayerForm.value).toPromise();\n            this.notif.showInfo('', 'Successfully added participant');\n            this.dialogRef.close(true);\n        } catch (error) {\n            console.error('Error', error)\n            this.notif.showError('', 'Error adding participant');\n            this.dialogRef.close(false);\n        }\n        // this.signUp(this.addPlayerForm.value)\n        //     .subscribe(data => {\n        //         if (!data.flag) {\n        //             this.notif.showInfo('', 'Successfully added participant');\n        //             this.dialogRef.close(true);\n        //         } else {\n        //             console.error('Error', data.err)\n        //             this.notif.showError('', 'Error adding participant');\n        //             this.dialogRef.close(false);\n        //         }\n        //     }, error => {\n        //         this.notif.showError('', 'Error adding participant');\n        //         console.error(\"Error: \", error);\n        //         this.dialogRef.close(false);\n        //     });\n    }\n\n    signUp(data: any): Observable<any> {\n        return this.http.post(`/api/tournament/${this.id}/signUp`, data);\n    }\n\n    displayFn(id): string {\n        let user = this.users.find(x => x.discordId == id);\n        return user && user.name ? user.name : '';\n    }\n\n    private _filter(name: string) {\n        const filterValue = name.toLowerCase();\n        return this.users.filter(option => option.name.toLowerCase().indexOf(filterValue) === 0);\n    }\n\n    getUsers(): Observable<any> {\n        return this.http.get('/api/users');\n    }\n\n    private requireMatch(control: FormControl): ValidationErrors | null {\n        const selection: any = control.value;\n        if (!this.users.some(x => x.discordId == selection)) {\n            return { requireMatch: true };\n        }\n        return null;\n    }\n}\n","<div class=\"container grid\">\n    <div *ngIf=\"loading else loaded\">\n        <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 100px;\">\n    </div>\n\n    <ng-template #loaded>\n        <div class=\"card tournamentCard\" *ngFor=\"let tournament of tournaments\">\n            <a [title]=\"tournament.name\" [routerLink]=\"['/tournament',tournament.tournamentId]\">\n                <!-- <img src=\"https://beatkhanas3.s3.us-east-1.amazonaws.com/{{tournament.image}}\" class=\"card-img-top\"> -->\n                <img src=\"/assets/images/{{tournament.image}}\" class=\"card-img-top\">\n                <h5 class=\"card-title\">\n                    {{tournament.name}}\n                </h5>\n            </a>\n            <p class=\"card-text\">\n                Date: {{tournament.startDate | date: 'd/MM/yy, h:mm a'}} <br> Prize: <span [innerHTML]=\"tournament.prize | linkify: linkOptions\"></span> <br>\n                <a href=\"{{tournament.discord}}\">Discord</a><br>\n                <a href=\"{{tournament.twitchLink}}\">Twitch</a><br>\n                <span *ngIf=\"tournament.public == 0\" style=\"color:rgb(209, 23, 23);font-style: italic;\">*Private</span>\n            </p>\n            <p *ngIf=\"user && (user['roleIds'].includes('1') || user['roleIds'].includes('2'))\" class=\"card-text\">\n                <button mat-button color=\"primary\" (click)=\"archive(tournament.tournamentId)\">Archive Tournament</button>\n            </p>\n        </div>\n\n        <div *ngIf=\"user && (user['roleIds'].includes('1') || user['roleIds'].includes('3'))\" class=\"card\">\n            <a (click)=\"openDialog()\" style=\"cursor: pointer;\">\n                <i class=\"fas fa-plus-circle card-img-top\" style=\"font-size: 200px;border: 2px solid #c8825a; text-align: center;\"></i>\n                <h5 class=\"card-title\">\n                    Add new tournament\n                </h5>\n            </a>\n        </div>\n        <h4 *ngIf=\"tournaments.length == 0\">There are currently no active tournaments please check back later</h4>\n    </ng-template>\n</div>","<h1 mat-dialog-title>Create New Tournament</h1>\n<form [formGroup]=\"tournamentForm\" novalidate (ngSubmit)=\"onSubmit()\">\n    <!-- Value: {{ tournamentForm.value | json }} -->\n\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Tournament Name\" formControlName=\"name\">\n    </mat-form-field>\n    <br>\n    <mat-form-field>\n        <mat-label>Start Date (local)</mat-label>\n        <!-- <input matInput [matDatepicker]=\"dp3\" readonly formControlName=\"date\" (focus)=\"dp3.open()\" (click)=\"dp3.open()\">\n        <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\n        <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker> -->\n\n        <input matInput [ngxMatDatetimePicker]=\"picker\" readonly formControlName=\"date\" (focus)=\"picker.open()\" (click)=\"picker.open()\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <ngx-mat-datetime-picker #picker [showSeconds]=\"false\" [defaultTime]=\"[12,0,0]\">\n        </ngx-mat-datetime-picker>\n    </mat-form-field>\n    <br>\n    <mat-form-field>\n        <mat-label>End Date (local)</mat-label>\n        <!-- <input matInput [matDatepicker]=\"dp1\" readonly formControlName=\"endDate\" (focus)=\"dp1.open()\" (click)=\"dp1.open()\">\n        <mat-datepicker-toggle matSuffix [for]=\"dp1\"></mat-datepicker-toggle>\n        <mat-datepicker #dp1 disabled=\"false\"></mat-datepicker> -->\n        <input matInput [ngxMatDatetimePicker]=\"picker2\" readonly formControlName=\"endDate\" (focus)=\"picker2.open()\" (click)=\"picker2.open()\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n        <ngx-mat-datetime-picker #picker2 [showSeconds]=\"false\" [defaultTime]=\"[12,0,0]\">\n        </ngx-mat-datetime-picker>\n    </mat-form-field>\n    <br>\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Discord Link\" formControlName=\"discord\" pattern=\"^(?:https?:\\/\\/)?(?:www\\.)?discord\\.gg\\/([a-zA-Z0-9]+)($|\\?)\">\n        <mat-error *ngIf=\"discord.invalid && discord.touched\">\n            Please enter a valid link, Format: https://discord.gg/[code]\n        </mat-error>\n    </mat-form-field>\n\n    <br>\n    <!-- <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Owner\" formControlName=\"owner\">\n    </mat-form-field> -->\n    <!-- <mat-form-field>\n        <mat-label>Owner</mat-label>\n        <mat-select formControlName=\"owner\">\n            <mat-option *ngFor=\"let user of users\" [value]=\"user.discordId\">\n                {{user.name}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field> -->\n    <mat-form-field *ngIf=\"users.length > 0\">\n        <mat-label>Owner</mat-label>\n        <input type=\"text\" matInput formControlName=\"owner\" [matAutocomplete]=\"auto\">\n        <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn.bind(this)\">\n            <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.discordId\">\n                {{option.name}}\n            </mat-option>\n        </mat-autocomplete>\n    </mat-form-field>\n\n    <br>\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Twitch Link\" formControlName=\"twitchLink\" pattern=\"^(?:https?:\\/\\/)?(?:www\\.)?twitch\\.tv\\/([a-z0-9_]+)($|\\?)\">\n        <mat-error *ngIf=\"twitch.invalid && (twitch.dirty || twitch.touched)\">\n            Please enter a valid twitch link, Format: https://twitch.tv/[channel name]\n        </mat-error>\n    </mat-form-field>\n\n    <br>\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Prize Pool\" formControlName=\"prize\">\n    </mat-form-field>\n\n    <br>\n    <!-- <mat-form-field class=\"fill\">\n        <textarea matInput placeholder=\"Tournament Info\" formControlName=\"info\"></textarea>\n    </mat-form-field> -->\n    <label class=\"card-text\">Tournament Info:</label> <br><br>\n    <ckeditor placeholder=\"Tournament Info\" formControlName=\"info\" [config]=\"{ extraPlugins: ['colorbutton', 'iframe']}\"></ckeditor>\n\n    <br>\n    <!-- <mat-form-field class=\"fill\"> -->\n    <!-- <input matInput placeholder=\"Image (soonTM)\" formControlName=\"image\" [disabled]=\"true\"> -->\n    <input type=\"file\" (change)=\"onFileChanged($event)\" #fileInput accept=\"image/png, image/jpeg, image/gif, image/webp, image/svg+xml, image/tiff\">\n    <br>\n    <p class=\"card-text\" style=\"font-size: small;\">*Will be rescaled to 550px wide</p>\n    <br>\n    <mat-checkbox formControlName=\"is_mini\">\n        Is mini tournament?\n    </mat-checkbox>\n    <br>\n\n    <div mat-dialog-actions>\n        <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"tournamentForm.invalid || isSubmitted\">Add\n            Tournament</button>\n    </div>\n</form>","import { Component, OnInit, Inject, ViewEncapsulation } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AppComponent } from '../app.component';\nimport { Observable } from 'rxjs';\nimport { ITournament } from '../interfaces/tournament';\nimport { FormGroup, FormBuilder, Validators, FormControl, ValidationErrors } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { NotificationService } from '../services/toast.service';\nimport { map, startWith } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'app-tournaments',\n    templateUrl: './tournaments.component.html',\n    styleUrls: ['./tournaments.component.scss'],\n})\nexport class TournamentsComponent extends AppComponent implements OnInit {\n\n    title = \"BeatKhana!\";\n    private url = '/api/tournaments';\n    public tournaments = [];\n    loading = true;\n\n    linkOptions = {\n        target: {\n            url: \"_blank\"\n        }\n    }\n\n\n    ngOnInit(): void {\n        this.getTournaments()\n            .subscribe(data => {\n                data.sort(function (a, b) {\n                    return <any>new Date(a.startDate) - <any>new Date(b.startDate);\n                });\n                this.tournaments = data;\n                this.loading = false;\n            });\n        this.setTitle(this.title);\n        this.metaTags.defineTags('/', 'BeatKhana!', 'The one stop spot for all Beat Saber tournament information!', 'assets/images/icon/BeatKhana Logo RGB.png')\n    }\n\n    public getTournaments(): Observable<ITournament[]> {\n        return this.http.get<ITournament[]>(this.url);\n    }\n\n    openDialog() {\n        const dialog = this.dialog.open(newTournamentDialog, {\n            minWidth: '60vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n        });\n\n        dialog.afterClosed()\n            .subscribe(data => {\n                if(data) {\n                    this.getTournaments()\n                        .subscribe(data => {\n                            data.sort(function (a, b) {\n                                return <any>new Date(a.startDate) - <any>new Date(b.startDate);\n                            });\n                            this.tournaments = data;\n                            this.loading = false;\n                        });\n                }\n            });\n    }\n\n    archive(id: number) {\n        this.dialog.open(archiveTournamentDialog, {\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: { id: id }\n        });\n    }\n\n    public archiveTournament(id: number): Observable<ITournament[]> {\n        return this.http.put<ITournament[]>('/api/archiveTournament', { 'id': id });\n    }\n\n}\n\n@Component({\n    selector: 'newTournamentDialog',\n    templateUrl: './newTournamentDialog.html',\n})\nexport class newTournamentDialog implements OnInit {\n    tournamentForm: FormGroup;\n\n    users = [];\n    isSubmitted = false;\n\n    filteredOptions: Observable<any>;\n\n    constructor(private fb: FormBuilder, public http: HttpClient, private router: Router, private dialogRef: MatDialogRef<newTournamentDialog>, private notif: NotificationService) {\n        this.getUsers()\n            .subscribe(data => {\n                this.users = data;\n                this.filteredOptions = this.tournamentForm.valueChanges\n                    .pipe(\n                        startWith(''),\n                        map(value => typeof value === 'string' ? value : value.owner),\n                        map(owner => owner ? this._filter(owner) : this.users.slice())\n                    );\n            });\n    }\n\n    ngOnInit() {\n        this.tournamentForm = this.fb.group({\n            name: ['', [\n                Validators.required\n            ]],\n            date: ['', [\n                Validators.required\n            ]],\n            endDate: ['', [\n                Validators.required\n            ]],\n            discord: ['', [\n                Validators.required,\n                Validators.pattern('^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$')\n            ]],\n            owner: ['', [\n                Validators.required, this.requireMatch.bind(this)\n            ]],\n            twitchLink: ['', [\n                Validators.required\n            ]],\n            prize: '',\n            info: '',\n            image: ['', [\n                Validators.required\n            ]],\n            imgName: ['', [\n                Validators.required\n            ]],\n            is_mini: false,\n        });\n    }\n\n    private _filter(name: string) {\n        const filterValue = name.toLowerCase();\n\n        return this.users.filter(option => option.name.toLowerCase().indexOf(filterValue) === 0);\n    }\n\n    displayFn(id): string {\n        let user = this.users.find(x => x.discordId == id);\n        return user && user.name ? user.name : '';\n    }\n\n    private requireMatch(control: FormControl): ValidationErrors | null {\n        const selection: any = control.value;\n        if (!this.users.some(x => x.discordId == selection)) {\n            return { requireMatch: true };\n        }\n        return null;\n    }\n\n    get discord() {\n        return this.tournamentForm.get('discord');\n    }\n\n    get twitch() {\n        return this.tournamentForm.get('twitchLink');\n    }\n\n    public formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth()),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n\n        if (month.length < 2)\n            month = '0' + month;\n        if (day.length < 2)\n            day = '0' + day;\n\n        // return [year, month, day].join('-');\n        return new Date(Date.UTC(year, parseInt(month), parseInt(day)))\n    }\n\n    onSubmit() {\n        this.isSubmitted = true\n        this.tournamentForm.value.is_mini = +this.tournamentForm.value.is_mini;\n        // this.tournamentForm.value.date = this.formatDate(this.tournamentForm.value.date.toString())\n        // this.tournamentForm.value.endDate = this.formatDate(this.tournamentForm.value.endDate.toString())\n        \n        this.addTournament(this.tournamentForm.value)\n            .subscribe(data => {\n                this.notif.showSuccess('', 'Successfully created tournament');\n                this.dialogRef.close(true);\n            }, error => {\n                this.notif.showError('', 'Error creating tournament');\n                console.error(\"Error: \", error);\n                this.dialogRef.close(false);\n            });\n    }\n\n    getUsers(): Observable<any> {\n        return this.http.get('/api/users');\n    }\n\n    addTournament(tournament: ITournament): Observable<any> {\n        return this.http.post<any>('/api/tournament', tournament);\n    }\n\n    selectedFile: File;\n    base64: string;\n\n    onFileChanged(event) {\n        this.selectedFile = event.target.files[0];\n        this.tournamentForm.patchValue({ imgName: this.selectedFile.name });\n\n        let reader = new FileReader();\n        reader.readAsDataURL(this.selectedFile);\n        reader.onload = () => {\n            this.tournamentForm.patchValue({ image: reader.result });\n        };\n    }\n}\n\n@Component({\n    selector: 'archiveTournamentDialog',\n    templateUrl: './archiveTournamentDialog.html',\n})\nexport class archiveTournamentDialog implements OnInit {\n    archiveForm: FormGroup;\n    tournamentId: number;\n\n    constructor(private fb: FormBuilder, public http: HttpClient, private router: Router, @Inject(MAT_DIALOG_DATA) public data: any, private notif: NotificationService) { }\n\n    ngOnInit() {\n        this.archiveForm = this.fb.group({\n            first: ['', [\n                Validators.required\n            ]],\n            second: ['', [\n                Validators.required\n            ]],\n            third: ['', [\n                Validators.required\n            ]],\n            id: this.data.id\n        })\n    }\n\n    async onSubmit() {\n        try {\n            await this.http.put<any>('/api/archiveTournament', this.archiveForm.value).toPromise();\n            this.notif.showSuccess('', 'Successfully archived tournament');\n            this.router.navigateByUrl('/archive', { skipLocationChange: true }).then(() => {\n                this.router.navigate(['']);\n            });\n        } catch (error) {\n            console.error(\"Error: \", error);\n            this.notif.showError('', 'Error archiving tournament');\n        }\n    }\n}\n","<h1 mat-dialog-title>Archive Tournament</h1>\n<form [formGroup]=\"archiveForm\" novalidate (ngSubmit)=\"onSubmit()\">\n    <!-- Value: {{ archiveForm.value | json }} -->\n\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"First\" formControlName=\"first\">\n    </mat-form-field>\n    <br>\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Second\" formControlName=\"second\">\n    </mat-form-field>\n    <br>\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Third\" formControlName=\"third\">\n    </mat-form-field>\n\n\n    <div mat-dialog-actions>\n        <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n        <button mat-raised-button color=\"primary\" type=\"submit\" mat-dialog-close [disabled]=\"archiveForm.invalid\">Archive\n            Tournament</button>\n    </div>\n</form>","<div *ngIf=\"!curUser else loaded\">\n    <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 100px;\">\n</div>\n\n<ng-template #loaded>\n    <div class=\"container\">\n        <div class=\"card noHover\">\n            <div class=\"card-body\">\n                <div class=\"right-container\">\n                    <img class=\"profileImg\" src=\"{{ curUser.avatar }}\" />\n                    <ng-container *ngIf=\"user && (user['roleIds'].includes('1') || user['roleIds'].includes('2'))\">\n                        <div class=\"staff\">\n                            <button mat-stroked-button color=\"primary\" (click)=\"editBadges()\">Edit Badges</button>\n                        </div>\n                    </ng-container>\n                </div>\n                <h1>\n                    {{ curUser.name }}\n                    <img class=\"countryImg\" src=\"\\assets/flags/{{curUser.country | uppercase}}.png\" alt=\"\">\n                </h1>\n                <div *ngIf=\"curUser.badges.length > 0\" class=\"badges\">\n                    <img *ngFor=\"let badge of curUser.badges\" src=\"assets/badges/{{badge.image}}.png\"\n                        alt=\"{{badge.description}}\" title=\"{{badge.description}}\">\n                </div>\n                <p class=\"card-text\">\n                    <b>Global Rank:</b> #{{curUser.globalRank}} <br>\n                    <b>Regional Rank:</b> #{{curUser.localRank}} <br>\n                    <a *ngIf=\"user.ssId\" href=\"https://scoresaber.com/u/{{curUser.ssId}}\" target=\"_blank\">Scoresaber</a>\n                    <br>\n                    <a href=\"https://twitch.tv/{{curUser.twitchName}}\" target=\"_blank\">Twitch</a>\n                </p>\n                <div style=\"float: left;\">\n                    <h4>Previous Tournaments</h4>\n                    <ul class=\"card-text\" style=\"margin-left:10px\">\n                        <li *ngFor=\"let tournament of curUser.tournaments\">{{tournament}}</li>\n                    </ul>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</ng-template>","import { Component, OnInit } from '@angular/core';\nimport { AppComponent } from '../app.component';\nimport { Observable } from 'rxjs';\nimport { AssignBadgesComponent } from '../_modals/assign-badges/assign-badges.component';\nimport { userAPI } from '../_models/user.model';\n\n@Component({\n    selector: 'app-user',\n    templateUrl: './user.component.html',\n    styleUrls: ['./user.component.scss']\n})\nexport class UserComponent extends AppComponent implements OnInit {\n\n    title = \" | BeatKhana!\";\n    private url = '/api/user/';\n    userId: string;\n    public curUser: userAPI = null;\n    loading = true;\n\n    ngOnInit(): void {\n        this.route.paramMap.subscribe(params => {\n            this.userId = params.get('id');\n            this.url += this.userId;\n            this.getUser()\n                .subscribe( data => {\n                    this.curUser = data;\n                    this.setTitle(this.curUser.name+\"'s Profile\" + this.title);\n                    if(this.curUser.avatar.includes('api') || this.curUser.avatar.includes('oculus')) {\n                        this.curUser.avatar = \"https://new.scoresaber.com\" + this.curUser.avatar;\n                    } else {\n                        this.curUser.avatar = `/${this.curUser.avatar}` + (this.curUser.avatar.substring(0, 2) == 'a_' ? '.gif' : '.webp');\n                        this.curUser.avatar = `https://cdn.discordapp.com/avatars/${this.curUser.discordId}${ this.curUser.avatar }`\n                    }\n                });\n        });\n    }\n\n    getUser(): Observable<any> {\n        return this.http.get(this.url);\n    }\n\n    editBadges() {\n        const dialog = this.dialog.open(AssignBadgesComponent, {\n            minWidth: '60vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: {\n                user: this.curUser,\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(async data => {\n                if (data) {\n                    this.curUser = <userAPI>await this.http.get(this.url).toPromise();\n                }\n            });\n    }\n\n}\n","<div *ngIf=\"loading else loaded\">\n    <img src=\"/assets/svg/BeatKhana Logo RGB animated.svg\" style=\"display: block;\n        margin-left: auto;\n        margin-right: auto;\n        width: 100px;\">\n</div>\n\n<ng-template #loaded>\n    <div class=\"container\">\n        <div class=\"card noHover\">\n            <div class=\"card-body\">\n                <h1>All Users</h1>\n                <p class=\"card-text\">\n                    <mat-form-field>\n                        <mat-label>Search</mat-label>\n                        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input autocomplete=\"off\">\n                    </mat-form-field>\n                </p>\n                <table mat-table [dataSource]=\"dataSource\" class=\"card-text\" matSort matSortActive=\"name\"\n                    matSortDirection=\"asc\">\n                    <ng-container matColumnDef=\"name\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n                        <td mat-cell *matCellDef=\"let user\">\n                            <a [routerLink]=\"['/user', user.discordId]\">\n                                {{user.name}}\n                            </a>\n                            <!-- {{user.name}} -->\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"ssLink\">\n                        <th mat-header-cell *matHeaderCellDef>SS Link</th>\n                        <td mat-cell *matCellDef=\"let user\">\n                            <a *ngIf=\"user.ssId\" href=\"https://scoresaber.com/u/{{user.ssId}}\" target=\"_blank\">Link</a>\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"twitch\">\n                        <th mat-header-cell *matHeaderCellDef>Twitch Link</th>\n                        <td mat-cell *matCellDef=\"let user\">\n                            <a href=\"https://twitch.tv/{{user.twitchName}}\" target=\"_blank\">{{user.twitchName}}</a>\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"globalRank\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Global Rank</th>\n                        <td mat-cell *matCellDef=\"let user\">\n                            {{user.globalRank}}\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"localRank\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Regional Rank</th>\n                        <td mat-cell *matCellDef=\"let user\">\n                            {{user.localRank}}\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"country\">\n                        <th mat-header-cell *matHeaderCellDef>Country</th>\n                        <td mat-cell *matCellDef=\"let user\">\n                            {{user.country}} <img src=\"\\assets/flags/{{user.country}}.png\" alt=\"{{user.country}} Flag\"\n                                style=\"height: 20px;border: none;\">\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"tourneyRank\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Tournament Rank</th>\n                        <td mat-cell *matCellDef=\"let user\">\n                            {{user.tourneyRank}}\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"TR\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>TR</th>\n                        <td mat-cell *matCellDef=\"let user\">\n                            {{user.TR}}\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"pronoun\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Pronoun</th>\n                        <td mat-cell *matCellDef=\"let user\">\n                            {{user.pronoun}}\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"roleNames\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Roles</th>\n                        <td mat-cell *matCellDef=\"let user\">\n                            {{user.roleNames}}\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"edit\">\n                        <th mat-header-cell *matHeaderCellDef></th>\n                        <td mat-cell *matCellDef=\"let user\">\n                            <button mat-button color=\"primary\" (click)=\"editUser(user.discordId)\">Edit</button>\n                        </td>\n                    </ng-container>\n\n                    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n                    <tr mat-row *matRowDef=\"let myRowData; columns: columnsToDisplay\"></tr>\n                </table>\n                <mat-paginator [pageSize]=\"25\" [pageSizeOptions]=\"[10, 25, 50, 100]\" showFirstLastButtons>\n                </mat-paginator>\n            </div>\n        </div>\n    </div>\n</ng-template>","<h1 mat-dialog-title>Edit {{data.selUser.name}}</h1>\n<form [formGroup]=\"userForm\" novalidate (ngSubmit)=\"onSubmit()\">\n    <!-- Value: {{ userForm.value | json }} -->\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Name\" formControlName=\"name\">\n    </mat-form-field>\n    <br>\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Score Saber ID\" formControlName=\"ssId\">\n    </mat-form-field>\n    <br>\n    <mat-form-field class=\"fill\">\n        <input matInput placeholder=\"Twitch Name\" formControlName=\"twitchName\">\n    </mat-form-field>\n    <br>\n    <label id=\"pronounlabel\">Preferred Pronoun:</label>\n    <mat-radio-group aria-labelledby=\"pronounlabel\" formControlName=\"pronoun\" class=\"pronounRadio\">\n        <mat-radio-button *ngFor=\"let pronoun of pronouns\" class=\"radio-button\" value=\"{{pronoun}}\">{{pronoun}}\n        </mat-radio-button>\n        <mat-radio-button class=\"radio-button\" value=\"Other\">Other</mat-radio-button>\n        <mat-form-field style=\"margin-top: 5px;\" class=\"fill\" *ngIf=\"pronouns.indexOf(userForm.value.pronoun) == -1\">\n            <input matInput placeholder=\"Preferred Pronoun\" formControlName=\"pronoun\">\n        </mat-form-field>\n    </mat-radio-group>\n    <br>\n    <label>Roles:</label>\n    <div class=\"roles\">\n        <mat-checkbox *ngFor=\"let role of userRoles\" (change)=\"updateRoleId(role.id)\" [checked]=\"roleIds.includes(+role.id)\" [disabled]=\"role.id <= minRole\">\n            {{role.name}}\n        </mat-checkbox>\n    </div>\n\n    <div mat-dialog-actions>\n        <button mat-raised-button color=\"warn\" mat-dialog-close>Close</button>\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"userForm.invalid\">Update user</button>\n    </div>\n</form>","import { DataSource } from '@angular/cdk/table';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Observable } from 'rxjs';\nimport { AppComponent } from '../app.component';\nimport { NotificationService } from '../services/toast.service';\n\n@Component({\n    selector: 'app-users',\n    templateUrl: './users.component.html',\n    styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent extends AppComponent implements OnInit {\n\n    users = [];\n    loading = true;\n\n    columnsToDisplay = ['name', 'ssLink', 'twitch', 'globalRank', 'localRank', 'country', 'tourneyRank', 'TR', 'pronoun', 'roleNames', 'edit']\n    dataSource: MatTableDataSource<any>;\n\n    // @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n    // @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n    private paginator: MatPaginator;\n    private sort: MatSort;\n\n    @ViewChild(MatSort) set matSort(ms: MatSort) {\n        this.sort = ms;\n        this.setDataSourceAttributes();\n    }\n\n    @ViewChild(MatPaginator) set matPaginator(mp: MatPaginator) {\n        this.paginator = mp;\n        this.setDataSourceAttributes();\n    }\n\n    ngOnInit(): void {\n        // this.dataSource = new MatTableDataSource();\n        // this.setUsers();\n        this.getUsers()\n            .subscribe(data => {\n                this.loading = false;\n                this.users = data;\n                this.dataSource = new MatTableDataSource(this.users);\n                this.setDataSourceAttributes();\n            });\n        this.setTitle('All Users | BeatKhana!');\n    }\n\n    getUsers(): Observable<any> {\n        return this.http.get('/api/users');\n    }\n\n    editUser(id) {\n        const dialog = this.dialog.open(editUserDialog, {\n            // height: '400px',\n            minWidth: '60vw',\n            maxHeight: '90vh',\n            maxWidth: '95vw',\n            data: {\n                selUser: this.users.find(x => x.discordId == id),\n                curUser: this.user\n            }\n        });\n\n        dialog.afterClosed()\n            .subscribe(data => {\n                if (data) {\n                    let i = this.users.findIndex(x => x.discordId == data.discordId);\n                    this.users[i] = { ...this.users[i], ...data };\n                    this.dataSource.data = this.users;\n                }\n            });\n    }\n\n    setDataSourceAttributes() {\n        if (!this.loading) {\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n        }\n    }\n\n    applyFilter(event: Event) {\n        const filterValue = (event.target as HTMLInputElement).value;\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n\n        if (this.dataSource.paginator) {\n            this.dataSource.paginator.firstPage();\n        }\n    }\n}\n\n@Component({\n    selector: 'editUserDialog',\n    templateUrl: './editUserDialog.html',\n    styleUrls: ['./users.component.scss']\n})\nexport class editUserDialog implements OnInit {\n\n    userForm: FormGroup;\n\n    pronouns = ['He/Him', 'She/Her', 'They/Them'];\n\n    userRoles = [\n        {\n            id: 1,\n            name: 'Admin'\n        },\n        {\n            id: 2,\n            name: 'Staff'\n        },\n        {\n            id: 3,\n            name: 'Tournament Host'\n        },\n        {\n            id: 4,\n            name: 'Coordinator'\n        },\n        {\n            id: 5,\n            name: 'Competitor'\n        },\n        {\n            id: 6,\n            name: 'Mini Tournament Team'\n        },\n    ]\n\n    constructor(\n        private fb: FormBuilder,\n        public http: HttpClient,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private dialogRef: MatDialogRef<editUserDialog>,\n        private notif: NotificationService\n    ) { }\n\n    roleIds = [];\n    minRole = 999;\n\n    ngOnInit() {\n        this.userForm = this.fb.group({\n            discordId: [this.data.selUser.discordId, [\n                Validators.required\n            ]],\n            ssId: [this.data.selUser.ssId, [\n                // Validators.required\n            ]],\n            name: [this.data.selUser.name, [\n                Validators.required\n            ]],\n            twitchName: [this.data.selUser.twitchName, [\n                Validators.required\n            ]],\n            pronoun: [this.data.selUser.pronoun, [\n                Validators.required\n            ]],\n            roleIds: this.fb.array([])\n        });\n        this.userForm.value.roleIds = [];\n        this.roleIds = this.data.selUser.roleIds != null ? this.data.selUser.roleIds.split(', ').map(x => +x) : [];\n        this.minRole = Math.min(...this.data.curUser.roleIds.map(x => +x));\n    }\n\n    async onSubmit() {\n        try {\n            await this.http.put('/api/user/' + this.userForm.value.discordId, this.userForm.value).toPromise();\n            let returnData = this.userForm.value;\n            if (this.userForm.value.roleIds.length == 0) {\n                this.userForm.value.roleIds = this.data.selUser.roleIds;\n            } else {\n                let roleNames = this.userForm.value.roleIds.map(x => this.userRoles[this.userRoles.findIndex(y => y.id == x)].name).join(', ');\n                this.userForm.value.roleIds = this.userForm.value.roleIds.join(', ')\n                returnData = { ...this.userForm.value, ...{ roleNames: roleNames } };\n            }\n            this.notif.showSuccess('', 'Successfully updated user');\n            this.dialogRef.close(returnData);\n        } catch (error) {\n            this.notif.showError('', 'Error updating user');\n            console.error(\"Error: \", error);\n            this.dialogRef.close(this.userForm.value);\n        }\n    }\n\n    updateRoleId(roleId) {\n        roleId = parseInt(roleId)\n        var i = this.roleIds.indexOf(roleId);\n        if (i === -1) {\n            this.roleIds.push(roleId);\n        } else {\n            this.roleIds.splice(i, 1);\n        }\n        this.userForm.value.roleIds = this.roleIds;\n        // console.log(this.roleIds)\n    }\n\n    updateUser(): Observable<any> {\n        return this.http.put('/api/user/' + this.userForm.value.discordId, this.userForm.value);\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}