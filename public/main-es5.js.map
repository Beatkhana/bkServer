{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/archive/archive.component.ts","webpack:///src/app/archive/archive.component.html","webpack:///src/app/tournament/tournament.component.ts","webpack:///src/app/tournament/tournament.component.html","webpack:///src/app/tournaments/tournaments.component.ts","webpack:///src/app/tournaments/tournaments.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","titleService","http","route","title","newTitle","setTitle","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ArchiveComponent","url","tournaments","getTournaments","subscribe","data","get","TournamentComponent","paramMap","params","tourneyId","console","log","name","TournamentsComponent","queryParams","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TournamentsComponent } from './tournaments/tournaments.component';\nimport { TournamentComponent } from './tournament/tournament.component';\nimport { ArchiveComponent } from './archive/archive.component';\n\n\nconst routes: Routes = [\n  {path: '', component: TournamentsComponent },\n  {path: 'archive', component: ArchiveComponent },\n  {path: 'tournament/:id', component: TournamentComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    title = 'BeatKhana!';\n    public constructor(public titleService: Title, public http: HttpClient, public route: ActivatedRoute) {  }\n\n    public setTitle(newTitle: string) {\n        this.titleService.setTitle(newTitle);\n    }\n}\n","<header>\n    <nav>\n        <div class=\"container\">\n            <div class=\"banner\">\n                <a routerLink=\"/\">\n                    <img src=\"/assets\\svg\\BeatKhana Logo Text RGB2.svg\" alt=\"BeatKhana! Logo\" height=\"50\">\n                </a>\n            </div>\n            <div>\n                <ul>\n                    <li><a routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact:true}\" class=\"navLink btn-reload\">Home</a></li>\n                    <li><a routerLink=\"/archive\" routerLinkActive=\"active\" class=\"navLink btn-reload\">Archive</a></li>\n                    <li><a routerLink=\"/rankings\" routerLinkActive=\"active\" class=\"navLink btn-reload\">Rankings</a></li>\n                    <li><a routerLink=\"/team\" routerLinkActive=\"active\" class=\"navLink btn-reload\">Team</a></li>\n                </ul>\n            </div>\n            <div style=\"float:right;\">\n                <ul>\n                    <li>\n                        <a href=\"\" class=\"navLink noHover\">\n                            <span class=\"icon\">\n                          </span>\n                        </a>\n                    </li>\n                    <li>\n                        <a href=\"\" class=\"navLink noHover\">\n                            <span class=\"icon\">\n                          </span>\n                        </a>\n                    </li>\n                    <li><a href=\"https://discord.com/api/oauth2/authorize?client_id=670442368385810452&redirect_uri=http%3A%2F%2Flocalhost%3A4200%2Fapi%2FdiscordAuth&response_type=code&scope=identify\" class=\"navLink\">Login</a></li>\n                </ul>\n            </div>\n        </div>\n    </nav>\n</header>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TournamentsComponent } from './tournaments/tournaments.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { TournamentComponent } from './tournament/tournament.component';\nimport { ArchiveComponent } from './archive/archive.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        TournamentsComponent,\n        TournamentComponent,\n        ArchiveComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        HttpClientModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ITournament } from '../interfaces/tournament';\nimport { Observable } from 'rxjs';\nimport { AppComponent } from '../app.component';\n\n@Component({\n    selector: 'app-archive',\n    templateUrl: './archive.component.html',\n    styleUrls: ['./archive.component.scss']\n})\nexport class ArchiveComponent extends AppComponent implements OnInit {\n\n    title = \"BeatKhana!\";\n    private url = '/api/tournament/archived';\n    public tournaments = [];\n    private tourneyId: string;\n\n    ngOnInit(): void {\n        this.getTournaments()\n            .subscribe(data => this.tournaments = data);\n        this.setTitle(this.title);\n    }\n\n    public getTournaments(): Observable<ITournament[]> {\n        return this.http.get<ITournament[]>(this.url);\n    }\n\n}\n","<div class=\"container grid\">\n    <div class=\"card\" *ngFor=\"let tournament of tournaments\">\n        <a [title]=\"tournament.name\" [routerLink]=\"['/tournament',tournament.id]\" class=\"btn-reload\">\n            <img src=\"\\{{tournament.image | lowercase}}\" class=\"card-img-top\">\n            <h5 class=\"card-title\">\n                {{tournament.name}}\n            </h5>\n        </a>\n        <p class=\"card-text\">\n            Date: {{tournament.date}} <br> Time: {{tournament.time}} <br> Signup: {{tournament.signup}} <br>\n            <a href=\"<?= $tournament->signup ?>\">Discord</a><br>\n        </p>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AppComponent } from '../app.component';\nimport { ITournament } from '../interfaces/tournament';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'app-tournament',\n    templateUrl: './tournament.component.html',\n    styleUrls: ['./tournament.component.scss']\n})\nexport class TournamentComponent extends AppComponent implements OnInit {\n\n    title = \"BeatKhana!\";\n    private url = '/api/tournament';\n    public tournaments = [];\n    private tourneyId: string;\n\n    ngOnInit(): void {\n        this.route.paramMap.subscribe(params => {\n            this.tourneyId = params.get('id');\n            console.log(this.tourneyId);\n            this.getTournaments()\n                .subscribe(data => {\n                    this.tournaments = data;\n                    console.log(data);\n                    this.setTitle(this.tournaments[0].name + ' | ' + this.title);\n                });\n        });\n    }\n\n    public getTournaments(): Observable<ITournament[]> {\n        console.log(this.url + '/' + this.tourneyId)\n        return this.http.get<ITournament[]>(this.url + '/' + this.tourneyId);\n    }\n\n}\n","<!-- <p>tournament works!</p> -->\n<div *ngFor=\"let tournament of tournaments\" class=\"container\">\n    <!-- <div class=\"card\">\n        <img class=\"tourneyImg\" src=\"\\{{tournament.image}}\" alt=\"\">\n        <h1>{{tournament.name}}</h1>\n        <br>\n        <p>\n            Date: {{tournament.date}} <br> Time: {{tournament.time}} <br> Prize pool: {{tournament.prize}} <br>\n\n        </p>\n    </div> -->\n    <div class=\"card noHover\">\n        <div class=\"card-body\">\n            <img class=\"tourneyImg\" src=\"\\{{ tournament.image | lowercase }}\" alt=\"\" />\n            <h1>{{ tournament.name }}</h1>\n            <br />\n            <p class=\"card-text\">\n                <span *ngIf=\"tournament.archived == 1\">\n                    <b>Archived <br /></b>\n                </span>\n                <span *ngIf=\"tournament.info != null\">\n                    <b>{{ tournament.info }} <br /></b>\n                </span> Date: {{ tournament.date }} <br /> Time: {{ tournament.time }} <br />\n                <span *ngIf=\"tournament.info != null; else noPrize\">\n                    Prize pool: {{ tournament.prize }} <br />\n                </span>\n                <ng-template #noPrize>Prize Pool: Not announced yet <br></ng-template>\n                <span *ngIf=\"tournament.signup != null\">\n                    Signup: {{ tournament.signup }} <br />\n                </span>\n                <span *ngIf=\"tournament.twitchLink != null\">\n                    <a href=\"{{ tournament.twitchLink }}\" target=\"new\">Twitch</a> <br />\n                </span>\n            </p>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AppComponent } from '../app.component';\nimport { Observable } from 'rxjs';\nimport { ITournament } from '../interfaces/tournament';\n\n@Component({\n    selector: 'app-tournaments',\n    templateUrl: './tournaments.component.html',\n    styleUrls: ['./tournaments.component.scss']\n})\nexport class TournamentsComponent extends AppComponent implements OnInit {\n\n    title = \"BeatKhana!\";\n    private url = '/api/tournaments';\n    public tournaments = [];\n    \n    ngOnInit(): void {\n        this.getTournaments()\n            .subscribe(data => this.tournaments = data);\n        this.setTitle(this.title);\n        this.route.queryParams.subscribe(params => {\n            if (typeof params['code'] != 'undefined') {\n                // const fragment = new URLSearchParams(window.location.hash.slice(1));\n                // const accessToken = fragment.get(\"access_token\");\n\t\t\t\t// const tokenType = fragment.get(\"token_type\");\n                // console.log(fragment);\n                // console.log(accessToken);\n                // console.log(tokenType);\n            }\n            // console.log(params['code']);\n            // this.param2 = params['param2'];\n        });\n    }\n\n    public getTournaments(): Observable<ITournament[]> {\n        return this.http.get<ITournament[]>(this.url);\n    }\n\n}\n","<div class=\"container grid\">\n    <div class=\"card\" *ngFor=\"let tournament of tournaments\">\n        <a [title]=\"tournament.name\" [routerLink]=\"['/tournament',tournament.id]\" class=\"btn-reload\">\n            <img src=\"\\{{tournament.image | lowercase}}\" class=\"card-img-top\">\n            <h5 class=\"card-title\">\n                {{tournament.name}}\n            </h5>\n        </a>\n        <p class=\"card-text\">\n            Date: {{tournament.date}} <br> Time: {{tournament.time}} <br> Signup: {{tournament.signup}} <br>\n            <a href=\"<?= $tournament->signup ?>\">Discord</a><br>\n        </p>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}